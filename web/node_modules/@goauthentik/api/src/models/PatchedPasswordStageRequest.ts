/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BackendsEnum } from './BackendsEnum';
import {
    BackendsEnumFromJSON,
    BackendsEnumFromJSONTyped,
    BackendsEnumToJSON,
} from './BackendsEnum';
import type { FlowSetRequest } from './FlowSetRequest';
import {
    FlowSetRequestFromJSON,
    FlowSetRequestFromJSONTyped,
    FlowSetRequestToJSON,
} from './FlowSetRequest';

/**
 * PasswordStage Serializer
 * @export
 * @interface PatchedPasswordStageRequest
 */
export interface PatchedPasswordStageRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedPasswordStageRequest
     */
    name?: string;
    /**
     * 
     * @type {Array<FlowSetRequest>}
     * @memberof PatchedPasswordStageRequest
     */
    flowSet?: Array<FlowSetRequest>;
    /**
     * Selection of backends to test the password against.
     * @type {Array<BackendsEnum>}
     * @memberof PatchedPasswordStageRequest
     */
    backends?: Array<BackendsEnum>;
    /**
     * Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
     * @type {string}
     * @memberof PatchedPasswordStageRequest
     */
    configureFlow?: string | null;
    /**
     * How many attempts a user has before the flow is canceled. To lock the user out, use a reputation policy and a user_write stage.
     * @type {number}
     * @memberof PatchedPasswordStageRequest
     */
    failedAttemptsBeforeCancel?: number;
}

/**
 * Check if a given object implements the PatchedPasswordStageRequest interface.
 */
export function instanceOfPatchedPasswordStageRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedPasswordStageRequestFromJSON(json: any): PatchedPasswordStageRequest {
    return PatchedPasswordStageRequestFromJSONTyped(json, false);
}

export function PatchedPasswordStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedPasswordStageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'flowSet': !exists(json, 'flow_set') ? undefined : ((json['flow_set'] as Array<any>).map(FlowSetRequestFromJSON)),
        'backends': !exists(json, 'backends') ? undefined : ((json['backends'] as Array<any>).map(BackendsEnumFromJSON)),
        'configureFlow': !exists(json, 'configure_flow') ? undefined : json['configure_flow'],
        'failedAttemptsBeforeCancel': !exists(json, 'failed_attempts_before_cancel') ? undefined : json['failed_attempts_before_cancel'],
    };
}

export function PatchedPasswordStageRequestToJSON(value?: PatchedPasswordStageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : ((value.flowSet as Array<any>).map(FlowSetRequestToJSON)),
        'backends': value.backends === undefined ? undefined : ((value.backends as Array<any>).map(BackendsEnumToJSON)),
        'configure_flow': value.configureFlow,
        'failed_attempts_before_cancel': value.failedAttemptsBeforeCancel,
    };
}

