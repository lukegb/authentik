/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FlowSetRequest } from './FlowSetRequest';
/**
 * AuthenticatorStaticStage Serializer
 * @export
 * @interface PatchedAuthenticatorStaticStageRequest
 */
export interface PatchedAuthenticatorStaticStageRequest {
    /**
     *
     * @type {string}
     * @memberof PatchedAuthenticatorStaticStageRequest
     */
    name?: string;
    /**
     *
     * @type {Array<FlowSetRequest>}
     * @memberof PatchedAuthenticatorStaticStageRequest
     */
    flowSet?: Array<FlowSetRequest>;
    /**
     * Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
     * @type {string}
     * @memberof PatchedAuthenticatorStaticStageRequest
     */
    configureFlow?: string | null;
    /**
     *
     * @type {string}
     * @memberof PatchedAuthenticatorStaticStageRequest
     */
    friendlyName?: string | null;
    /**
     *
     * @type {number}
     * @memberof PatchedAuthenticatorStaticStageRequest
     */
    tokenCount?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedAuthenticatorStaticStageRequest
     */
    tokenLength?: number;
}
/**
 * Check if a given object implements the PatchedAuthenticatorStaticStageRequest interface.
 */
export declare function instanceOfPatchedAuthenticatorStaticStageRequest(value: object): boolean;
export declare function PatchedAuthenticatorStaticStageRequestFromJSON(json: any): PatchedAuthenticatorStaticStageRequest;
export declare function PatchedAuthenticatorStaticStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedAuthenticatorStaticStageRequest;
export declare function PatchedAuthenticatorStaticStageRequestToJSON(value?: PatchedAuthenticatorStaticStageRequest | null): any;
