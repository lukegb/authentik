"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventToJSON = exports.EventFromJSONTyped = exports.EventFromJSON = exports.instanceOfEvent = void 0;
const runtime_1 = require("../runtime");
const EventActions_1 = require("./EventActions");
/**
 * Check if a given object implements the Event interface.
 */
function instanceOfEvent(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "action" in value;
    isInstance = isInstance && "app" in value;
    isInstance = isInstance && "created" in value;
    return isInstance;
}
exports.instanceOfEvent = instanceOfEvent;
function EventFromJSON(json) {
    return EventFromJSONTyped(json, false);
}
exports.EventFromJSON = EventFromJSON;
function EventFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'user': !(0, runtime_1.exists)(json, 'user') ? undefined : json['user'],
        'action': (0, EventActions_1.EventActionsFromJSON)(json['action']),
        'app': json['app'],
        'context': !(0, runtime_1.exists)(json, 'context') ? undefined : json['context'],
        'clientIp': !(0, runtime_1.exists)(json, 'client_ip') ? undefined : json['client_ip'],
        'created': (new Date(json['created'])),
        'expires': !(0, runtime_1.exists)(json, 'expires') ? undefined : (new Date(json['expires'])),
        'brand': !(0, runtime_1.exists)(json, 'brand') ? undefined : json['brand'],
    };
}
exports.EventFromJSONTyped = EventFromJSONTyped;
function EventToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'user': value.user,
        'action': (0, EventActions_1.EventActionsToJSON)(value.action),
        'app': value.app,
        'context': value.context,
        'client_ip': value.clientIp,
        'expires': value.expires === undefined ? undefined : (value.expires.toISOString()),
        'brand': value.brand,
    };
}
exports.EventToJSON = EventToJSON;
