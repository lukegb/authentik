/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OutpostTypeEnum } from './OutpostTypeEnum';
import {
    OutpostTypeEnumFromJSON,
    OutpostTypeEnumFromJSONTyped,
    OutpostTypeEnumToJSON,
} from './OutpostTypeEnum';

/**
 * Outpost Serializer
 * @export
 * @interface PatchedOutpostRequest
 */
export interface PatchedOutpostRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedOutpostRequest
     */
    name?: string;
    /**
     * 
     * @type {OutpostTypeEnum}
     * @memberof PatchedOutpostRequest
     */
    type?: OutpostTypeEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof PatchedOutpostRequest
     */
    providers?: Array<number>;
    /**
     * Select Service-Connection authentik should use to manage this outpost. Leave empty if authentik should not handle the deployment.
     * @type {string}
     * @memberof PatchedOutpostRequest
     */
    serviceConnection?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof PatchedOutpostRequest
     */
    config?: { [key: string]: any; };
    /**
     * Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
     * @type {string}
     * @memberof PatchedOutpostRequest
     */
    managed?: string | null;
}

/**
 * Check if a given object implements the PatchedOutpostRequest interface.
 */
export function instanceOfPatchedOutpostRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedOutpostRequestFromJSON(json: any): PatchedOutpostRequest {
    return PatchedOutpostRequestFromJSONTyped(json, false);
}

export function PatchedOutpostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedOutpostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : OutpostTypeEnumFromJSON(json['type']),
        'providers': !exists(json, 'providers') ? undefined : json['providers'],
        'serviceConnection': !exists(json, 'service_connection') ? undefined : json['service_connection'],
        'config': !exists(json, 'config') ? undefined : json['config'],
        'managed': !exists(json, 'managed') ? undefined : json['managed'],
    };
}

export function PatchedOutpostRequestToJSON(value?: PatchedOutpostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': OutpostTypeEnumToJSON(value.type),
        'providers': value.providers,
        'service_connection': value.serviceConnection,
        'config': value.config,
        'managed': value.managed,
    };
}

