/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlueprintInstanceStatusEnum } from './BlueprintInstanceStatusEnum';
import {
    BlueprintInstanceStatusEnumFromJSON,
    BlueprintInstanceStatusEnumFromJSONTyped,
    BlueprintInstanceStatusEnumToJSON,
} from './BlueprintInstanceStatusEnum';

/**
 * Info about a single blueprint instance file
 * @export
 * @interface BlueprintInstance
 */
export interface BlueprintInstance {
    /**
     * 
     * @type {string}
     * @memberof BlueprintInstance
     */
    readonly pk: string;
    /**
     * 
     * @type {string}
     * @memberof BlueprintInstance
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof BlueprintInstance
     */
    path?: string;
    /**
     * 
     * @type {any}
     * @memberof BlueprintInstance
     */
    context?: any | null;
    /**
     * 
     * @type {Date}
     * @memberof BlueprintInstance
     */
    readonly lastApplied: Date;
    /**
     * 
     * @type {string}
     * @memberof BlueprintInstance
     */
    readonly lastAppliedHash: string;
    /**
     * 
     * @type {BlueprintInstanceStatusEnum}
     * @memberof BlueprintInstance
     */
    readonly status: BlueprintInstanceStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof BlueprintInstance
     */
    enabled?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof BlueprintInstance
     */
    readonly managedModels: Array<string>;
    /**
     * 
     * @type {any}
     * @memberof BlueprintInstance
     */
    readonly metadata: any | null;
    /**
     * 
     * @type {string}
     * @memberof BlueprintInstance
     */
    content?: string;
}

/**
 * Check if a given object implements the BlueprintInstance interface.
 */
export function instanceOfBlueprintInstance(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "lastApplied" in value;
    isInstance = isInstance && "lastAppliedHash" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "managedModels" in value;
    isInstance = isInstance && "metadata" in value;

    return isInstance;
}

export function BlueprintInstanceFromJSON(json: any): BlueprintInstance {
    return BlueprintInstanceFromJSONTyped(json, false);
}

export function BlueprintInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlueprintInstance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pk': json['pk'],
        'name': json['name'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'context': !exists(json, 'context') ? undefined : json['context'],
        'lastApplied': (new Date(json['last_applied'])),
        'lastAppliedHash': json['last_applied_hash'],
        'status': BlueprintInstanceStatusEnumFromJSON(json['status']),
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'managedModels': json['managed_models'],
        'metadata': json['metadata'],
        'content': !exists(json, 'content') ? undefined : json['content'],
    };
}

export function BlueprintInstanceToJSON(value?: BlueprintInstance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'path': value.path,
        'context': value.context,
        'enabled': value.enabled,
        'content': value.content,
    };
}

