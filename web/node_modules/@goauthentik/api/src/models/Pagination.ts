/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    next: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    previous: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    current: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    totalPages: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    startIndex: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    endIndex: number;
}

/**
 * Check if a given object implements the Pagination interface.
 */
export function instanceOfPagination(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "next" in value;
    isInstance = isInstance && "previous" in value;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "current" in value;
    isInstance = isInstance && "totalPages" in value;
    isInstance = isInstance && "startIndex" in value;
    isInstance = isInstance && "endIndex" in value;

    return isInstance;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'next': json['next'],
        'previous': json['previous'],
        'count': json['count'],
        'current': json['current'],
        'totalPages': json['total_pages'],
        'startIndex': json['start_index'],
        'endIndex': json['end_index'],
    };
}

export function PaginationToJSON(value?: Pagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'next': value.next,
        'previous': value.previous,
        'count': value.count,
        'current': value.current,
        'total_pages': value.totalPages,
        'start_index': value.startIndex,
        'end_index': value.endIndex,
    };
}

