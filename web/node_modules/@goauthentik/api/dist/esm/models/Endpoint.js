/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AuthModeEnumFromJSON, AuthModeEnumToJSON, } from './AuthModeEnum';
import { ProtocolEnumFromJSON, ProtocolEnumToJSON, } from './ProtocolEnum';
import { RACProviderFromJSON, } from './RACProvider';
/**
 * Check if a given object implements the Endpoint interface.
 */
export function instanceOfEndpoint(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "provider" in value;
    isInstance = isInstance && "providerObj" in value;
    isInstance = isInstance && "protocol" in value;
    isInstance = isInstance && "host" in value;
    isInstance = isInstance && "authMode" in value;
    isInstance = isInstance && "launchUrl" in value;
    return isInstance;
}
export function EndpointFromJSON(json) {
    return EndpointFromJSONTyped(json, false);
}
export function EndpointFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'provider': json['provider'],
        'providerObj': RACProviderFromJSON(json['provider_obj']),
        'protocol': ProtocolEnumFromJSON(json['protocol']),
        'host': json['host'],
        'settings': !exists(json, 'settings') ? undefined : json['settings'],
        'propertyMappings': !exists(json, 'property_mappings') ? undefined : json['property_mappings'],
        'authMode': AuthModeEnumFromJSON(json['auth_mode']),
        'launchUrl': json['launch_url'],
        'maximumConnections': !exists(json, 'maximum_connections') ? undefined : json['maximum_connections'],
    };
}
export function EndpointToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'provider': value.provider,
        'protocol': ProtocolEnumToJSON(value.protocol),
        'host': value.host,
        'settings': value.settings,
        'property_mappings': value.propertyMappings,
        'auth_mode': AuthModeEnumToJSON(value.authMode),
        'maximum_connections': value.maximumConnections,
    };
}
