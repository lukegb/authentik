/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SAMLPropertyMapping Serializer
 * @export
 * @interface SAMLPropertyMapping
 */
export interface SAMLPropertyMapping {
    /**
     * 
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    readonly pk: string;
    /**
     * Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    managed?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    expression: string;
    /**
     * Get object's component so that we know how to edit the object
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    readonly component: string;
    /**
     * Return object's verbose_name
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    readonly verboseName: string;
    /**
     * Return object's plural verbose_name
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    readonly verboseNamePlural: string;
    /**
     * Return internal model name
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    readonly metaModelName: string;
    /**
     * 
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    samlName: string;
    /**
     * 
     * @type {string}
     * @memberof SAMLPropertyMapping
     */
    friendlyName?: string | null;
}

/**
 * Check if a given object implements the SAMLPropertyMapping interface.
 */
export function instanceOfSAMLPropertyMapping(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "expression" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    isInstance = isInstance && "samlName" in value;

    return isInstance;
}

export function SAMLPropertyMappingFromJSON(json: any): SAMLPropertyMapping {
    return SAMLPropertyMappingFromJSONTyped(json, false);
}

export function SAMLPropertyMappingFromJSONTyped(json: any, ignoreDiscriminator: boolean): SAMLPropertyMapping {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pk': json['pk'],
        'managed': !exists(json, 'managed') ? undefined : json['managed'],
        'name': json['name'],
        'expression': json['expression'],
        'component': json['component'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'samlName': json['saml_name'],
        'friendlyName': !exists(json, 'friendly_name') ? undefined : json['friendly_name'],
    };
}

export function SAMLPropertyMappingToJSON(value?: SAMLPropertyMapping | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'managed': value.managed,
        'name': value.name,
        'expression': value.expression,
        'saml_name': value.samlName,
        'friendly_name': value.friendlyName,
    };
}

