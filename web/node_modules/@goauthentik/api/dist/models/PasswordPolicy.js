"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PasswordPolicyToJSON = exports.PasswordPolicyFromJSONTyped = exports.PasswordPolicyFromJSON = exports.instanceOfPasswordPolicy = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the PasswordPolicy interface.
 */
function instanceOfPasswordPolicy(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    isInstance = isInstance && "boundTo" in value;
    return isInstance;
}
exports.instanceOfPasswordPolicy = instanceOfPasswordPolicy;
function PasswordPolicyFromJSON(json) {
    return PasswordPolicyFromJSONTyped(json, false);
}
exports.PasswordPolicyFromJSON = PasswordPolicyFromJSON;
function PasswordPolicyFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'executionLogging': !(0, runtime_1.exists)(json, 'execution_logging') ? undefined : json['execution_logging'],
        'component': json['component'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'boundTo': json['bound_to'],
        'passwordField': !(0, runtime_1.exists)(json, 'password_field') ? undefined : json['password_field'],
        'amountDigits': !(0, runtime_1.exists)(json, 'amount_digits') ? undefined : json['amount_digits'],
        'amountUppercase': !(0, runtime_1.exists)(json, 'amount_uppercase') ? undefined : json['amount_uppercase'],
        'amountLowercase': !(0, runtime_1.exists)(json, 'amount_lowercase') ? undefined : json['amount_lowercase'],
        'amountSymbols': !(0, runtime_1.exists)(json, 'amount_symbols') ? undefined : json['amount_symbols'],
        'lengthMin': !(0, runtime_1.exists)(json, 'length_min') ? undefined : json['length_min'],
        'symbolCharset': !(0, runtime_1.exists)(json, 'symbol_charset') ? undefined : json['symbol_charset'],
        'errorMessage': !(0, runtime_1.exists)(json, 'error_message') ? undefined : json['error_message'],
        'checkStaticRules': !(0, runtime_1.exists)(json, 'check_static_rules') ? undefined : json['check_static_rules'],
        'checkHaveIBeenPwned': !(0, runtime_1.exists)(json, 'check_have_i_been_pwned') ? undefined : json['check_have_i_been_pwned'],
        'checkZxcvbn': !(0, runtime_1.exists)(json, 'check_zxcvbn') ? undefined : json['check_zxcvbn'],
        'hibpAllowedCount': !(0, runtime_1.exists)(json, 'hibp_allowed_count') ? undefined : json['hibp_allowed_count'],
        'zxcvbnScoreThreshold': !(0, runtime_1.exists)(json, 'zxcvbn_score_threshold') ? undefined : json['zxcvbn_score_threshold'],
    };
}
exports.PasswordPolicyFromJSONTyped = PasswordPolicyFromJSONTyped;
function PasswordPolicyToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'execution_logging': value.executionLogging,
        'password_field': value.passwordField,
        'amount_digits': value.amountDigits,
        'amount_uppercase': value.amountUppercase,
        'amount_lowercase': value.amountLowercase,
        'amount_symbols': value.amountSymbols,
        'length_min': value.lengthMin,
        'symbol_charset': value.symbolCharset,
        'error_message': value.errorMessage,
        'check_static_rules': value.checkStaticRules,
        'check_have_i_been_pwned': value.checkHaveIBeenPwned,
        'check_zxcvbn': value.checkZxcvbn,
        'hibp_allowed_count': value.hibpAllowedCount,
        'zxcvbn_score_threshold': value.zxcvbnScoreThreshold,
    };
}
exports.PasswordPolicyToJSON = PasswordPolicyToJSON;
