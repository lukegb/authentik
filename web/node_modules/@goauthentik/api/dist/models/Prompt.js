"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromptToJSON = exports.PromptFromJSONTyped = exports.PromptFromJSON = exports.instanceOfPrompt = void 0;
const runtime_1 = require("../runtime");
const PromptTypeEnum_1 = require("./PromptTypeEnum");
const Stage_1 = require("./Stage");
/**
 * Check if a given object implements the Prompt interface.
 */
function instanceOfPrompt(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "fieldKey" in value;
    isInstance = isInstance && "label" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
exports.instanceOfPrompt = instanceOfPrompt;
function PromptFromJSON(json) {
    return PromptFromJSONTyped(json, false);
}
exports.PromptFromJSON = PromptFromJSON;
function PromptFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'fieldKey': json['field_key'],
        'label': json['label'],
        'type': (0, PromptTypeEnum_1.PromptTypeEnumFromJSON)(json['type']),
        'required': !(0, runtime_1.exists)(json, 'required') ? undefined : json['required'],
        'placeholder': !(0, runtime_1.exists)(json, 'placeholder') ? undefined : json['placeholder'],
        'initialValue': !(0, runtime_1.exists)(json, 'initial_value') ? undefined : json['initial_value'],
        'order': !(0, runtime_1.exists)(json, 'order') ? undefined : json['order'],
        'promptstageSet': !(0, runtime_1.exists)(json, 'promptstage_set') ? undefined : (json['promptstage_set'].map(Stage_1.StageFromJSON)),
        'subText': !(0, runtime_1.exists)(json, 'sub_text') ? undefined : json['sub_text'],
        'placeholderExpression': !(0, runtime_1.exists)(json, 'placeholder_expression') ? undefined : json['placeholder_expression'],
        'initialValueExpression': !(0, runtime_1.exists)(json, 'initial_value_expression') ? undefined : json['initial_value_expression'],
    };
}
exports.PromptFromJSONTyped = PromptFromJSONTyped;
function PromptToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'field_key': value.fieldKey,
        'label': value.label,
        'type': (0, PromptTypeEnum_1.PromptTypeEnumToJSON)(value.type),
        'required': value.required,
        'placeholder': value.placeholder,
        'initial_value': value.initialValue,
        'order': value.order,
        'promptstage_set': value.promptstageSet === undefined ? undefined : (value.promptstageSet.map(Stage_1.StageToJSON)),
        'sub_text': value.subText,
        'placeholder_expression': value.placeholderExpression,
        'initial_value_expression': value.initialValueExpression,
    };
}
exports.PromptToJSON = PromptToJSON;
