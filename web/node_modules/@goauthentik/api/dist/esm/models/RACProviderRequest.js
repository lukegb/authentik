/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
/**
 * Check if a given object implements the RACProviderRequest interface.
 */
export function instanceOfRACProviderRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "authorizationFlow" in value;
    return isInstance;
}
export function RACProviderRequestFromJSON(json) {
    return RACProviderRequestFromJSONTyped(json, false);
}
export function RACProviderRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'authenticationFlow': !exists(json, 'authentication_flow') ? undefined : json['authentication_flow'],
        'authorizationFlow': json['authorization_flow'],
        'propertyMappings': !exists(json, 'property_mappings') ? undefined : json['property_mappings'],
        'settings': !exists(json, 'settings') ? undefined : json['settings'],
        'connectionExpiry': !exists(json, 'connection_expiry') ? undefined : json['connection_expiry'],
        'deleteTokenOnDisconnect': !exists(json, 'delete_token_on_disconnect') ? undefined : json['delete_token_on_disconnect'],
    };
}
export function RACProviderRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'authentication_flow': value.authenticationFlow,
        'authorization_flow': value.authorizationFlow,
        'property_mappings': value.propertyMappings,
        'settings': value.settings,
        'connection_expiry': value.connectionExpiry,
        'delete_token_on_disconnect': value.deleteTokenOnDisconnect,
    };
}
