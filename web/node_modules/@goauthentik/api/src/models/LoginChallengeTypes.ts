/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AppleLoginChallenge,
    instanceOfAppleLoginChallenge,
    AppleLoginChallengeFromJSON,
    AppleLoginChallengeFromJSONTyped,
    AppleLoginChallengeToJSON,
} from './AppleLoginChallenge';
import {
    PlexAuthenticationChallenge,
    instanceOfPlexAuthenticationChallenge,
    PlexAuthenticationChallengeFromJSON,
    PlexAuthenticationChallengeFromJSONTyped,
    PlexAuthenticationChallengeToJSON,
} from './PlexAuthenticationChallenge';
import {
    RedirectChallenge,
    instanceOfRedirectChallenge,
    RedirectChallengeFromJSON,
    RedirectChallengeFromJSONTyped,
    RedirectChallengeToJSON,
} from './RedirectChallenge';

/**
 * @type LoginChallengeTypes
 * 
 * @export
 */
export type LoginChallengeTypes = { component: 'ak-source-oauth-apple' } & AppleLoginChallenge | { component: 'ak-source-plex' } & PlexAuthenticationChallenge | { component: 'xak-flow-redirect' } & RedirectChallenge;

export function LoginChallengeTypesFromJSON(json: any): LoginChallengeTypes {
    return LoginChallengeTypesFromJSONTyped(json, false);
}

export function LoginChallengeTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginChallengeTypes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['component']) {
        case 'ak-source-oauth-apple':
            return {...AppleLoginChallengeFromJSONTyped(json, true), component: 'ak-source-oauth-apple'};
        case 'ak-source-plex':
            return {...PlexAuthenticationChallengeFromJSONTyped(json, true), component: 'ak-source-plex'};
        case 'xak-flow-redirect':
            return {...RedirectChallengeFromJSONTyped(json, true), component: 'xak-flow-redirect'};
        default:
            throw new Error(`No variant of LoginChallengeTypes exists with 'component=${json['component']}'`);
    }
}

export function LoginChallengeTypesToJSON(value?: LoginChallengeTypes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['component']) {
        case 'ak-source-oauth-apple':
            return AppleLoginChallengeToJSON(value);
        case 'ak-source-plex':
            return PlexAuthenticationChallengeToJSON(value);
        case 'xak-flow-redirect':
            return RedirectChallengeToJSON(value);
        default:
            throw new Error(`No variant of LoginChallengeTypes exists with 'component=${value['component']}'`);
    }

}

