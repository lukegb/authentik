"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigToJSON = exports.ConfigFromJSONTyped = exports.ConfigFromJSON = exports.instanceOfConfig = void 0;
const CapabilitiesEnum_1 = require("./CapabilitiesEnum");
const ErrorReportingConfig_1 = require("./ErrorReportingConfig");
/**
 * Check if a given object implements the Config interface.
 */
function instanceOfConfig(value) {
    let isInstance = true;
    isInstance = isInstance && "errorReporting" in value;
    isInstance = isInstance && "capabilities" in value;
    isInstance = isInstance && "cacheTimeout" in value;
    isInstance = isInstance && "cacheTimeoutFlows" in value;
    isInstance = isInstance && "cacheTimeoutPolicies" in value;
    isInstance = isInstance && "cacheTimeoutReputation" in value;
    return isInstance;
}
exports.instanceOfConfig = instanceOfConfig;
function ConfigFromJSON(json) {
    return ConfigFromJSONTyped(json, false);
}
exports.ConfigFromJSON = ConfigFromJSON;
function ConfigFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'errorReporting': (0, ErrorReportingConfig_1.ErrorReportingConfigFromJSON)(json['error_reporting']),
        'capabilities': (json['capabilities'].map(CapabilitiesEnum_1.CapabilitiesEnumFromJSON)),
        'cacheTimeout': json['cache_timeout'],
        'cacheTimeoutFlows': json['cache_timeout_flows'],
        'cacheTimeoutPolicies': json['cache_timeout_policies'],
        'cacheTimeoutReputation': json['cache_timeout_reputation'],
    };
}
exports.ConfigFromJSONTyped = ConfigFromJSONTyped;
function ConfigToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'error_reporting': (0, ErrorReportingConfig_1.ErrorReportingConfigToJSON)(value.errorReporting),
        'capabilities': (value.capabilities.map(CapabilitiesEnum_1.CapabilitiesEnumToJSON)),
        'cache_timeout': value.cacheTimeout,
        'cache_timeout_flows': value.cacheTimeoutFlows,
        'cache_timeout_policies': value.cacheTimeoutPolicies,
        'cache_timeout_reputation': value.cacheTimeoutReputation,
    };
}
exports.ConfigToJSON = ConfigToJSON;
