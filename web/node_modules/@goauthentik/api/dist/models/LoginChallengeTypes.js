"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoginChallengeTypesToJSON = exports.LoginChallengeTypesFromJSONTyped = exports.LoginChallengeTypesFromJSON = void 0;
const AppleLoginChallenge_1 = require("./AppleLoginChallenge");
const PlexAuthenticationChallenge_1 = require("./PlexAuthenticationChallenge");
const RedirectChallenge_1 = require("./RedirectChallenge");
function LoginChallengeTypesFromJSON(json) {
    return LoginChallengeTypesFromJSONTyped(json, false);
}
exports.LoginChallengeTypesFromJSON = LoginChallengeTypesFromJSON;
function LoginChallengeTypesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['component']) {
        case 'ak-source-oauth-apple':
            return Object.assign(Object.assign({}, (0, AppleLoginChallenge_1.AppleLoginChallengeFromJSONTyped)(json, true)), { component: 'ak-source-oauth-apple' });
        case 'ak-source-plex':
            return Object.assign(Object.assign({}, (0, PlexAuthenticationChallenge_1.PlexAuthenticationChallengeFromJSONTyped)(json, true)), { component: 'ak-source-plex' });
        case 'xak-flow-redirect':
            return Object.assign(Object.assign({}, (0, RedirectChallenge_1.RedirectChallengeFromJSONTyped)(json, true)), { component: 'xak-flow-redirect' });
        default:
            throw new Error(`No variant of LoginChallengeTypes exists with 'component=${json['component']}'`);
    }
}
exports.LoginChallengeTypesFromJSONTyped = LoginChallengeTypesFromJSONTyped;
function LoginChallengeTypesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['component']) {
        case 'ak-source-oauth-apple':
            return (0, AppleLoginChallenge_1.AppleLoginChallengeToJSON)(value);
        case 'ak-source-plex':
            return (0, PlexAuthenticationChallenge_1.PlexAuthenticationChallengeToJSON)(value);
        case 'xak-flow-redirect':
            return (0, RedirectChallenge_1.RedirectChallengeToJSON)(value);
        default:
            throw new Error(`No variant of LoginChallengeTypes exists with 'component=${value['component']}'`);
    }
}
exports.LoginChallengeTypesToJSON = LoginChallengeTypesToJSON;
