/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EventActions } from './EventActions';
import {
    EventActionsFromJSON,
    EventActionsFromJSONTyped,
    EventActionsToJSON,
} from './EventActions';

/**
 * Event Serializer
 * @export
 * @interface PatchedEventRequest
 */
export interface PatchedEventRequest {
    /**
     * 
     * @type {any}
     * @memberof PatchedEventRequest
     */
    user?: any | null;
    /**
     * 
     * @type {EventActions}
     * @memberof PatchedEventRequest
     */
    action?: EventActions;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventRequest
     */
    app?: string;
    /**
     * 
     * @type {any}
     * @memberof PatchedEventRequest
     */
    context?: any | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventRequest
     */
    clientIp?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedEventRequest
     */
    expires?: Date;
    /**
     * 
     * @type {any}
     * @memberof PatchedEventRequest
     */
    brand?: any | null;
}

/**
 * Check if a given object implements the PatchedEventRequest interface.
 */
export function instanceOfPatchedEventRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedEventRequestFromJSON(json: any): PatchedEventRequest {
    return PatchedEventRequestFromJSONTyped(json, false);
}

export function PatchedEventRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedEventRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'user') ? undefined : json['user'],
        'action': !exists(json, 'action') ? undefined : EventActionsFromJSON(json['action']),
        'app': !exists(json, 'app') ? undefined : json['app'],
        'context': !exists(json, 'context') ? undefined : json['context'],
        'clientIp': !exists(json, 'client_ip') ? undefined : json['client_ip'],
        'expires': !exists(json, 'expires') ? undefined : (new Date(json['expires'])),
        'brand': !exists(json, 'brand') ? undefined : json['brand'],
    };
}

export function PatchedEventRequestToJSON(value?: PatchedEventRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': value.user,
        'action': EventActionsToJSON(value.action),
        'app': value.app,
        'context': value.context,
        'client_ip': value.clientIp,
        'expires': value.expires === undefined ? undefined : (value.expires.toISOString()),
        'brand': value.brand,
    };
}

