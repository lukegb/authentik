/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * OAuth Source Serializer
 * @export
 * @interface UserOAuthSourceConnectionRequest
 */
export interface UserOAuthSourceConnectionRequest {
    /**
     * 
     * @type {number}
     * @memberof UserOAuthSourceConnectionRequest
     */
    user: number;
    /**
     * 
     * @type {string}
     * @memberof UserOAuthSourceConnectionRequest
     */
    identifier: string;
    /**
     * 
     * @type {string}
     * @memberof UserOAuthSourceConnectionRequest
     */
    accessToken?: string | null;
}

/**
 * Check if a given object implements the UserOAuthSourceConnectionRequest interface.
 */
export function instanceOfUserOAuthSourceConnectionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "identifier" in value;

    return isInstance;
}

export function UserOAuthSourceConnectionRequestFromJSON(json: any): UserOAuthSourceConnectionRequest {
    return UserOAuthSourceConnectionRequestFromJSONTyped(json, false);
}

export function UserOAuthSourceConnectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOAuthSourceConnectionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': json['user'],
        'identifier': json['identifier'],
        'accessToken': !exists(json, 'access_token') ? undefined : json['access_token'],
    };
}

export function UserOAuthSourceConnectionRequestToJSON(value?: UserOAuthSourceConnectionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': value.user,
        'identifier': value.identifier,
        'access_token': value.accessToken,
    };
}

