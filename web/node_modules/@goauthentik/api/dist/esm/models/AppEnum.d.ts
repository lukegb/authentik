/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * * `authentik.tenants` - authentik Tenants
 * * `authentik.admin` - authentik Admin
 * * `authentik.api` - authentik API
 * * `authentik.crypto` - authentik Crypto
 * * `authentik.flows` - authentik Flows
 * * `authentik.outposts` - authentik Outpost
 * * `authentik.policies.dummy` - authentik Policies.Dummy
 * * `authentik.policies.event_matcher` - authentik Policies.Event Matcher
 * * `authentik.policies.expiry` - authentik Policies.Expiry
 * * `authentik.policies.expression` - authentik Policies.Expression
 * * `authentik.policies.password` - authentik Policies.Password
 * * `authentik.policies.reputation` - authentik Policies.Reputation
 * * `authentik.policies` - authentik Policies
 * * `authentik.providers.ldap` - authentik Providers.LDAP
 * * `authentik.providers.oauth2` - authentik Providers.OAuth2
 * * `authentik.providers.proxy` - authentik Providers.Proxy
 * * `authentik.providers.radius` - authentik Providers.Radius
 * * `authentik.providers.saml` - authentik Providers.SAML
 * * `authentik.providers.scim` - authentik Providers.SCIM
 * * `authentik.rbac` - authentik RBAC
 * * `authentik.recovery` - authentik Recovery
 * * `authentik.sources.ldap` - authentik Sources.LDAP
 * * `authentik.sources.oauth` - authentik Sources.OAuth
 * * `authentik.sources.plex` - authentik Sources.Plex
 * * `authentik.sources.saml` - authentik Sources.SAML
 * * `authentik.stages.authenticator` - authentik Stages.Authenticator
 * * `authentik.stages.authenticator_duo` - authentik Stages.Authenticator.Duo
 * * `authentik.stages.authenticator_sms` - authentik Stages.Authenticator.SMS
 * * `authentik.stages.authenticator_static` - authentik Stages.Authenticator.Static
 * * `authentik.stages.authenticator_totp` - authentik Stages.Authenticator.TOTP
 * * `authentik.stages.authenticator_validate` - authentik Stages.Authenticator.Validate
 * * `authentik.stages.authenticator_webauthn` - authentik Stages.Authenticator.WebAuthn
 * * `authentik.stages.captcha` - authentik Stages.Captcha
 * * `authentik.stages.consent` - authentik Stages.Consent
 * * `authentik.stages.deny` - authentik Stages.Deny
 * * `authentik.stages.dummy` - authentik Stages.Dummy
 * * `authentik.stages.email` - authentik Stages.Email
 * * `authentik.stages.ext_auth` - authentik Stages.ExtAuth
 * * `authentik.stages.identification` - authentik Stages.Identification
 * * `authentik.stages.invitation` - authentik Stages.User Invitation
 * * `authentik.stages.password` - authentik Stages.Password
 * * `authentik.stages.prompt` - authentik Stages.Prompt
 * * `authentik.stages.user_delete` - authentik Stages.User Delete
 * * `authentik.stages.user_login` - authentik Stages.User Login
 * * `authentik.stages.user_logout` - authentik Stages.User Logout
 * * `authentik.stages.user_write` - authentik Stages.User Write
 * * `authentik.brands` - authentik Brands
 * * `authentik.blueprints` - authentik Blueprints
 * * `authentik.core` - authentik Core
 * * `authentik.enterprise` - authentik Enterprise
 * * `authentik.enterprise.audit` - authentik Enterprise.Audit
 * * `authentik.enterprise.providers.rac` - authentik Enterprise.Providers.RAC
 * * `authentik.events` - authentik Events
 * @export
 */
export declare const AppEnum: {
    readonly Tenants: "authentik.tenants";
    readonly Admin: "authentik.admin";
    readonly Api: "authentik.api";
    readonly Crypto: "authentik.crypto";
    readonly Flows: "authentik.flows";
    readonly Outposts: "authentik.outposts";
    readonly PoliciesDummy: "authentik.policies.dummy";
    readonly PoliciesEventMatcher: "authentik.policies.event_matcher";
    readonly PoliciesExpiry: "authentik.policies.expiry";
    readonly PoliciesExpression: "authentik.policies.expression";
    readonly PoliciesPassword: "authentik.policies.password";
    readonly PoliciesReputation: "authentik.policies.reputation";
    readonly Policies: "authentik.policies";
    readonly ProvidersLdap: "authentik.providers.ldap";
    readonly ProvidersOauth2: "authentik.providers.oauth2";
    readonly ProvidersProxy: "authentik.providers.proxy";
    readonly ProvidersRadius: "authentik.providers.radius";
    readonly ProvidersSaml: "authentik.providers.saml";
    readonly ProvidersScim: "authentik.providers.scim";
    readonly Rbac: "authentik.rbac";
    readonly Recovery: "authentik.recovery";
    readonly SourcesLdap: "authentik.sources.ldap";
    readonly SourcesOauth: "authentik.sources.oauth";
    readonly SourcesPlex: "authentik.sources.plex";
    readonly SourcesSaml: "authentik.sources.saml";
    readonly StagesAuthenticator: "authentik.stages.authenticator";
    readonly StagesAuthenticatorDuo: "authentik.stages.authenticator_duo";
    readonly StagesAuthenticatorSms: "authentik.stages.authenticator_sms";
    readonly StagesAuthenticatorStatic: "authentik.stages.authenticator_static";
    readonly StagesAuthenticatorTotp: "authentik.stages.authenticator_totp";
    readonly StagesAuthenticatorValidate: "authentik.stages.authenticator_validate";
    readonly StagesAuthenticatorWebauthn: "authentik.stages.authenticator_webauthn";
    readonly StagesCaptcha: "authentik.stages.captcha";
    readonly StagesConsent: "authentik.stages.consent";
    readonly StagesDeny: "authentik.stages.deny";
    readonly StagesDummy: "authentik.stages.dummy";
    readonly StagesEmail: "authentik.stages.email";
    readonly StagesExtAuth: "authentik.stages.ext_auth";
    readonly StagesIdentification: "authentik.stages.identification";
    readonly StagesInvitation: "authentik.stages.invitation";
    readonly StagesPassword: "authentik.stages.password";
    readonly StagesPrompt: "authentik.stages.prompt";
    readonly StagesUserDelete: "authentik.stages.user_delete";
    readonly StagesUserLogin: "authentik.stages.user_login";
    readonly StagesUserLogout: "authentik.stages.user_logout";
    readonly StagesUserWrite: "authentik.stages.user_write";
    readonly Brands: "authentik.brands";
    readonly Blueprints: "authentik.blueprints";
    readonly Core: "authentik.core";
    readonly Enterprise: "authentik.enterprise";
    readonly EnterpriseAudit: "authentik.enterprise.audit";
    readonly EnterpriseProvidersRac: "authentik.enterprise.providers.rac";
    readonly Events: "authentik.events";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type AppEnum = typeof AppEnum[keyof typeof AppEnum];
export declare function AppEnumFromJSON(json: any): AppEnum;
export declare function AppEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppEnum;
export declare function AppEnumToJSON(value?: AppEnum | null): any;
