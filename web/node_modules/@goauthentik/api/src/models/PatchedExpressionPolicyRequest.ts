/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Group Membership Policy Serializer
 * @export
 * @interface PatchedExpressionPolicyRequest
 */
export interface PatchedExpressionPolicyRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedExpressionPolicyRequest
     */
    name?: string;
    /**
     * When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
     * @type {boolean}
     * @memberof PatchedExpressionPolicyRequest
     */
    executionLogging?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatchedExpressionPolicyRequest
     */
    expression?: string;
}

/**
 * Check if a given object implements the PatchedExpressionPolicyRequest interface.
 */
export function instanceOfPatchedExpressionPolicyRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedExpressionPolicyRequestFromJSON(json: any): PatchedExpressionPolicyRequest {
    return PatchedExpressionPolicyRequestFromJSONTyped(json, false);
}

export function PatchedExpressionPolicyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedExpressionPolicyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'executionLogging': !exists(json, 'execution_logging') ? undefined : json['execution_logging'],
        'expression': !exists(json, 'expression') ? undefined : json['expression'],
    };
}

export function PatchedExpressionPolicyRequestToJSON(value?: PatchedExpressionPolicyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'execution_logging': value.executionLogging,
        'expression': value.expression,
    };
}

