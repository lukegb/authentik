/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeviceChallengeRequest } from './DeviceChallengeRequest';
import {
    DeviceChallengeRequestFromJSON,
    DeviceChallengeRequestFromJSONTyped,
    DeviceChallengeRequestToJSON,
} from './DeviceChallengeRequest';

/**
 * Challenge used for Code-based and WebAuthn authenticators
 * @export
 * @interface AuthenticatorValidationChallengeResponseRequest
 */
export interface AuthenticatorValidationChallengeResponseRequest {
    /**
     * 
     * @type {string}
     * @memberof AuthenticatorValidationChallengeResponseRequest
     */
    component?: string;
    /**
     * 
     * @type {DeviceChallengeRequest}
     * @memberof AuthenticatorValidationChallengeResponseRequest
     */
    selectedChallenge?: DeviceChallengeRequest;
    /**
     * 
     * @type {string}
     * @memberof AuthenticatorValidationChallengeResponseRequest
     */
    selectedStage?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthenticatorValidationChallengeResponseRequest
     */
    code?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AuthenticatorValidationChallengeResponseRequest
     */
    webauthn?: { [key: string]: any; };
    /**
     * 
     * @type {number}
     * @memberof AuthenticatorValidationChallengeResponseRequest
     */
    duo?: number;
}

/**
 * Check if a given object implements the AuthenticatorValidationChallengeResponseRequest interface.
 */
export function instanceOfAuthenticatorValidationChallengeResponseRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthenticatorValidationChallengeResponseRequestFromJSON(json: any): AuthenticatorValidationChallengeResponseRequest {
    return AuthenticatorValidationChallengeResponseRequestFromJSONTyped(json, false);
}

export function AuthenticatorValidationChallengeResponseRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticatorValidationChallengeResponseRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'component': !exists(json, 'component') ? undefined : json['component'],
        'selectedChallenge': !exists(json, 'selected_challenge') ? undefined : DeviceChallengeRequestFromJSON(json['selected_challenge']),
        'selectedStage': !exists(json, 'selected_stage') ? undefined : json['selected_stage'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'webauthn': !exists(json, 'webauthn') ? undefined : json['webauthn'],
        'duo': !exists(json, 'duo') ? undefined : json['duo'],
    };
}

export function AuthenticatorValidationChallengeResponseRequestToJSON(value?: AuthenticatorValidationChallengeResponseRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'component': value.component,
        'selected_challenge': DeviceChallengeRequestToJSON(value.selectedChallenge),
        'selected_stage': value.selectedStage,
        'code': value.code,
        'webauthn': value.webauthn,
        'duo': value.duo,
    };
}

