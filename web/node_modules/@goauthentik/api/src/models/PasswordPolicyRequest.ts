/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Password Policy Serializer
 * @export
 * @interface PasswordPolicyRequest
 */
export interface PasswordPolicyRequest {
    /**
     * 
     * @type {string}
     * @memberof PasswordPolicyRequest
     */
    name: string;
    /**
     * When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
     * @type {boolean}
     * @memberof PasswordPolicyRequest
     */
    executionLogging?: boolean;
    /**
     * Field key to check, field keys defined in Prompt stages are available.
     * @type {string}
     * @memberof PasswordPolicyRequest
     */
    passwordField?: string;
    /**
     * 
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    amountDigits?: number;
    /**
     * 
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    amountUppercase?: number;
    /**
     * 
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    amountLowercase?: number;
    /**
     * 
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    amountSymbols?: number;
    /**
     * 
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    lengthMin?: number;
    /**
     * 
     * @type {string}
     * @memberof PasswordPolicyRequest
     */
    symbolCharset?: string;
    /**
     * 
     * @type {string}
     * @memberof PasswordPolicyRequest
     */
    errorMessage?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PasswordPolicyRequest
     */
    checkStaticRules?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PasswordPolicyRequest
     */
    checkHaveIBeenPwned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PasswordPolicyRequest
     */
    checkZxcvbn?: boolean;
    /**
     * How many times the password hash is allowed to be on haveibeenpwned
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    hibpAllowedCount?: number;
    /**
     * If the zxcvbn score is equal or less than this value, the policy will fail.
     * @type {number}
     * @memberof PasswordPolicyRequest
     */
    zxcvbnScoreThreshold?: number;
}

/**
 * Check if a given object implements the PasswordPolicyRequest interface.
 */
export function instanceOfPasswordPolicyRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function PasswordPolicyRequestFromJSON(json: any): PasswordPolicyRequest {
    return PasswordPolicyRequestFromJSONTyped(json, false);
}

export function PasswordPolicyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasswordPolicyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'executionLogging': !exists(json, 'execution_logging') ? undefined : json['execution_logging'],
        'passwordField': !exists(json, 'password_field') ? undefined : json['password_field'],
        'amountDigits': !exists(json, 'amount_digits') ? undefined : json['amount_digits'],
        'amountUppercase': !exists(json, 'amount_uppercase') ? undefined : json['amount_uppercase'],
        'amountLowercase': !exists(json, 'amount_lowercase') ? undefined : json['amount_lowercase'],
        'amountSymbols': !exists(json, 'amount_symbols') ? undefined : json['amount_symbols'],
        'lengthMin': !exists(json, 'length_min') ? undefined : json['length_min'],
        'symbolCharset': !exists(json, 'symbol_charset') ? undefined : json['symbol_charset'],
        'errorMessage': !exists(json, 'error_message') ? undefined : json['error_message'],
        'checkStaticRules': !exists(json, 'check_static_rules') ? undefined : json['check_static_rules'],
        'checkHaveIBeenPwned': !exists(json, 'check_have_i_been_pwned') ? undefined : json['check_have_i_been_pwned'],
        'checkZxcvbn': !exists(json, 'check_zxcvbn') ? undefined : json['check_zxcvbn'],
        'hibpAllowedCount': !exists(json, 'hibp_allowed_count') ? undefined : json['hibp_allowed_count'],
        'zxcvbnScoreThreshold': !exists(json, 'zxcvbn_score_threshold') ? undefined : json['zxcvbn_score_threshold'],
    };
}

export function PasswordPolicyRequestToJSON(value?: PasswordPolicyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'execution_logging': value.executionLogging,
        'password_field': value.passwordField,
        'amount_digits': value.amountDigits,
        'amount_uppercase': value.amountUppercase,
        'amount_lowercase': value.amountLowercase,
        'amount_symbols': value.amountSymbols,
        'length_min': value.lengthMin,
        'symbol_charset': value.symbolCharset,
        'error_message': value.errorMessage,
        'check_static_rules': value.checkStaticRules,
        'check_have_i_been_pwned': value.checkHaveIBeenPwned,
        'check_zxcvbn': value.checkZxcvbn,
        'hibp_allowed_count': value.hibpAllowedCount,
        'zxcvbn_score_threshold': value.zxcvbnScoreThreshold,
    };
}

