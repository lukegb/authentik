/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AppleChallengeResponseRequest,
    instanceOfAppleChallengeResponseRequest,
    AppleChallengeResponseRequestFromJSON,
    AppleChallengeResponseRequestFromJSONTyped,
    AppleChallengeResponseRequestToJSON,
} from './AppleChallengeResponseRequest';
import {
    AuthenticatorDuoChallengeResponseRequest,
    instanceOfAuthenticatorDuoChallengeResponseRequest,
    AuthenticatorDuoChallengeResponseRequestFromJSON,
    AuthenticatorDuoChallengeResponseRequestFromJSONTyped,
    AuthenticatorDuoChallengeResponseRequestToJSON,
} from './AuthenticatorDuoChallengeResponseRequest';
import {
    AuthenticatorSMSChallengeResponseRequest,
    instanceOfAuthenticatorSMSChallengeResponseRequest,
    AuthenticatorSMSChallengeResponseRequestFromJSON,
    AuthenticatorSMSChallengeResponseRequestFromJSONTyped,
    AuthenticatorSMSChallengeResponseRequestToJSON,
} from './AuthenticatorSMSChallengeResponseRequest';
import {
    AuthenticatorStaticChallengeResponseRequest,
    instanceOfAuthenticatorStaticChallengeResponseRequest,
    AuthenticatorStaticChallengeResponseRequestFromJSON,
    AuthenticatorStaticChallengeResponseRequestFromJSONTyped,
    AuthenticatorStaticChallengeResponseRequestToJSON,
} from './AuthenticatorStaticChallengeResponseRequest';
import {
    AuthenticatorTOTPChallengeResponseRequest,
    instanceOfAuthenticatorTOTPChallengeResponseRequest,
    AuthenticatorTOTPChallengeResponseRequestFromJSON,
    AuthenticatorTOTPChallengeResponseRequestFromJSONTyped,
    AuthenticatorTOTPChallengeResponseRequestToJSON,
} from './AuthenticatorTOTPChallengeResponseRequest';
import {
    AuthenticatorValidationChallengeResponseRequest,
    instanceOfAuthenticatorValidationChallengeResponseRequest,
    AuthenticatorValidationChallengeResponseRequestFromJSON,
    AuthenticatorValidationChallengeResponseRequestFromJSONTyped,
    AuthenticatorValidationChallengeResponseRequestToJSON,
} from './AuthenticatorValidationChallengeResponseRequest';
import {
    AuthenticatorWebAuthnChallengeResponseRequest,
    instanceOfAuthenticatorWebAuthnChallengeResponseRequest,
    AuthenticatorWebAuthnChallengeResponseRequestFromJSON,
    AuthenticatorWebAuthnChallengeResponseRequestFromJSONTyped,
    AuthenticatorWebAuthnChallengeResponseRequestToJSON,
} from './AuthenticatorWebAuthnChallengeResponseRequest';
import {
    AutoSubmitChallengeResponseRequest,
    instanceOfAutoSubmitChallengeResponseRequest,
    AutoSubmitChallengeResponseRequestFromJSON,
    AutoSubmitChallengeResponseRequestFromJSONTyped,
    AutoSubmitChallengeResponseRequestToJSON,
} from './AutoSubmitChallengeResponseRequest';
import {
    CaptchaChallengeResponseRequest,
    instanceOfCaptchaChallengeResponseRequest,
    CaptchaChallengeResponseRequestFromJSON,
    CaptchaChallengeResponseRequestFromJSONTyped,
    CaptchaChallengeResponseRequestToJSON,
} from './CaptchaChallengeResponseRequest';
import {
    ConsentChallengeResponseRequest,
    instanceOfConsentChallengeResponseRequest,
    ConsentChallengeResponseRequestFromJSON,
    ConsentChallengeResponseRequestFromJSONTyped,
    ConsentChallengeResponseRequestToJSON,
} from './ConsentChallengeResponseRequest';
import {
    DummyChallengeResponseRequest,
    instanceOfDummyChallengeResponseRequest,
    DummyChallengeResponseRequestFromJSON,
    DummyChallengeResponseRequestFromJSONTyped,
    DummyChallengeResponseRequestToJSON,
} from './DummyChallengeResponseRequest';
import {
    EmailChallengeResponseRequest,
    instanceOfEmailChallengeResponseRequest,
    EmailChallengeResponseRequestFromJSON,
    EmailChallengeResponseRequestFromJSONTyped,
    EmailChallengeResponseRequestToJSON,
} from './EmailChallengeResponseRequest';
import {
    IdentificationChallengeResponseRequest,
    instanceOfIdentificationChallengeResponseRequest,
    IdentificationChallengeResponseRequestFromJSON,
    IdentificationChallengeResponseRequestFromJSONTyped,
    IdentificationChallengeResponseRequestToJSON,
} from './IdentificationChallengeResponseRequest';
import {
    OAuthDeviceCodeChallengeResponseRequest,
    instanceOfOAuthDeviceCodeChallengeResponseRequest,
    OAuthDeviceCodeChallengeResponseRequestFromJSON,
    OAuthDeviceCodeChallengeResponseRequestFromJSONTyped,
    OAuthDeviceCodeChallengeResponseRequestToJSON,
} from './OAuthDeviceCodeChallengeResponseRequest';
import {
    OAuthDeviceCodeFinishChallengeResponseRequest,
    instanceOfOAuthDeviceCodeFinishChallengeResponseRequest,
    OAuthDeviceCodeFinishChallengeResponseRequestFromJSON,
    OAuthDeviceCodeFinishChallengeResponseRequestFromJSONTyped,
    OAuthDeviceCodeFinishChallengeResponseRequestToJSON,
} from './OAuthDeviceCodeFinishChallengeResponseRequest';
import {
    PasswordChallengeResponseRequest,
    instanceOfPasswordChallengeResponseRequest,
    PasswordChallengeResponseRequestFromJSON,
    PasswordChallengeResponseRequestFromJSONTyped,
    PasswordChallengeResponseRequestToJSON,
} from './PasswordChallengeResponseRequest';
import {
    PlexAuthenticationChallengeResponseRequest,
    instanceOfPlexAuthenticationChallengeResponseRequest,
    PlexAuthenticationChallengeResponseRequestFromJSON,
    PlexAuthenticationChallengeResponseRequestFromJSONTyped,
    PlexAuthenticationChallengeResponseRequestToJSON,
} from './PlexAuthenticationChallengeResponseRequest';
import {
    PromptChallengeResponseRequest,
    instanceOfPromptChallengeResponseRequest,
    PromptChallengeResponseRequestFromJSON,
    PromptChallengeResponseRequestFromJSONTyped,
    PromptChallengeResponseRequestToJSON,
} from './PromptChallengeResponseRequest';
import {
    UserLoginChallengeResponseRequest,
    instanceOfUserLoginChallengeResponseRequest,
    UserLoginChallengeResponseRequestFromJSON,
    UserLoginChallengeResponseRequestFromJSONTyped,
    UserLoginChallengeResponseRequestToJSON,
} from './UserLoginChallengeResponseRequest';

/**
 * @type FlowChallengeResponseRequest
 * 
 * @export
 */
export type FlowChallengeResponseRequest = { component: 'ak-provider-oauth2-device-code' } & OAuthDeviceCodeChallengeResponseRequest | { component: 'ak-provider-oauth2-device-code-finish' } & OAuthDeviceCodeFinishChallengeResponseRequest | { component: 'ak-source-oauth-apple' } & AppleChallengeResponseRequest | { component: 'ak-source-plex' } & PlexAuthenticationChallengeResponseRequest | { component: 'ak-stage-authenticator-duo' } & AuthenticatorDuoChallengeResponseRequest | { component: 'ak-stage-authenticator-sms' } & AuthenticatorSMSChallengeResponseRequest | { component: 'ak-stage-authenticator-static' } & AuthenticatorStaticChallengeResponseRequest | { component: 'ak-stage-authenticator-totp' } & AuthenticatorTOTPChallengeResponseRequest | { component: 'ak-stage-authenticator-validate' } & AuthenticatorValidationChallengeResponseRequest | { component: 'ak-stage-authenticator-webauthn' } & AuthenticatorWebAuthnChallengeResponseRequest | { component: 'ak-stage-autosubmit' } & AutoSubmitChallengeResponseRequest | { component: 'ak-stage-captcha' } & CaptchaChallengeResponseRequest | { component: 'ak-stage-consent' } & ConsentChallengeResponseRequest | { component: 'ak-stage-dummy' } & DummyChallengeResponseRequest | { component: 'ak-stage-email' } & EmailChallengeResponseRequest | { component: 'ak-stage-identification' } & IdentificationChallengeResponseRequest | { component: 'ak-stage-password' } & PasswordChallengeResponseRequest | { component: 'ak-stage-prompt' } & PromptChallengeResponseRequest | { component: 'ak-stage-user-login' } & UserLoginChallengeResponseRequest;

export function FlowChallengeResponseRequestFromJSON(json: any): FlowChallengeResponseRequest {
    return FlowChallengeResponseRequestFromJSONTyped(json, false);
}

export function FlowChallengeResponseRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlowChallengeResponseRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['component']) {
        case 'ak-provider-oauth2-device-code':
            return {...OAuthDeviceCodeChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-provider-oauth2-device-code'};
        case 'ak-provider-oauth2-device-code-finish':
            return {...OAuthDeviceCodeFinishChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-provider-oauth2-device-code-finish'};
        case 'ak-source-oauth-apple':
            return {...AppleChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-source-oauth-apple'};
        case 'ak-source-plex':
            return {...PlexAuthenticationChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-source-plex'};
        case 'ak-stage-authenticator-duo':
            return {...AuthenticatorDuoChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-authenticator-duo'};
        case 'ak-stage-authenticator-sms':
            return {...AuthenticatorSMSChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-authenticator-sms'};
        case 'ak-stage-authenticator-static':
            return {...AuthenticatorStaticChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-authenticator-static'};
        case 'ak-stage-authenticator-totp':
            return {...AuthenticatorTOTPChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-authenticator-totp'};
        case 'ak-stage-authenticator-validate':
            return {...AuthenticatorValidationChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-authenticator-validate'};
        case 'ak-stage-authenticator-webauthn':
            return {...AuthenticatorWebAuthnChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-authenticator-webauthn'};
        case 'ak-stage-autosubmit':
            return {...AutoSubmitChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-autosubmit'};
        case 'ak-stage-captcha':
            return {...CaptchaChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-captcha'};
        case 'ak-stage-consent':
            return {...ConsentChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-consent'};
        case 'ak-stage-dummy':
            return {...DummyChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-dummy'};
        case 'ak-stage-email':
            return {...EmailChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-email'};
        case 'ak-stage-identification':
            return {...IdentificationChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-identification'};
        case 'ak-stage-password':
            return {...PasswordChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-password'};
        case 'ak-stage-prompt':
            return {...PromptChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-prompt'};
        case 'ak-stage-user-login':
            return {...UserLoginChallengeResponseRequestFromJSONTyped(json, true), component: 'ak-stage-user-login'};
        default:
            throw new Error(`No variant of FlowChallengeResponseRequest exists with 'component=${json['component']}'`);
    }
}

export function FlowChallengeResponseRequestToJSON(value?: FlowChallengeResponseRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['component']) {
        case 'ak-provider-oauth2-device-code':
            return OAuthDeviceCodeChallengeResponseRequestToJSON(value);
        case 'ak-provider-oauth2-device-code-finish':
            return OAuthDeviceCodeFinishChallengeResponseRequestToJSON(value);
        case 'ak-source-oauth-apple':
            return AppleChallengeResponseRequestToJSON(value);
        case 'ak-source-plex':
            return PlexAuthenticationChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-duo':
            return AuthenticatorDuoChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-sms':
            return AuthenticatorSMSChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-static':
            return AuthenticatorStaticChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-totp':
            return AuthenticatorTOTPChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-validate':
            return AuthenticatorValidationChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-webauthn':
            return AuthenticatorWebAuthnChallengeResponseRequestToJSON(value);
        case 'ak-stage-autosubmit':
            return AutoSubmitChallengeResponseRequestToJSON(value);
        case 'ak-stage-captcha':
            return CaptchaChallengeResponseRequestToJSON(value);
        case 'ak-stage-consent':
            return ConsentChallengeResponseRequestToJSON(value);
        case 'ak-stage-dummy':
            return DummyChallengeResponseRequestToJSON(value);
        case 'ak-stage-email':
            return EmailChallengeResponseRequestToJSON(value);
        case 'ak-stage-identification':
            return IdentificationChallengeResponseRequestToJSON(value);
        case 'ak-stage-password':
            return PasswordChallengeResponseRequestToJSON(value);
        case 'ak-stage-prompt':
            return PromptChallengeResponseRequestToJSON(value);
        case 'ak-stage-user-login':
            return UserLoginChallengeResponseRequestToJSON(value);
        default:
            throw new Error(`No variant of FlowChallengeResponseRequest exists with 'component=${value['component']}'`);
    }

}

