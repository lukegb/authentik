/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SCIMProvider Serializer
 * @export
 * @interface PatchedSCIMProviderRequest
 */
export interface PatchedSCIMProviderRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedSCIMProviderRequest
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedSCIMProviderRequest
     */
    propertyMappings?: Array<string>;
    /**
     * Property mappings used for group creation/updating.
     * @type {Array<string>}
     * @memberof PatchedSCIMProviderRequest
     */
    propertyMappingsGroup?: Array<string>;
    /**
     * Base URL to SCIM requests, usually ends in /v2
     * @type {string}
     * @memberof PatchedSCIMProviderRequest
     */
    url?: string;
    /**
     * Authentication token
     * @type {string}
     * @memberof PatchedSCIMProviderRequest
     */
    token?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedSCIMProviderRequest
     */
    excludeUsersServiceAccount?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatchedSCIMProviderRequest
     */
    filterGroup?: string | null;
}

/**
 * Check if a given object implements the PatchedSCIMProviderRequest interface.
 */
export function instanceOfPatchedSCIMProviderRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedSCIMProviderRequestFromJSON(json: any): PatchedSCIMProviderRequest {
    return PatchedSCIMProviderRequestFromJSONTyped(json, false);
}

export function PatchedSCIMProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedSCIMProviderRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'propertyMappings': !exists(json, 'property_mappings') ? undefined : json['property_mappings'],
        'propertyMappingsGroup': !exists(json, 'property_mappings_group') ? undefined : json['property_mappings_group'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'token': !exists(json, 'token') ? undefined : json['token'],
        'excludeUsersServiceAccount': !exists(json, 'exclude_users_service_account') ? undefined : json['exclude_users_service_account'],
        'filterGroup': !exists(json, 'filter_group') ? undefined : json['filter_group'],
    };
}

export function PatchedSCIMProviderRequestToJSON(value?: PatchedSCIMProviderRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'property_mappings': value.propertyMappings,
        'property_mappings_group': value.propertyMappingsGroup,
        'url': value.url,
        'token': value.token,
        'exclude_users_service_account': value.excludeUsersServiceAccount,
        'filter_group': value.filterGroup,
    };
}

