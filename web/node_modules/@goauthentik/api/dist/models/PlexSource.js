"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlexSourceToJSON = exports.PlexSourceFromJSONTyped = exports.PlexSourceFromJSON = exports.instanceOfPlexSource = void 0;
const runtime_1 = require("../runtime");
const PolicyEngineMode_1 = require("./PolicyEngineMode");
const UserMatchingModeEnum_1 = require("./UserMatchingModeEnum");
/**
 * Check if a given object implements the PlexSource interface.
 */
function instanceOfPlexSource(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "slug" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    isInstance = isInstance && "managed" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "plexToken" in value;
    return isInstance;
}
exports.instanceOfPlexSource = instanceOfPlexSource;
function PlexSourceFromJSON(json) {
    return PlexSourceFromJSONTyped(json, false);
}
exports.PlexSourceFromJSON = PlexSourceFromJSON;
function PlexSourceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'slug': json['slug'],
        'enabled': !(0, runtime_1.exists)(json, 'enabled') ? undefined : json['enabled'],
        'authenticationFlow': !(0, runtime_1.exists)(json, 'authentication_flow') ? undefined : json['authentication_flow'],
        'enrollmentFlow': !(0, runtime_1.exists)(json, 'enrollment_flow') ? undefined : json['enrollment_flow'],
        'component': json['component'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'policyEngineMode': !(0, runtime_1.exists)(json, 'policy_engine_mode') ? undefined : (0, PolicyEngineMode_1.PolicyEngineModeFromJSON)(json['policy_engine_mode']),
        'userMatchingMode': !(0, runtime_1.exists)(json, 'user_matching_mode') ? undefined : (0, UserMatchingModeEnum_1.UserMatchingModeEnumFromJSON)(json['user_matching_mode']),
        'managed': json['managed'],
        'userPathTemplate': !(0, runtime_1.exists)(json, 'user_path_template') ? undefined : json['user_path_template'],
        'icon': json['icon'],
        'clientId': !(0, runtime_1.exists)(json, 'client_id') ? undefined : json['client_id'],
        'allowedServers': !(0, runtime_1.exists)(json, 'allowed_servers') ? undefined : json['allowed_servers'],
        'allowFriends': !(0, runtime_1.exists)(json, 'allow_friends') ? undefined : json['allow_friends'],
        'plexToken': json['plex_token'],
    };
}
exports.PlexSourceFromJSONTyped = PlexSourceFromJSONTyped;
function PlexSourceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'slug': value.slug,
        'enabled': value.enabled,
        'authentication_flow': value.authenticationFlow,
        'enrollment_flow': value.enrollmentFlow,
        'policy_engine_mode': (0, PolicyEngineMode_1.PolicyEngineModeToJSON)(value.policyEngineMode),
        'user_matching_mode': (0, UserMatchingModeEnum_1.UserMatchingModeEnumToJSON)(value.userMatchingMode),
        'user_path_template': value.userPathTemplate,
        'client_id': value.clientId,
        'allowed_servers': value.allowedServers,
        'allow_friends': value.allowFriends,
        'plex_token': value.plexToken,
    };
}
exports.PlexSourceToJSON = PlexSourceToJSON;
