"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DummyStageToJSON = exports.DummyStageFromJSONTyped = exports.DummyStageFromJSON = exports.instanceOfDummyStage = void 0;
const runtime_1 = require("../runtime");
const FlowSet_1 = require("./FlowSet");
/**
 * Check if a given object implements the DummyStage interface.
 */
function instanceOfDummyStage(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    return isInstance;
}
exports.instanceOfDummyStage = instanceOfDummyStage;
function DummyStageFromJSON(json) {
    return DummyStageFromJSONTyped(json, false);
}
exports.DummyStageFromJSON = DummyStageFromJSON;
function DummyStageFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'component': json['component'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'flowSet': !(0, runtime_1.exists)(json, 'flow_set') ? undefined : (json['flow_set'].map(FlowSet_1.FlowSetFromJSON)),
        'throwError': !(0, runtime_1.exists)(json, 'throw_error') ? undefined : json['throw_error'],
    };
}
exports.DummyStageFromJSONTyped = DummyStageFromJSONTyped;
function DummyStageToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : (value.flowSet.map(FlowSet_1.FlowSetToJSON)),
        'throw_error': value.throwError,
    };
}
exports.DummyStageToJSON = DummyStageToJSON;
