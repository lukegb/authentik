/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeviceClassesEnum } from './DeviceClassesEnum';
import {
    DeviceClassesEnumFromJSON,
    DeviceClassesEnumFromJSONTyped,
    DeviceClassesEnumToJSON,
} from './DeviceClassesEnum';
import type { FlowSetRequest } from './FlowSetRequest';
import {
    FlowSetRequestFromJSON,
    FlowSetRequestFromJSONTyped,
    FlowSetRequestToJSON,
} from './FlowSetRequest';
import type { NotConfiguredActionEnum } from './NotConfiguredActionEnum';
import {
    NotConfiguredActionEnumFromJSON,
    NotConfiguredActionEnumFromJSONTyped,
    NotConfiguredActionEnumToJSON,
} from './NotConfiguredActionEnum';
import type { UserVerificationEnum } from './UserVerificationEnum';
import {
    UserVerificationEnumFromJSON,
    UserVerificationEnumFromJSONTyped,
    UserVerificationEnumToJSON,
} from './UserVerificationEnum';

/**
 * AuthenticatorValidateStage Serializer
 * @export
 * @interface AuthenticatorValidateStageRequest
 */
export interface AuthenticatorValidateStageRequest {
    /**
     * 
     * @type {string}
     * @memberof AuthenticatorValidateStageRequest
     */
    name: string;
    /**
     * 
     * @type {Array<FlowSetRequest>}
     * @memberof AuthenticatorValidateStageRequest
     */
    flowSet?: Array<FlowSetRequest>;
    /**
     * 
     * @type {NotConfiguredActionEnum}
     * @memberof AuthenticatorValidateStageRequest
     */
    notConfiguredAction?: NotConfiguredActionEnum;
    /**
     * Device classes which can be used to authenticate
     * @type {Array<DeviceClassesEnum>}
     * @memberof AuthenticatorValidateStageRequest
     */
    deviceClasses?: Array<DeviceClassesEnum>;
    /**
     * Stages used to configure Authenticator when user doesn't have any compatible devices. After this configuration Stage passes, the user is not prompted again.
     * @type {Array<string>}
     * @memberof AuthenticatorValidateStageRequest
     */
    configurationStages?: Array<string>;
    /**
     * If any of the user's device has been used within this threshold, this stage will be skipped
     * @type {string}
     * @memberof AuthenticatorValidateStageRequest
     */
    lastAuthThreshold?: string;
    /**
     * 
     * @type {UserVerificationEnum}
     * @memberof AuthenticatorValidateStageRequest
     */
    webauthnUserVerification?: UserVerificationEnum;
}

/**
 * Check if a given object implements the AuthenticatorValidateStageRequest interface.
 */
export function instanceOfAuthenticatorValidateStageRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AuthenticatorValidateStageRequestFromJSON(json: any): AuthenticatorValidateStageRequest {
    return AuthenticatorValidateStageRequestFromJSONTyped(json, false);
}

export function AuthenticatorValidateStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticatorValidateStageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'flowSet': !exists(json, 'flow_set') ? undefined : ((json['flow_set'] as Array<any>).map(FlowSetRequestFromJSON)),
        'notConfiguredAction': !exists(json, 'not_configured_action') ? undefined : NotConfiguredActionEnumFromJSON(json['not_configured_action']),
        'deviceClasses': !exists(json, 'device_classes') ? undefined : ((json['device_classes'] as Array<any>).map(DeviceClassesEnumFromJSON)),
        'configurationStages': !exists(json, 'configuration_stages') ? undefined : json['configuration_stages'],
        'lastAuthThreshold': !exists(json, 'last_auth_threshold') ? undefined : json['last_auth_threshold'],
        'webauthnUserVerification': !exists(json, 'webauthn_user_verification') ? undefined : UserVerificationEnumFromJSON(json['webauthn_user_verification']),
    };
}

export function AuthenticatorValidateStageRequestToJSON(value?: AuthenticatorValidateStageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : ((value.flowSet as Array<any>).map(FlowSetRequestToJSON)),
        'not_configured_action': NotConfiguredActionEnumToJSON(value.notConfiguredAction),
        'device_classes': value.deviceClasses === undefined ? undefined : ((value.deviceClasses as Array<any>).map(DeviceClassesEnumToJSON)),
        'configuration_stages': value.configurationStages,
        'last_auth_threshold': value.lastAuthThreshold,
        'webauthn_user_verification': UserVerificationEnumToJSON(value.webauthnUserVerification),
    };
}

