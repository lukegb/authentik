/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Coordinate, Event, EventRequest, EventTopPerUser, Notification, NotificationRequest, NotificationRule, NotificationRuleRequest, NotificationTransport, NotificationTransportRequest, NotificationTransportTest, PaginatedEventList, PaginatedNotificationList, PaginatedNotificationRuleList, PaginatedNotificationTransportList, PaginatedSystemTaskList, PatchedEventRequest, PatchedNotificationRequest, PatchedNotificationRuleRequest, PatchedNotificationTransportRequest, SystemTask, TypeCreate, UsedBy } from '../models';
export interface EventsEventsCreateRequest {
    eventRequest: EventRequest;
}
export interface EventsEventsDestroyRequest {
    eventUuid: string;
}
export interface EventsEventsListRequest {
    action?: string;
    brandName?: string;
    clientIp?: string;
    contextAuthorizedApp?: string;
    contextModelApp?: string;
    contextModelName?: string;
    contextModelPk?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
    username?: string;
}
export interface EventsEventsPartialUpdateRequest {
    eventUuid: string;
    patchedEventRequest?: PatchedEventRequest;
}
export interface EventsEventsPerMonthListRequest {
    action?: string;
    query?: string;
}
export interface EventsEventsRetrieveRequest {
    eventUuid: string;
}
export interface EventsEventsTopPerUserListRequest {
    action?: string;
    topN?: number;
}
export interface EventsEventsUpdateRequest {
    eventUuid: string;
    eventRequest: EventRequest;
}
export interface EventsEventsVolumeListRequest {
    action?: string;
    brandName?: string;
    clientIp?: string;
    contextAuthorizedApp?: string;
    contextModelApp?: string;
    contextModelName?: string;
    contextModelPk?: string;
    ordering?: string;
    search?: string;
    username?: string;
}
export interface EventsNotificationsDestroyRequest {
    uuid: string;
}
export interface EventsNotificationsListRequest {
    body?: string;
    created?: Date;
    event?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
    seen?: boolean;
    severity?: EventsNotificationsListSeverityEnum;
    user?: number;
}
export interface EventsNotificationsPartialUpdateRequest {
    uuid: string;
    patchedNotificationRequest?: PatchedNotificationRequest;
}
export interface EventsNotificationsRetrieveRequest {
    uuid: string;
}
export interface EventsNotificationsUpdateRequest {
    uuid: string;
    notificationRequest?: NotificationRequest;
}
export interface EventsNotificationsUsedByListRequest {
    uuid: string;
}
export interface EventsRulesCreateRequest {
    notificationRuleRequest: NotificationRuleRequest;
}
export interface EventsRulesDestroyRequest {
    pbmUuid: string;
}
export interface EventsRulesListRequest {
    groupName?: string;
    name?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
    severity?: EventsRulesListSeverityEnum;
}
export interface EventsRulesPartialUpdateRequest {
    pbmUuid: string;
    patchedNotificationRuleRequest?: PatchedNotificationRuleRequest;
}
export interface EventsRulesRetrieveRequest {
    pbmUuid: string;
}
export interface EventsRulesUpdateRequest {
    pbmUuid: string;
    notificationRuleRequest: NotificationRuleRequest;
}
export interface EventsRulesUsedByListRequest {
    pbmUuid: string;
}
export interface EventsSystemTasksListRequest {
    name?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
    status?: EventsSystemTasksListStatusEnum;
    uid?: string;
}
export interface EventsSystemTasksRetrieveRequest {
    uuid: string;
}
export interface EventsSystemTasksRunCreateRequest {
    uuid: string;
}
export interface EventsTransportsCreateRequest {
    notificationTransportRequest: NotificationTransportRequest;
}
export interface EventsTransportsDestroyRequest {
    uuid: string;
}
export interface EventsTransportsListRequest {
    mode?: EventsTransportsListModeEnum;
    name?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
    sendOnce?: boolean;
    webhookUrl?: string;
}
export interface EventsTransportsPartialUpdateRequest {
    uuid: string;
    patchedNotificationTransportRequest?: PatchedNotificationTransportRequest;
}
export interface EventsTransportsRetrieveRequest {
    uuid: string;
}
export interface EventsTransportsTestCreateRequest {
    uuid: string;
}
export interface EventsTransportsUpdateRequest {
    uuid: string;
    notificationTransportRequest: NotificationTransportRequest;
}
export interface EventsTransportsUsedByListRequest {
    uuid: string;
}
/**
 *
 */
export declare class EventsApi extends runtime.BaseAPI {
    /**
     * Get all actions
     */
    eventsEventsActionsListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TypeCreate>>>;
    /**
     * Get all actions
     */
    eventsEventsActionsList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TypeCreate>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsCreateRaw(requestParameters: EventsEventsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Event>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsCreate(requestParameters: EventsEventsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Event>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsDestroyRaw(requestParameters: EventsEventsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsDestroy(requestParameters: EventsEventsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsListRaw(requestParameters: EventsEventsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedEventList>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsList(requestParameters?: EventsEventsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedEventList>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsPartialUpdateRaw(requestParameters: EventsEventsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Event>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsPartialUpdate(requestParameters: EventsEventsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Event>;
    /**
     * Get the count of events per month
     */
    eventsEventsPerMonthListRaw(requestParameters: EventsEventsPerMonthListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Coordinate>>>;
    /**
     * Get the count of events per month
     */
    eventsEventsPerMonthList(requestParameters?: EventsEventsPerMonthListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Coordinate>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsRetrieveRaw(requestParameters: EventsEventsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Event>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsRetrieve(requestParameters: EventsEventsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Event>;
    /**
     * Get the top_n events grouped by user count
     */
    eventsEventsTopPerUserListRaw(requestParameters: EventsEventsTopPerUserListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<EventTopPerUser>>>;
    /**
     * Get the top_n events grouped by user count
     */
    eventsEventsTopPerUserList(requestParameters?: EventsEventsTopPerUserListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<EventTopPerUser>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsUpdateRaw(requestParameters: EventsEventsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Event>>;
    /**
     * Event Read-Only Viewset
     */
    eventsEventsUpdate(requestParameters: EventsEventsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Event>;
    /**
     * Get event volume for specified filters and timeframe
     */
    eventsEventsVolumeListRaw(requestParameters: EventsEventsVolumeListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Coordinate>>>;
    /**
     * Get event volume for specified filters and timeframe
     */
    eventsEventsVolumeList(requestParameters?: EventsEventsVolumeListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Coordinate>>;
    /**
     * Notification Viewset
     */
    eventsNotificationsDestroyRaw(requestParameters: EventsNotificationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Notification Viewset
     */
    eventsNotificationsDestroy(requestParameters: EventsNotificationsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Notification Viewset
     */
    eventsNotificationsListRaw(requestParameters: EventsNotificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedNotificationList>>;
    /**
     * Notification Viewset
     */
    eventsNotificationsList(requestParameters?: EventsNotificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedNotificationList>;
    /**
     * Mark all the user\'s notifications as seen
     */
    eventsNotificationsMarkAllSeenCreateRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Mark all the user\'s notifications as seen
     */
    eventsNotificationsMarkAllSeenCreate(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Notification Viewset
     */
    eventsNotificationsPartialUpdateRaw(requestParameters: EventsNotificationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Notification>>;
    /**
     * Notification Viewset
     */
    eventsNotificationsPartialUpdate(requestParameters: EventsNotificationsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Notification>;
    /**
     * Notification Viewset
     */
    eventsNotificationsRetrieveRaw(requestParameters: EventsNotificationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Notification>>;
    /**
     * Notification Viewset
     */
    eventsNotificationsRetrieve(requestParameters: EventsNotificationsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Notification>;
    /**
     * Notification Viewset
     */
    eventsNotificationsUpdateRaw(requestParameters: EventsNotificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Notification>>;
    /**
     * Notification Viewset
     */
    eventsNotificationsUpdate(requestParameters: EventsNotificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Notification>;
    /**
     * Get a list of all objects that use this object
     */
    eventsNotificationsUsedByListRaw(requestParameters: EventsNotificationsUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UsedBy>>>;
    /**
     * Get a list of all objects that use this object
     */
    eventsNotificationsUsedByList(requestParameters: EventsNotificationsUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UsedBy>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesCreateRaw(requestParameters: EventsRulesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationRule>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesCreate(requestParameters: EventsRulesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationRule>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesDestroyRaw(requestParameters: EventsRulesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesDestroy(requestParameters: EventsRulesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesListRaw(requestParameters: EventsRulesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedNotificationRuleList>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesList(requestParameters?: EventsRulesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedNotificationRuleList>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesPartialUpdateRaw(requestParameters: EventsRulesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationRule>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesPartialUpdate(requestParameters: EventsRulesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationRule>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesRetrieveRaw(requestParameters: EventsRulesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationRule>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesRetrieve(requestParameters: EventsRulesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationRule>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesUpdateRaw(requestParameters: EventsRulesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationRule>>;
    /**
     * NotificationRule Viewset
     */
    eventsRulesUpdate(requestParameters: EventsRulesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationRule>;
    /**
     * Get a list of all objects that use this object
     */
    eventsRulesUsedByListRaw(requestParameters: EventsRulesUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UsedBy>>>;
    /**
     * Get a list of all objects that use this object
     */
    eventsRulesUsedByList(requestParameters: EventsRulesUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UsedBy>>;
    /**
     * Read-only view set that returns all background tasks
     */
    eventsSystemTasksListRaw(requestParameters: EventsSystemTasksListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedSystemTaskList>>;
    /**
     * Read-only view set that returns all background tasks
     */
    eventsSystemTasksList(requestParameters?: EventsSystemTasksListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedSystemTaskList>;
    /**
     * Read-only view set that returns all background tasks
     */
    eventsSystemTasksRetrieveRaw(requestParameters: EventsSystemTasksRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemTask>>;
    /**
     * Read-only view set that returns all background tasks
     */
    eventsSystemTasksRetrieve(requestParameters: EventsSystemTasksRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemTask>;
    /**
     * Run task
     */
    eventsSystemTasksRunCreateRaw(requestParameters: EventsSystemTasksRunCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Run task
     */
    eventsSystemTasksRunCreate(requestParameters: EventsSystemTasksRunCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsCreateRaw(requestParameters: EventsTransportsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTransport>>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsCreate(requestParameters: EventsTransportsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTransport>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsDestroyRaw(requestParameters: EventsTransportsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsDestroy(requestParameters: EventsTransportsDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsListRaw(requestParameters: EventsTransportsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedNotificationTransportList>>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsList(requestParameters?: EventsTransportsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedNotificationTransportList>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsPartialUpdateRaw(requestParameters: EventsTransportsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTransport>>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsPartialUpdate(requestParameters: EventsTransportsPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTransport>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsRetrieveRaw(requestParameters: EventsTransportsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTransport>>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsRetrieve(requestParameters: EventsTransportsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTransport>;
    /**
     * Send example notification using selected transport. Requires Modify permissions.
     */
    eventsTransportsTestCreateRaw(requestParameters: EventsTransportsTestCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTransportTest>>;
    /**
     * Send example notification using selected transport. Requires Modify permissions.
     */
    eventsTransportsTestCreate(requestParameters: EventsTransportsTestCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTransportTest>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsUpdateRaw(requestParameters: EventsTransportsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTransport>>;
    /**
     * NotificationTransport Viewset
     */
    eventsTransportsUpdate(requestParameters: EventsTransportsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTransport>;
    /**
     * Get a list of all objects that use this object
     */
    eventsTransportsUsedByListRaw(requestParameters: EventsTransportsUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UsedBy>>>;
    /**
     * Get a list of all objects that use this object
     */
    eventsTransportsUsedByList(requestParameters: EventsTransportsUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UsedBy>>;
}
/**
 * @export
 */
export declare const EventsNotificationsListSeverityEnum: {
    readonly Alert: "alert";
    readonly Notice: "notice";
    readonly Warning: "warning";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type EventsNotificationsListSeverityEnum = typeof EventsNotificationsListSeverityEnum[keyof typeof EventsNotificationsListSeverityEnum];
/**
 * @export
 */
export declare const EventsRulesListSeverityEnum: {
    readonly Alert: "alert";
    readonly Notice: "notice";
    readonly Warning: "warning";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type EventsRulesListSeverityEnum = typeof EventsRulesListSeverityEnum[keyof typeof EventsRulesListSeverityEnum];
/**
 * @export
 */
export declare const EventsSystemTasksListStatusEnum: {
    readonly Error: "error";
    readonly Successful: "successful";
    readonly Unknown: "unknown";
    readonly Warning: "warning";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type EventsSystemTasksListStatusEnum = typeof EventsSystemTasksListStatusEnum[keyof typeof EventsSystemTasksListStatusEnum];
/**
 * @export
 */
export declare const EventsTransportsListModeEnum: {
    readonly Email: "email";
    readonly Local: "local";
    readonly Webhook: "webhook";
    readonly WebhookSlack: "webhook_slack";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type EventsTransportsListModeEnum = typeof EventsTransportsListModeEnum[keyof typeof EventsTransportsListModeEnum];
