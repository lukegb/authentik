/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InvalidResponseActionEnum } from './InvalidResponseActionEnum';
import {
    InvalidResponseActionEnumFromJSON,
    InvalidResponseActionEnumFromJSONTyped,
    InvalidResponseActionEnumToJSON,
} from './InvalidResponseActionEnum';
import type { PolicyEngineMode } from './PolicyEngineMode';
import {
    PolicyEngineModeFromJSON,
    PolicyEngineModeFromJSONTyped,
    PolicyEngineModeToJSON,
} from './PolicyEngineMode';
import type { Stage } from './Stage';
import {
    StageFromJSON,
    StageFromJSONTyped,
    StageToJSON,
} from './Stage';

/**
 * FlowStageBinding Serializer
 * @export
 * @interface FlowStageBinding
 */
export interface FlowStageBinding {
    /**
     * 
     * @type {string}
     * @memberof FlowStageBinding
     */
    readonly pk: string;
    /**
     * 
     * @type {string}
     * @memberof FlowStageBinding
     */
    readonly policybindingmodelPtrId: string;
    /**
     * 
     * @type {string}
     * @memberof FlowStageBinding
     */
    target: string;
    /**
     * 
     * @type {string}
     * @memberof FlowStageBinding
     */
    stage: string;
    /**
     * 
     * @type {Stage}
     * @memberof FlowStageBinding
     */
    readonly stageObj: Stage;
    /**
     * Evaluate policies during the Flow planning process.
     * @type {boolean}
     * @memberof FlowStageBinding
     */
    evaluateOnPlan?: boolean;
    /**
     * Evaluate policies when the Stage is present to the user.
     * @type {boolean}
     * @memberof FlowStageBinding
     */
    reEvaluatePolicies?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FlowStageBinding
     */
    order: number;
    /**
     * 
     * @type {PolicyEngineMode}
     * @memberof FlowStageBinding
     */
    policyEngineMode?: PolicyEngineMode;
    /**
     * 
     * @type {InvalidResponseActionEnum}
     * @memberof FlowStageBinding
     */
    invalidResponseAction?: InvalidResponseActionEnum;
}

/**
 * Check if a given object implements the FlowStageBinding interface.
 */
export function instanceOfFlowStageBinding(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "policybindingmodelPtrId" in value;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "stage" in value;
    isInstance = isInstance && "stageObj" in value;
    isInstance = isInstance && "order" in value;

    return isInstance;
}

export function FlowStageBindingFromJSON(json: any): FlowStageBinding {
    return FlowStageBindingFromJSONTyped(json, false);
}

export function FlowStageBindingFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlowStageBinding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pk': json['pk'],
        'policybindingmodelPtrId': json['policybindingmodel_ptr_id'],
        'target': json['target'],
        'stage': json['stage'],
        'stageObj': StageFromJSON(json['stage_obj']),
        'evaluateOnPlan': !exists(json, 'evaluate_on_plan') ? undefined : json['evaluate_on_plan'],
        'reEvaluatePolicies': !exists(json, 're_evaluate_policies') ? undefined : json['re_evaluate_policies'],
        'order': json['order'],
        'policyEngineMode': !exists(json, 'policy_engine_mode') ? undefined : PolicyEngineModeFromJSON(json['policy_engine_mode']),
        'invalidResponseAction': !exists(json, 'invalid_response_action') ? undefined : InvalidResponseActionEnumFromJSON(json['invalid_response_action']),
    };
}

export function FlowStageBindingToJSON(value?: FlowStageBinding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'target': value.target,
        'stage': value.stage,
        'evaluate_on_plan': value.evaluateOnPlan,
        're_evaluate_policies': value.reEvaluatePolicies,
        'order': value.order,
        'policy_engine_mode': PolicyEngineModeToJSON(value.policyEngineMode),
        'invalid_response_action': InvalidResponseActionEnumToJSON(value.invalidResponseAction),
    };
}

