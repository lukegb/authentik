/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FlowSetRequest } from './FlowSetRequest';
import {
    FlowSetRequestFromJSON,
    FlowSetRequestFromJSONTyped,
    FlowSetRequestToJSON,
} from './FlowSetRequest';

/**
 * DummyStage Serializer
 * @export
 * @interface DummyStageRequest
 */
export interface DummyStageRequest {
    /**
     * 
     * @type {string}
     * @memberof DummyStageRequest
     */
    name: string;
    /**
     * 
     * @type {Array<FlowSetRequest>}
     * @memberof DummyStageRequest
     */
    flowSet?: Array<FlowSetRequest>;
    /**
     * 
     * @type {boolean}
     * @memberof DummyStageRequest
     */
    throwError?: boolean;
}

/**
 * Check if a given object implements the DummyStageRequest interface.
 */
export function instanceOfDummyStageRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function DummyStageRequestFromJSON(json: any): DummyStageRequest {
    return DummyStageRequestFromJSONTyped(json, false);
}

export function DummyStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DummyStageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'flowSet': !exists(json, 'flow_set') ? undefined : ((json['flow_set'] as Array<any>).map(FlowSetRequestFromJSON)),
        'throwError': !exists(json, 'throw_error') ? undefined : json['throw_error'],
    };
}

export function DummyStageRequestToJSON(value?: DummyStageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : ((value.flowSet as Array<any>).map(FlowSetRequestToJSON)),
        'throw_error': value.throwError,
    };
}

