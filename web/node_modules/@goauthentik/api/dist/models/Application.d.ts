/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PolicyEngineMode } from './PolicyEngineMode';
import type { Provider } from './Provider';
/**
 * Application Serializer
 * @export
 * @interface Application
 */
export interface Application {
    /**
     *
     * @type {string}
     * @memberof Application
     */
    readonly pk: string;
    /**
     * Application's display Name.
     * @type {string}
     * @memberof Application
     */
    name: string;
    /**
     * Internal application name, used in URLs.
     * @type {string}
     * @memberof Application
     */
    slug: string;
    /**
     *
     * @type {number}
     * @memberof Application
     */
    provider?: number | null;
    /**
     *
     * @type {Provider}
     * @memberof Application
     */
    readonly providerObj: Provider;
    /**
     *
     * @type {Array<number>}
     * @memberof Application
     */
    backchannelProviders?: Array<number>;
    /**
     *
     * @type {Array<Provider>}
     * @memberof Application
     */
    readonly backchannelProvidersObj: Array<Provider>;
    /**
     * Allow formatting of launch URL
     * @type {string}
     * @memberof Application
     */
    readonly launchUrl: string | null;
    /**
     * Open launch URL in a new browser tab or window.
     * @type {boolean}
     * @memberof Application
     */
    openInNewTab?: boolean;
    /**
     *
     * @type {string}
     * @memberof Application
     */
    metaLaunchUrl?: string;
    /**
     * Get the URL to the App Icon image. If the name is /static or starts with http
     * it is returned as-is
     * @type {string}
     * @memberof Application
     */
    readonly metaIcon: string | null;
    /**
     *
     * @type {string}
     * @memberof Application
     */
    metaDescription?: string;
    /**
     *
     * @type {string}
     * @memberof Application
     */
    metaPublisher?: string;
    /**
     *
     * @type {PolicyEngineMode}
     * @memberof Application
     */
    policyEngineMode?: PolicyEngineMode;
    /**
     *
     * @type {string}
     * @memberof Application
     */
    group?: string;
}
/**
 * Check if a given object implements the Application interface.
 */
export declare function instanceOfApplication(value: object): boolean;
export declare function ApplicationFromJSON(json: any): Application;
export declare function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application;
export declare function ApplicationToJSON(value?: Application | null): any;
