/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * OAuth Source Serializer
 * @export
 * @interface PatchedUserOAuthSourceConnectionRequest
 */
export interface PatchedUserOAuthSourceConnectionRequest {
    /**
     * 
     * @type {number}
     * @memberof PatchedUserOAuthSourceConnectionRequest
     */
    user?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedUserOAuthSourceConnectionRequest
     */
    identifier?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedUserOAuthSourceConnectionRequest
     */
    accessToken?: string | null;
}

/**
 * Check if a given object implements the PatchedUserOAuthSourceConnectionRequest interface.
 */
export function instanceOfPatchedUserOAuthSourceConnectionRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedUserOAuthSourceConnectionRequestFromJSON(json: any): PatchedUserOAuthSourceConnectionRequest {
    return PatchedUserOAuthSourceConnectionRequestFromJSONTyped(json, false);
}

export function PatchedUserOAuthSourceConnectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedUserOAuthSourceConnectionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'user') ? undefined : json['user'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'accessToken': !exists(json, 'access_token') ? undefined : json['access_token'],
    };
}

export function PatchedUserOAuthSourceConnectionRequestToJSON(value?: PatchedUserOAuthSourceConnectionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': value.user,
        'identifier': value.identifier,
        'access_token': value.accessToken,
    };
}

