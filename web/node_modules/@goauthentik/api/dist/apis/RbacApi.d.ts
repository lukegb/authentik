/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { PaginatedExtraRoleObjectPermissionList, PaginatedExtraUserObjectPermissionList, PaginatedPermissionList, PaginatedRoleAssignedObjectPermissionList, PaginatedRoleList, PaginatedUserAssignedObjectPermissionList, PatchedPermissionAssignRequest, PatchedRoleRequest, Permission, PermissionAssignRequest, Role, RoleRequest, UsedBy } from '../models';
export interface RbacPermissionsAssignedByRolesAssignCreateRequest {
    uuid: string;
    permissionAssignRequest: PermissionAssignRequest;
}
export interface RbacPermissionsAssignedByRolesListRequest {
    model: RbacPermissionsAssignedByRolesListModelEnum;
    objectPk?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}
export interface RbacPermissionsAssignedByRolesUnassignPartialUpdateRequest {
    uuid: string;
    patchedPermissionAssignRequest?: PatchedPermissionAssignRequest;
}
export interface RbacPermissionsAssignedByUsersAssignCreateRequest {
    id: number;
    permissionAssignRequest: PermissionAssignRequest;
}
export interface RbacPermissionsAssignedByUsersListRequest {
    model: RbacPermissionsAssignedByUsersListModelEnum;
    objectPk?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}
export interface RbacPermissionsAssignedByUsersUnassignPartialUpdateRequest {
    id: number;
    patchedPermissionAssignRequest?: PatchedPermissionAssignRequest;
}
export interface RbacPermissionsListRequest {
    codename?: string;
    contentTypeAppLabel?: string;
    contentTypeModel?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    role?: string;
    search?: string;
    user?: number;
}
export interface RbacPermissionsRetrieveRequest {
    id: number;
}
export interface RbacPermissionsRolesListRequest {
    uuid: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}
export interface RbacPermissionsUsersListRequest {
    userId: number;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}
export interface RbacRolesCreateRequest {
    roleRequest: RoleRequest;
}
export interface RbacRolesDestroyRequest {
    uuid: string;
}
export interface RbacRolesListRequest {
    groupName?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}
export interface RbacRolesPartialUpdateRequest {
    uuid: string;
    patchedRoleRequest?: PatchedRoleRequest;
}
export interface RbacRolesRetrieveRequest {
    uuid: string;
}
export interface RbacRolesUpdateRequest {
    uuid: string;
    roleRequest: RoleRequest;
}
export interface RbacRolesUsedByListRequest {
    uuid: string;
}
/**
 *
 */
export declare class RbacApi extends runtime.BaseAPI {
    /**
     * Assign permission(s) to role. When `object_pk` is set, the permissions are only assigned to the specific object, otherwise they are assigned globally.
     */
    rbacPermissionsAssignedByRolesAssignCreateRaw(requestParameters: RbacPermissionsAssignedByRolesAssignCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Assign permission(s) to role. When `object_pk` is set, the permissions are only assigned to the specific object, otherwise they are assigned globally.
     */
    rbacPermissionsAssignedByRolesAssignCreate(requestParameters: RbacPermissionsAssignedByRolesAssignCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get assigned object permissions for a single object
     */
    rbacPermissionsAssignedByRolesListRaw(requestParameters: RbacPermissionsAssignedByRolesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedRoleAssignedObjectPermissionList>>;
    /**
     * Get assigned object permissions for a single object
     */
    rbacPermissionsAssignedByRolesList(requestParameters: RbacPermissionsAssignedByRolesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedRoleAssignedObjectPermissionList>;
    /**
     * Unassign permission(s) to role. When `object_pk` is set, the permissions are only assigned to the specific object, otherwise they are assigned globally.
     */
    rbacPermissionsAssignedByRolesUnassignPartialUpdateRaw(requestParameters: RbacPermissionsAssignedByRolesUnassignPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Unassign permission(s) to role. When `object_pk` is set, the permissions are only assigned to the specific object, otherwise they are assigned globally.
     */
    rbacPermissionsAssignedByRolesUnassignPartialUpdate(requestParameters: RbacPermissionsAssignedByRolesUnassignPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Assign permission(s) to user
     */
    rbacPermissionsAssignedByUsersAssignCreateRaw(requestParameters: RbacPermissionsAssignedByUsersAssignCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Assign permission(s) to user
     */
    rbacPermissionsAssignedByUsersAssignCreate(requestParameters: RbacPermissionsAssignedByUsersAssignCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get assigned object permissions for a single object
     */
    rbacPermissionsAssignedByUsersListRaw(requestParameters: RbacPermissionsAssignedByUsersListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedUserAssignedObjectPermissionList>>;
    /**
     * Get assigned object permissions for a single object
     */
    rbacPermissionsAssignedByUsersList(requestParameters: RbacPermissionsAssignedByUsersListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedUserAssignedObjectPermissionList>;
    /**
     * Unassign permission(s) to user. When `object_pk` is set, the permissions are only assigned to the specific object, otherwise they are assigned globally.
     */
    rbacPermissionsAssignedByUsersUnassignPartialUpdateRaw(requestParameters: RbacPermissionsAssignedByUsersUnassignPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Unassign permission(s) to user. When `object_pk` is set, the permissions are only assigned to the specific object, otherwise they are assigned globally.
     */
    rbacPermissionsAssignedByUsersUnassignPartialUpdate(requestParameters: RbacPermissionsAssignedByUsersUnassignPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Read-only list of all permissions, filterable by model and app
     */
    rbacPermissionsListRaw(requestParameters: RbacPermissionsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedPermissionList>>;
    /**
     * Read-only list of all permissions, filterable by model and app
     */
    rbacPermissionsList(requestParameters?: RbacPermissionsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedPermissionList>;
    /**
     * Read-only list of all permissions, filterable by model and app
     */
    rbacPermissionsRetrieveRaw(requestParameters: RbacPermissionsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Permission>>;
    /**
     * Read-only list of all permissions, filterable by model and app
     */
    rbacPermissionsRetrieve(requestParameters: RbacPermissionsRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Permission>;
    /**
     * Get a role\'s assigned object permissions
     */
    rbacPermissionsRolesListRaw(requestParameters: RbacPermissionsRolesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedExtraRoleObjectPermissionList>>;
    /**
     * Get a role\'s assigned object permissions
     */
    rbacPermissionsRolesList(requestParameters: RbacPermissionsRolesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedExtraRoleObjectPermissionList>;
    /**
     * Get a users\'s assigned object permissions
     */
    rbacPermissionsUsersListRaw(requestParameters: RbacPermissionsUsersListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedExtraUserObjectPermissionList>>;
    /**
     * Get a users\'s assigned object permissions
     */
    rbacPermissionsUsersList(requestParameters: RbacPermissionsUsersListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedExtraUserObjectPermissionList>;
    /**
     * Role viewset
     */
    rbacRolesCreateRaw(requestParameters: RbacRolesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Role>>;
    /**
     * Role viewset
     */
    rbacRolesCreate(requestParameters: RbacRolesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Role>;
    /**
     * Role viewset
     */
    rbacRolesDestroyRaw(requestParameters: RbacRolesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Role viewset
     */
    rbacRolesDestroy(requestParameters: RbacRolesDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Role viewset
     */
    rbacRolesListRaw(requestParameters: RbacRolesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedRoleList>>;
    /**
     * Role viewset
     */
    rbacRolesList(requestParameters?: RbacRolesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedRoleList>;
    /**
     * Role viewset
     */
    rbacRolesPartialUpdateRaw(requestParameters: RbacRolesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Role>>;
    /**
     * Role viewset
     */
    rbacRolesPartialUpdate(requestParameters: RbacRolesPartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Role>;
    /**
     * Role viewset
     */
    rbacRolesRetrieveRaw(requestParameters: RbacRolesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Role>>;
    /**
     * Role viewset
     */
    rbacRolesRetrieve(requestParameters: RbacRolesRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Role>;
    /**
     * Role viewset
     */
    rbacRolesUpdateRaw(requestParameters: RbacRolesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Role>>;
    /**
     * Role viewset
     */
    rbacRolesUpdate(requestParameters: RbacRolesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Role>;
    /**
     * Get a list of all objects that use this object
     */
    rbacRolesUsedByListRaw(requestParameters: RbacRolesUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UsedBy>>>;
    /**
     * Get a list of all objects that use this object
     */
    rbacRolesUsedByList(requestParameters: RbacRolesUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UsedBy>>;
}
/**
 * @export
 */
export declare const RbacPermissionsAssignedByRolesListModelEnum: {
    readonly BlueprintsBlueprintinstance: "authentik_blueprints.blueprintinstance";
    readonly BrandsBrand: "authentik_brands.brand";
    readonly CoreApplication: "authentik_core.application";
    readonly CoreGroup: "authentik_core.group";
    readonly CoreToken: "authentik_core.token";
    readonly CoreUser: "authentik_core.user";
    readonly CryptoCertificatekeypair: "authentik_crypto.certificatekeypair";
    readonly EnterpriseLicense: "authentik_enterprise.license";
    readonly EventsEvent: "authentik_events.event";
    readonly EventsNotification: "authentik_events.notification";
    readonly EventsNotificationrule: "authentik_events.notificationrule";
    readonly EventsNotificationtransport: "authentik_events.notificationtransport";
    readonly EventsNotificationwebhookmapping: "authentik_events.notificationwebhookmapping";
    readonly FlowsFlow: "authentik_flows.flow";
    readonly FlowsFlowstagebinding: "authentik_flows.flowstagebinding";
    readonly OutpostsDockerserviceconnection: "authentik_outposts.dockerserviceconnection";
    readonly OutpostsKubernetesserviceconnection: "authentik_outposts.kubernetesserviceconnection";
    readonly OutpostsOutpost: "authentik_outposts.outpost";
    readonly PoliciesPolicybinding: "authentik_policies.policybinding";
    readonly PoliciesDummyDummypolicy: "authentik_policies_dummy.dummypolicy";
    readonly PoliciesEventMatcherEventmatcherpolicy: "authentik_policies_event_matcher.eventmatcherpolicy";
    readonly PoliciesExpiryPasswordexpirypolicy: "authentik_policies_expiry.passwordexpirypolicy";
    readonly PoliciesExpressionExpressionpolicy: "authentik_policies_expression.expressionpolicy";
    readonly PoliciesPasswordPasswordpolicy: "authentik_policies_password.passwordpolicy";
    readonly PoliciesReputationReputationpolicy: "authentik_policies_reputation.reputationpolicy";
    readonly ProvidersLdapLdapprovider: "authentik_providers_ldap.ldapprovider";
    readonly ProvidersOauth2Oauth2provider: "authentik_providers_oauth2.oauth2provider";
    readonly ProvidersOauth2Scopemapping: "authentik_providers_oauth2.scopemapping";
    readonly ProvidersProxyProxyprovider: "authentik_providers_proxy.proxyprovider";
    readonly ProvidersRacEndpoint: "authentik_providers_rac.endpoint";
    readonly ProvidersRacRacpropertymapping: "authentik_providers_rac.racpropertymapping";
    readonly ProvidersRacRacprovider: "authentik_providers_rac.racprovider";
    readonly ProvidersRadiusRadiusprovider: "authentik_providers_radius.radiusprovider";
    readonly ProvidersSamlSamlpropertymapping: "authentik_providers_saml.samlpropertymapping";
    readonly ProvidersSamlSamlprovider: "authentik_providers_saml.samlprovider";
    readonly ProvidersScimScimmapping: "authentik_providers_scim.scimmapping";
    readonly ProvidersScimScimprovider: "authentik_providers_scim.scimprovider";
    readonly RbacRole: "authentik_rbac.role";
    readonly SourcesLdapLdappropertymapping: "authentik_sources_ldap.ldappropertymapping";
    readonly SourcesLdapLdapsource: "authentik_sources_ldap.ldapsource";
    readonly SourcesOauthOauthsource: "authentik_sources_oauth.oauthsource";
    readonly SourcesOauthUseroauthsourceconnection: "authentik_sources_oauth.useroauthsourceconnection";
    readonly SourcesPlexPlexsource: "authentik_sources_plex.plexsource";
    readonly SourcesPlexPlexsourceconnection: "authentik_sources_plex.plexsourceconnection";
    readonly SourcesSamlSamlsource: "authentik_sources_saml.samlsource";
    readonly SourcesSamlUsersamlsourceconnection: "authentik_sources_saml.usersamlsourceconnection";
    readonly StagesAuthenticatorDuoAuthenticatorduostage: "authentik_stages_authenticator_duo.authenticatorduostage";
    readonly StagesAuthenticatorDuoDuodevice: "authentik_stages_authenticator_duo.duodevice";
    readonly StagesAuthenticatorSmsAuthenticatorsmsstage: "authentik_stages_authenticator_sms.authenticatorsmsstage";
    readonly StagesAuthenticatorSmsSmsdevice: "authentik_stages_authenticator_sms.smsdevice";
    readonly StagesAuthenticatorStaticAuthenticatorstaticstage: "authentik_stages_authenticator_static.authenticatorstaticstage";
    readonly StagesAuthenticatorStaticStaticdevice: "authentik_stages_authenticator_static.staticdevice";
    readonly StagesAuthenticatorTotpAuthenticatortotpstage: "authentik_stages_authenticator_totp.authenticatortotpstage";
    readonly StagesAuthenticatorTotpTotpdevice: "authentik_stages_authenticator_totp.totpdevice";
    readonly StagesAuthenticatorValidateAuthenticatorvalidatestage: "authentik_stages_authenticator_validate.authenticatorvalidatestage";
    readonly StagesAuthenticatorWebauthnAuthenticatewebauthnstage: "authentik_stages_authenticator_webauthn.authenticatewebauthnstage";
    readonly StagesAuthenticatorWebauthnWebauthndevice: "authentik_stages_authenticator_webauthn.webauthndevice";
    readonly StagesCaptchaCaptchastage: "authentik_stages_captcha.captchastage";
    readonly StagesConsentConsentstage: "authentik_stages_consent.consentstage";
    readonly StagesConsentUserconsent: "authentik_stages_consent.userconsent";
    readonly StagesDenyDenystage: "authentik_stages_deny.denystage";
    readonly StagesDummyDummystage: "authentik_stages_dummy.dummystage";
    readonly StagesEmailEmailstage: "authentik_stages_email.emailstage";
    readonly StagesExtAuthExtauthstage: "authentik_stages_ext_auth.extauthstage";
    readonly StagesIdentificationIdentificationstage: "authentik_stages_identification.identificationstage";
    readonly StagesInvitationInvitation: "authentik_stages_invitation.invitation";
    readonly StagesInvitationInvitationstage: "authentik_stages_invitation.invitationstage";
    readonly StagesPasswordPasswordstage: "authentik_stages_password.passwordstage";
    readonly StagesPromptPrompt: "authentik_stages_prompt.prompt";
    readonly StagesPromptPromptstage: "authentik_stages_prompt.promptstage";
    readonly StagesUserDeleteUserdeletestage: "authentik_stages_user_delete.userdeletestage";
    readonly StagesUserLoginUserloginstage: "authentik_stages_user_login.userloginstage";
    readonly StagesUserLogoutUserlogoutstage: "authentik_stages_user_logout.userlogoutstage";
    readonly StagesUserWriteUserwritestage: "authentik_stages_user_write.userwritestage";
    readonly TenantsDomain: "authentik_tenants.domain";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type RbacPermissionsAssignedByRolesListModelEnum = typeof RbacPermissionsAssignedByRolesListModelEnum[keyof typeof RbacPermissionsAssignedByRolesListModelEnum];
/**
 * @export
 */
export declare const RbacPermissionsAssignedByUsersListModelEnum: {
    readonly BlueprintsBlueprintinstance: "authentik_blueprints.blueprintinstance";
    readonly BrandsBrand: "authentik_brands.brand";
    readonly CoreApplication: "authentik_core.application";
    readonly CoreGroup: "authentik_core.group";
    readonly CoreToken: "authentik_core.token";
    readonly CoreUser: "authentik_core.user";
    readonly CryptoCertificatekeypair: "authentik_crypto.certificatekeypair";
    readonly EnterpriseLicense: "authentik_enterprise.license";
    readonly EventsEvent: "authentik_events.event";
    readonly EventsNotification: "authentik_events.notification";
    readonly EventsNotificationrule: "authentik_events.notificationrule";
    readonly EventsNotificationtransport: "authentik_events.notificationtransport";
    readonly EventsNotificationwebhookmapping: "authentik_events.notificationwebhookmapping";
    readonly FlowsFlow: "authentik_flows.flow";
    readonly FlowsFlowstagebinding: "authentik_flows.flowstagebinding";
    readonly OutpostsDockerserviceconnection: "authentik_outposts.dockerserviceconnection";
    readonly OutpostsKubernetesserviceconnection: "authentik_outposts.kubernetesserviceconnection";
    readonly OutpostsOutpost: "authentik_outposts.outpost";
    readonly PoliciesPolicybinding: "authentik_policies.policybinding";
    readonly PoliciesDummyDummypolicy: "authentik_policies_dummy.dummypolicy";
    readonly PoliciesEventMatcherEventmatcherpolicy: "authentik_policies_event_matcher.eventmatcherpolicy";
    readonly PoliciesExpiryPasswordexpirypolicy: "authentik_policies_expiry.passwordexpirypolicy";
    readonly PoliciesExpressionExpressionpolicy: "authentik_policies_expression.expressionpolicy";
    readonly PoliciesPasswordPasswordpolicy: "authentik_policies_password.passwordpolicy";
    readonly PoliciesReputationReputationpolicy: "authentik_policies_reputation.reputationpolicy";
    readonly ProvidersLdapLdapprovider: "authentik_providers_ldap.ldapprovider";
    readonly ProvidersOauth2Oauth2provider: "authentik_providers_oauth2.oauth2provider";
    readonly ProvidersOauth2Scopemapping: "authentik_providers_oauth2.scopemapping";
    readonly ProvidersProxyProxyprovider: "authentik_providers_proxy.proxyprovider";
    readonly ProvidersRacEndpoint: "authentik_providers_rac.endpoint";
    readonly ProvidersRacRacpropertymapping: "authentik_providers_rac.racpropertymapping";
    readonly ProvidersRacRacprovider: "authentik_providers_rac.racprovider";
    readonly ProvidersRadiusRadiusprovider: "authentik_providers_radius.radiusprovider";
    readonly ProvidersSamlSamlpropertymapping: "authentik_providers_saml.samlpropertymapping";
    readonly ProvidersSamlSamlprovider: "authentik_providers_saml.samlprovider";
    readonly ProvidersScimScimmapping: "authentik_providers_scim.scimmapping";
    readonly ProvidersScimScimprovider: "authentik_providers_scim.scimprovider";
    readonly RbacRole: "authentik_rbac.role";
    readonly SourcesLdapLdappropertymapping: "authentik_sources_ldap.ldappropertymapping";
    readonly SourcesLdapLdapsource: "authentik_sources_ldap.ldapsource";
    readonly SourcesOauthOauthsource: "authentik_sources_oauth.oauthsource";
    readonly SourcesOauthUseroauthsourceconnection: "authentik_sources_oauth.useroauthsourceconnection";
    readonly SourcesPlexPlexsource: "authentik_sources_plex.plexsource";
    readonly SourcesPlexPlexsourceconnection: "authentik_sources_plex.plexsourceconnection";
    readonly SourcesSamlSamlsource: "authentik_sources_saml.samlsource";
    readonly SourcesSamlUsersamlsourceconnection: "authentik_sources_saml.usersamlsourceconnection";
    readonly StagesAuthenticatorDuoAuthenticatorduostage: "authentik_stages_authenticator_duo.authenticatorduostage";
    readonly StagesAuthenticatorDuoDuodevice: "authentik_stages_authenticator_duo.duodevice";
    readonly StagesAuthenticatorSmsAuthenticatorsmsstage: "authentik_stages_authenticator_sms.authenticatorsmsstage";
    readonly StagesAuthenticatorSmsSmsdevice: "authentik_stages_authenticator_sms.smsdevice";
    readonly StagesAuthenticatorStaticAuthenticatorstaticstage: "authentik_stages_authenticator_static.authenticatorstaticstage";
    readonly StagesAuthenticatorStaticStaticdevice: "authentik_stages_authenticator_static.staticdevice";
    readonly StagesAuthenticatorTotpAuthenticatortotpstage: "authentik_stages_authenticator_totp.authenticatortotpstage";
    readonly StagesAuthenticatorTotpTotpdevice: "authentik_stages_authenticator_totp.totpdevice";
    readonly StagesAuthenticatorValidateAuthenticatorvalidatestage: "authentik_stages_authenticator_validate.authenticatorvalidatestage";
    readonly StagesAuthenticatorWebauthnAuthenticatewebauthnstage: "authentik_stages_authenticator_webauthn.authenticatewebauthnstage";
    readonly StagesAuthenticatorWebauthnWebauthndevice: "authentik_stages_authenticator_webauthn.webauthndevice";
    readonly StagesCaptchaCaptchastage: "authentik_stages_captcha.captchastage";
    readonly StagesConsentConsentstage: "authentik_stages_consent.consentstage";
    readonly StagesConsentUserconsent: "authentik_stages_consent.userconsent";
    readonly StagesDenyDenystage: "authentik_stages_deny.denystage";
    readonly StagesDummyDummystage: "authentik_stages_dummy.dummystage";
    readonly StagesEmailEmailstage: "authentik_stages_email.emailstage";
    readonly StagesExtAuthExtauthstage: "authentik_stages_ext_auth.extauthstage";
    readonly StagesIdentificationIdentificationstage: "authentik_stages_identification.identificationstage";
    readonly StagesInvitationInvitation: "authentik_stages_invitation.invitation";
    readonly StagesInvitationInvitationstage: "authentik_stages_invitation.invitationstage";
    readonly StagesPasswordPasswordstage: "authentik_stages_password.passwordstage";
    readonly StagesPromptPrompt: "authentik_stages_prompt.prompt";
    readonly StagesPromptPromptstage: "authentik_stages_prompt.promptstage";
    readonly StagesUserDeleteUserdeletestage: "authentik_stages_user_delete.userdeletestage";
    readonly StagesUserLoginUserloginstage: "authentik_stages_user_login.userloginstage";
    readonly StagesUserLogoutUserlogoutstage: "authentik_stages_user_logout.userlogoutstage";
    readonly StagesUserWriteUserwritestage: "authentik_stages_user_write.userwritestage";
    readonly TenantsDomain: "authentik_tenants.domain";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type RbacPermissionsAssignedByUsersListModelEnum = typeof RbacPermissionsAssignedByUsersListModelEnum[keyof typeof RbacPermissionsAssignedByUsersListModelEnum];
