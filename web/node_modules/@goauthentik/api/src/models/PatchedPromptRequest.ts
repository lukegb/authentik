/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PromptTypeEnum } from './PromptTypeEnum';
import {
    PromptTypeEnumFromJSON,
    PromptTypeEnumFromJSONTyped,
    PromptTypeEnumToJSON,
} from './PromptTypeEnum';
import type { StageRequest } from './StageRequest';
import {
    StageRequestFromJSON,
    StageRequestFromJSONTyped,
    StageRequestToJSON,
} from './StageRequest';

/**
 * Prompt Serializer
 * @export
 * @interface PatchedPromptRequest
 */
export interface PatchedPromptRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedPromptRequest
     */
    name?: string;
    /**
     * Name of the form field, also used to store the value
     * @type {string}
     * @memberof PatchedPromptRequest
     */
    fieldKey?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedPromptRequest
     */
    label?: string;
    /**
     * 
     * @type {PromptTypeEnum}
     * @memberof PatchedPromptRequest
     */
    type?: PromptTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedPromptRequest
     */
    required?: boolean;
    /**
     * Optionally provide a short hint that describes the expected input value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple choices.
     * @type {string}
     * @memberof PatchedPromptRequest
     */
    placeholder?: string;
    /**
     * Optionally pre-fill the input with an initial value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple default choices.
     * @type {string}
     * @memberof PatchedPromptRequest
     */
    initialValue?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedPromptRequest
     */
    order?: number;
    /**
     * 
     * @type {Array<StageRequest>}
     * @memberof PatchedPromptRequest
     */
    promptstageSet?: Array<StageRequest>;
    /**
     * 
     * @type {string}
     * @memberof PatchedPromptRequest
     */
    subText?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedPromptRequest
     */
    placeholderExpression?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedPromptRequest
     */
    initialValueExpression?: boolean;
}

/**
 * Check if a given object implements the PatchedPromptRequest interface.
 */
export function instanceOfPatchedPromptRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedPromptRequestFromJSON(json: any): PatchedPromptRequest {
    return PatchedPromptRequestFromJSONTyped(json, false);
}

export function PatchedPromptRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedPromptRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'fieldKey': !exists(json, 'field_key') ? undefined : json['field_key'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'type': !exists(json, 'type') ? undefined : PromptTypeEnumFromJSON(json['type']),
        'required': !exists(json, 'required') ? undefined : json['required'],
        'placeholder': !exists(json, 'placeholder') ? undefined : json['placeholder'],
        'initialValue': !exists(json, 'initial_value') ? undefined : json['initial_value'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'promptstageSet': !exists(json, 'promptstage_set') ? undefined : ((json['promptstage_set'] as Array<any>).map(StageRequestFromJSON)),
        'subText': !exists(json, 'sub_text') ? undefined : json['sub_text'],
        'placeholderExpression': !exists(json, 'placeholder_expression') ? undefined : json['placeholder_expression'],
        'initialValueExpression': !exists(json, 'initial_value_expression') ? undefined : json['initial_value_expression'],
    };
}

export function PatchedPromptRequestToJSON(value?: PatchedPromptRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'field_key': value.fieldKey,
        'label': value.label,
        'type': PromptTypeEnumToJSON(value.type),
        'required': value.required,
        'placeholder': value.placeholder,
        'initial_value': value.initialValue,
        'order': value.order,
        'promptstage_set': value.promptstageSet === undefined ? undefined : ((value.promptstageSet as Array<any>).map(StageRequestToJSON)),
        'sub_text': value.subText,
        'placeholder_expression': value.placeholderExpression,
        'initial_value_expression': value.initialValueExpression,
    };
}

