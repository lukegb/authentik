/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { UserGroup } from './UserGroup';
import type { UserTypeEnum } from './UserTypeEnum';
/**
 * User Serializer
 * @export
 * @interface User
 */
export interface User {
    /**
     *
     * @type {number}
     * @memberof User
     */
    readonly pk: number;
    /**
     *
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * User's display name.
     * @type {string}
     * @memberof User
     */
    name: string;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     * @type {boolean}
     * @memberof User
     */
    isActive?: boolean;
    /**
     *
     * @type {Date}
     * @memberof User
     */
    lastLogin?: Date | null;
    /**
     *
     * @type {boolean}
     * @memberof User
     */
    readonly isSuperuser: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof User
     */
    groups?: Array<string>;
    /**
     *
     * @type {Array<UserGroup>}
     * @memberof User
     */
    readonly groupsObj: Array<UserGroup>;
    /**
     *
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * User's avatar, either a http/https URL or a data URI
     * @type {string}
     * @memberof User
     */
    readonly avatar: string;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof User
     */
    attributes?: {
        [key: string]: any;
    };
    /**
     *
     * @type {string}
     * @memberof User
     */
    readonly uid: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    path?: string;
    /**
     *
     * @type {UserTypeEnum}
     * @memberof User
     */
    type?: UserTypeEnum;
    /**
     *
     * @type {string}
     * @memberof User
     */
    readonly uuid: string;
}
/**
 * Check if a given object implements the User interface.
 */
export declare function instanceOfUser(value: object): boolean;
export declare function UserFromJSON(json: any): User;
export declare function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User;
export declare function UserToJSON(value?: User | null): any;
