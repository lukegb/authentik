/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SCIMMapping Serializer
 * @export
 * @interface SCIMMappingRequest
 */
export interface SCIMMappingRequest {
    /**
     * Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
     * @type {string}
     * @memberof SCIMMappingRequest
     */
    managed?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SCIMMappingRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SCIMMappingRequest
     */
    expression: string;
}

/**
 * Check if a given object implements the SCIMMappingRequest interface.
 */
export function instanceOfSCIMMappingRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "expression" in value;

    return isInstance;
}

export function SCIMMappingRequestFromJSON(json: any): SCIMMappingRequest {
    return SCIMMappingRequestFromJSONTyped(json, false);
}

export function SCIMMappingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SCIMMappingRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'managed': !exists(json, 'managed') ? undefined : json['managed'],
        'name': json['name'],
        'expression': json['expression'],
    };
}

export function SCIMMappingRequestToJSON(value?: SCIMMappingRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'managed': value.managed,
        'name': value.name,
        'expression': value.expression,
    };
}

