"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticatedSessionUserAgentToJSON = exports.AuthenticatedSessionUserAgentFromJSONTyped = exports.AuthenticatedSessionUserAgentFromJSON = exports.instanceOfAuthenticatedSessionUserAgent = void 0;
const AuthenticatedSessionUserAgentDevice_1 = require("./AuthenticatedSessionUserAgentDevice");
const AuthenticatedSessionUserAgentOs_1 = require("./AuthenticatedSessionUserAgentOs");
const AuthenticatedSessionUserAgentUserAgent_1 = require("./AuthenticatedSessionUserAgentUserAgent");
/**
 * Check if a given object implements the AuthenticatedSessionUserAgent interface.
 */
function instanceOfAuthenticatedSessionUserAgent(value) {
    let isInstance = true;
    isInstance = isInstance && "device" in value;
    isInstance = isInstance && "os" in value;
    isInstance = isInstance && "userAgent" in value;
    isInstance = isInstance && "string" in value;
    return isInstance;
}
exports.instanceOfAuthenticatedSessionUserAgent = instanceOfAuthenticatedSessionUserAgent;
function AuthenticatedSessionUserAgentFromJSON(json) {
    return AuthenticatedSessionUserAgentFromJSONTyped(json, false);
}
exports.AuthenticatedSessionUserAgentFromJSON = AuthenticatedSessionUserAgentFromJSON;
function AuthenticatedSessionUserAgentFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'device': (0, AuthenticatedSessionUserAgentDevice_1.AuthenticatedSessionUserAgentDeviceFromJSON)(json['device']),
        'os': (0, AuthenticatedSessionUserAgentOs_1.AuthenticatedSessionUserAgentOsFromJSON)(json['os']),
        'userAgent': (0, AuthenticatedSessionUserAgentUserAgent_1.AuthenticatedSessionUserAgentUserAgentFromJSON)(json['user_agent']),
        'string': json['string'],
    };
}
exports.AuthenticatedSessionUserAgentFromJSONTyped = AuthenticatedSessionUserAgentFromJSONTyped;
function AuthenticatedSessionUserAgentToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'device': (0, AuthenticatedSessionUserAgentDevice_1.AuthenticatedSessionUserAgentDeviceToJSON)(value.device),
        'os': (0, AuthenticatedSessionUserAgentOs_1.AuthenticatedSessionUserAgentOsToJSON)(value.os),
        'user_agent': (0, AuthenticatedSessionUserAgentUserAgent_1.AuthenticatedSessionUserAgentUserAgentToJSON)(value.userAgent),
        'string': value.string,
    };
}
exports.AuthenticatedSessionUserAgentToJSON = AuthenticatedSessionUserAgentToJSON;
