/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AppleChallengeResponseRequestFromJSONTyped, AppleChallengeResponseRequestToJSON, } from './AppleChallengeResponseRequest';
import { AuthenticatorDuoChallengeResponseRequestFromJSONTyped, AuthenticatorDuoChallengeResponseRequestToJSON, } from './AuthenticatorDuoChallengeResponseRequest';
import { AuthenticatorSMSChallengeResponseRequestFromJSONTyped, AuthenticatorSMSChallengeResponseRequestToJSON, } from './AuthenticatorSMSChallengeResponseRequest';
import { AuthenticatorStaticChallengeResponseRequestFromJSONTyped, AuthenticatorStaticChallengeResponseRequestToJSON, } from './AuthenticatorStaticChallengeResponseRequest';
import { AuthenticatorTOTPChallengeResponseRequestFromJSONTyped, AuthenticatorTOTPChallengeResponseRequestToJSON, } from './AuthenticatorTOTPChallengeResponseRequest';
import { AuthenticatorValidationChallengeResponseRequestFromJSONTyped, AuthenticatorValidationChallengeResponseRequestToJSON, } from './AuthenticatorValidationChallengeResponseRequest';
import { AuthenticatorWebAuthnChallengeResponseRequestFromJSONTyped, AuthenticatorWebAuthnChallengeResponseRequestToJSON, } from './AuthenticatorWebAuthnChallengeResponseRequest';
import { AutoSubmitChallengeResponseRequestFromJSONTyped, AutoSubmitChallengeResponseRequestToJSON, } from './AutoSubmitChallengeResponseRequest';
import { CaptchaChallengeResponseRequestFromJSONTyped, CaptchaChallengeResponseRequestToJSON, } from './CaptchaChallengeResponseRequest';
import { ConsentChallengeResponseRequestFromJSONTyped, ConsentChallengeResponseRequestToJSON, } from './ConsentChallengeResponseRequest';
import { DummyChallengeResponseRequestFromJSONTyped, DummyChallengeResponseRequestToJSON, } from './DummyChallengeResponseRequest';
import { EmailChallengeResponseRequestFromJSONTyped, EmailChallengeResponseRequestToJSON, } from './EmailChallengeResponseRequest';
import { IdentificationChallengeResponseRequestFromJSONTyped, IdentificationChallengeResponseRequestToJSON, } from './IdentificationChallengeResponseRequest';
import { OAuthDeviceCodeChallengeResponseRequestFromJSONTyped, OAuthDeviceCodeChallengeResponseRequestToJSON, } from './OAuthDeviceCodeChallengeResponseRequest';
import { OAuthDeviceCodeFinishChallengeResponseRequestFromJSONTyped, OAuthDeviceCodeFinishChallengeResponseRequestToJSON, } from './OAuthDeviceCodeFinishChallengeResponseRequest';
import { PasswordChallengeResponseRequestFromJSONTyped, PasswordChallengeResponseRequestToJSON, } from './PasswordChallengeResponseRequest';
import { PlexAuthenticationChallengeResponseRequestFromJSONTyped, PlexAuthenticationChallengeResponseRequestToJSON, } from './PlexAuthenticationChallengeResponseRequest';
import { PromptChallengeResponseRequestFromJSONTyped, PromptChallengeResponseRequestToJSON, } from './PromptChallengeResponseRequest';
import { UserLoginChallengeResponseRequestFromJSONTyped, UserLoginChallengeResponseRequestToJSON, } from './UserLoginChallengeResponseRequest';
export function FlowChallengeResponseRequestFromJSON(json) {
    return FlowChallengeResponseRequestFromJSONTyped(json, false);
}
export function FlowChallengeResponseRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['component']) {
        case 'ak-provider-oauth2-device-code':
            return Object.assign(Object.assign({}, OAuthDeviceCodeChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-provider-oauth2-device-code' });
        case 'ak-provider-oauth2-device-code-finish':
            return Object.assign(Object.assign({}, OAuthDeviceCodeFinishChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-provider-oauth2-device-code-finish' });
        case 'ak-source-oauth-apple':
            return Object.assign(Object.assign({}, AppleChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-source-oauth-apple' });
        case 'ak-source-plex':
            return Object.assign(Object.assign({}, PlexAuthenticationChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-source-plex' });
        case 'ak-stage-authenticator-duo':
            return Object.assign(Object.assign({}, AuthenticatorDuoChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-authenticator-duo' });
        case 'ak-stage-authenticator-sms':
            return Object.assign(Object.assign({}, AuthenticatorSMSChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-authenticator-sms' });
        case 'ak-stage-authenticator-static':
            return Object.assign(Object.assign({}, AuthenticatorStaticChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-authenticator-static' });
        case 'ak-stage-authenticator-totp':
            return Object.assign(Object.assign({}, AuthenticatorTOTPChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-authenticator-totp' });
        case 'ak-stage-authenticator-validate':
            return Object.assign(Object.assign({}, AuthenticatorValidationChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-authenticator-validate' });
        case 'ak-stage-authenticator-webauthn':
            return Object.assign(Object.assign({}, AuthenticatorWebAuthnChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-authenticator-webauthn' });
        case 'ak-stage-autosubmit':
            return Object.assign(Object.assign({}, AutoSubmitChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-autosubmit' });
        case 'ak-stage-captcha':
            return Object.assign(Object.assign({}, CaptchaChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-captcha' });
        case 'ak-stage-consent':
            return Object.assign(Object.assign({}, ConsentChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-consent' });
        case 'ak-stage-dummy':
            return Object.assign(Object.assign({}, DummyChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-dummy' });
        case 'ak-stage-email':
            return Object.assign(Object.assign({}, EmailChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-email' });
        case 'ak-stage-identification':
            return Object.assign(Object.assign({}, IdentificationChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-identification' });
        case 'ak-stage-password':
            return Object.assign(Object.assign({}, PasswordChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-password' });
        case 'ak-stage-prompt':
            return Object.assign(Object.assign({}, PromptChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-prompt' });
        case 'ak-stage-user-login':
            return Object.assign(Object.assign({}, UserLoginChallengeResponseRequestFromJSONTyped(json, true)), { component: 'ak-stage-user-login' });
        default:
            throw new Error(`No variant of FlowChallengeResponseRequest exists with 'component=${json['component']}'`);
    }
}
export function FlowChallengeResponseRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['component']) {
        case 'ak-provider-oauth2-device-code':
            return OAuthDeviceCodeChallengeResponseRequestToJSON(value);
        case 'ak-provider-oauth2-device-code-finish':
            return OAuthDeviceCodeFinishChallengeResponseRequestToJSON(value);
        case 'ak-source-oauth-apple':
            return AppleChallengeResponseRequestToJSON(value);
        case 'ak-source-plex':
            return PlexAuthenticationChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-duo':
            return AuthenticatorDuoChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-sms':
            return AuthenticatorSMSChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-static':
            return AuthenticatorStaticChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-totp':
            return AuthenticatorTOTPChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-validate':
            return AuthenticatorValidationChallengeResponseRequestToJSON(value);
        case 'ak-stage-authenticator-webauthn':
            return AuthenticatorWebAuthnChallengeResponseRequestToJSON(value);
        case 'ak-stage-autosubmit':
            return AutoSubmitChallengeResponseRequestToJSON(value);
        case 'ak-stage-captcha':
            return CaptchaChallengeResponseRequestToJSON(value);
        case 'ak-stage-consent':
            return ConsentChallengeResponseRequestToJSON(value);
        case 'ak-stage-dummy':
            return DummyChallengeResponseRequestToJSON(value);
        case 'ak-stage-email':
            return EmailChallengeResponseRequestToJSON(value);
        case 'ak-stage-identification':
            return IdentificationChallengeResponseRequestToJSON(value);
        case 'ak-stage-password':
            return PasswordChallengeResponseRequestToJSON(value);
        case 'ak-stage-prompt':
            return PromptChallengeResponseRequestToJSON(value);
        case 'ak-stage-user-login':
            return UserLoginChallengeResponseRequestToJSON(value);
        default:
            throw new Error(`No variant of FlowChallengeResponseRequest exists with 'component=${value['component']}'`);
    }
}
