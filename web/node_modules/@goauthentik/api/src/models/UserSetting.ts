/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Serializer for User settings for stages and sources
 * @export
 * @interface UserSetting
 */
export interface UserSetting {
    /**
     * 
     * @type {string}
     * @memberof UserSetting
     */
    objectUid: string;
    /**
     * 
     * @type {string}
     * @memberof UserSetting
     */
    component: string;
    /**
     * 
     * @type {string}
     * @memberof UserSetting
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof UserSetting
     */
    configureUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UserSetting
     */
    iconUrl?: string;
}

/**
 * Check if a given object implements the UserSetting interface.
 */
export function instanceOfUserSetting(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "objectUid" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "title" in value;

    return isInstance;
}

export function UserSettingFromJSON(json: any): UserSetting {
    return UserSettingFromJSONTyped(json, false);
}

export function UserSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSetting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'objectUid': json['object_uid'],
        'component': json['component'],
        'title': json['title'],
        'configureUrl': !exists(json, 'configure_url') ? undefined : json['configure_url'],
        'iconUrl': !exists(json, 'icon_url') ? undefined : json['icon_url'],
    };
}

export function UserSettingToJSON(value?: UserSetting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'object_uid': value.objectUid,
        'component': value.component,
        'title': value.title,
        'configure_url': value.configureUrl,
        'icon_url': value.iconUrl,
    };
}

