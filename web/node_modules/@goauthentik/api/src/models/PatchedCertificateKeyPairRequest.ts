/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * CertificateKeyPair Serializer
 * @export
 * @interface PatchedCertificateKeyPairRequest
 */
export interface PatchedCertificateKeyPairRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedCertificateKeyPairRequest
     */
    name?: string;
    /**
     * PEM-encoded Certificate data
     * @type {string}
     * @memberof PatchedCertificateKeyPairRequest
     */
    certificateData?: string;
    /**
     * Optional Private Key. If this is set, you can use this keypair for encryption.
     * @type {string}
     * @memberof PatchedCertificateKeyPairRequest
     */
    keyData?: string;
}

/**
 * Check if a given object implements the PatchedCertificateKeyPairRequest interface.
 */
export function instanceOfPatchedCertificateKeyPairRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedCertificateKeyPairRequestFromJSON(json: any): PatchedCertificateKeyPairRequest {
    return PatchedCertificateKeyPairRequestFromJSONTyped(json, false);
}

export function PatchedCertificateKeyPairRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedCertificateKeyPairRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'certificateData': !exists(json, 'certificate_data') ? undefined : json['certificate_data'],
        'keyData': !exists(json, 'key_data') ? undefined : json['key_data'],
    };
}

export function PatchedCertificateKeyPairRequestToJSON(value?: PatchedCertificateKeyPairRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'certificate_data': value.certificateData,
        'key_data': value.keyData,
    };
}

