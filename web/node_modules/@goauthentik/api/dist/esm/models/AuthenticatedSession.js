/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AuthenticatedSessionAsnFromJSON, AuthenticatedSessionAsnToJSON, } from './AuthenticatedSessionAsn';
import { AuthenticatedSessionGeoIpFromJSON, AuthenticatedSessionGeoIpToJSON, } from './AuthenticatedSessionGeoIp';
import { AuthenticatedSessionUserAgentFromJSON, AuthenticatedSessionUserAgentToJSON, } from './AuthenticatedSessionUserAgent';
/**
 * Check if a given object implements the AuthenticatedSession interface.
 */
export function instanceOfAuthenticatedSession(value) {
    let isInstance = true;
    isInstance = isInstance && "current" in value;
    isInstance = isInstance && "userAgent" in value;
    isInstance = isInstance && "geoIp" in value;
    isInstance = isInstance && "asn" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "lastIp" in value;
    isInstance = isInstance && "lastUsed" in value;
    return isInstance;
}
export function AuthenticatedSessionFromJSON(json) {
    return AuthenticatedSessionFromJSONTyped(json, false);
}
export function AuthenticatedSessionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'current': json['current'],
        'userAgent': AuthenticatedSessionUserAgentFromJSON(json['user_agent']),
        'geoIp': AuthenticatedSessionGeoIpFromJSON(json['geo_ip']),
        'asn': AuthenticatedSessionAsnFromJSON(json['asn']),
        'user': json['user'],
        'lastIp': json['last_ip'],
        'lastUserAgent': !exists(json, 'last_user_agent') ? undefined : json['last_user_agent'],
        'lastUsed': (new Date(json['last_used'])),
        'expires': !exists(json, 'expires') ? undefined : (new Date(json['expires'])),
    };
}
export function AuthenticatedSessionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'uuid': value.uuid,
        'user_agent': AuthenticatedSessionUserAgentToJSON(value.userAgent),
        'geo_ip': AuthenticatedSessionGeoIpToJSON(value.geoIp),
        'asn': AuthenticatedSessionAsnToJSON(value.asn),
        'user': value.user,
        'last_ip': value.lastIp,
        'last_user_agent': value.lastUserAgent,
        'expires': value.expires === undefined ? undefined : (value.expires.toISOString()),
    };
}
