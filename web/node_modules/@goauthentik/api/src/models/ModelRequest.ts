/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    LDAPProviderRequest,
    instanceOfLDAPProviderRequest,
    LDAPProviderRequestFromJSON,
    LDAPProviderRequestFromJSONTyped,
    LDAPProviderRequestToJSON,
} from './LDAPProviderRequest';
import {
    OAuth2ProviderRequest,
    instanceOfOAuth2ProviderRequest,
    OAuth2ProviderRequestFromJSON,
    OAuth2ProviderRequestFromJSONTyped,
    OAuth2ProviderRequestToJSON,
} from './OAuth2ProviderRequest';
import {
    ProxyProviderRequest,
    instanceOfProxyProviderRequest,
    ProxyProviderRequestFromJSON,
    ProxyProviderRequestFromJSONTyped,
    ProxyProviderRequestToJSON,
} from './ProxyProviderRequest';
import {
    RACProviderRequest,
    instanceOfRACProviderRequest,
    RACProviderRequestFromJSON,
    RACProviderRequestFromJSONTyped,
    RACProviderRequestToJSON,
} from './RACProviderRequest';
import {
    RadiusProviderRequest,
    instanceOfRadiusProviderRequest,
    RadiusProviderRequestFromJSON,
    RadiusProviderRequestFromJSONTyped,
    RadiusProviderRequestToJSON,
} from './RadiusProviderRequest';
import {
    SAMLProviderRequest,
    instanceOfSAMLProviderRequest,
    SAMLProviderRequestFromJSON,
    SAMLProviderRequestFromJSONTyped,
    SAMLProviderRequestToJSON,
} from './SAMLProviderRequest';
import {
    SCIMProviderRequest,
    instanceOfSCIMProviderRequest,
    SCIMProviderRequestFromJSON,
    SCIMProviderRequestFromJSONTyped,
    SCIMProviderRequestToJSON,
} from './SCIMProviderRequest';

/**
 * @type ModelRequest
 * 
 * @export
 */
export type ModelRequest = { providerModel: 'authentik_providers_ldap.ldapprovider' } & LDAPProviderRequest | { providerModel: 'authentik_providers_oauth2.oauth2provider' } & OAuth2ProviderRequest | { providerModel: 'authentik_providers_proxy.proxyprovider' } & ProxyProviderRequest | { providerModel: 'authentik_providers_rac.racprovider' } & RACProviderRequest | { providerModel: 'authentik_providers_radius.radiusprovider' } & RadiusProviderRequest | { providerModel: 'authentik_providers_saml.samlprovider' } & SAMLProviderRequest | { providerModel: 'authentik_providers_scim.scimprovider' } & SCIMProviderRequest;

export function ModelRequestFromJSON(json: any): ModelRequest {
    return ModelRequestFromJSONTyped(json, false);
}

export function ModelRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['providerModel']) {
        case 'authentik_providers_ldap.ldapprovider':
            return {...LDAPProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_ldap.ldapprovider'};
        case 'authentik_providers_oauth2.oauth2provider':
            return {...OAuth2ProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_oauth2.oauth2provider'};
        case 'authentik_providers_proxy.proxyprovider':
            return {...ProxyProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_proxy.proxyprovider'};
        case 'authentik_providers_rac.racprovider':
            return {...RACProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_rac.racprovider'};
        case 'authentik_providers_radius.radiusprovider':
            return {...RadiusProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_radius.radiusprovider'};
        case 'authentik_providers_saml.samlprovider':
            return {...SAMLProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_saml.samlprovider'};
        case 'authentik_providers_scim.scimprovider':
            return {...SCIMProviderRequestFromJSONTyped(json, true), providerModel: 'authentik_providers_scim.scimprovider'};
        default:
            throw new Error(`No variant of ModelRequest exists with 'providerModel=${json['providerModel']}'`);
    }
}

export function ModelRequestToJSON(value?: ModelRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['providerModel']) {
        case 'authentik_providers_ldap.ldapprovider':
            return LDAPProviderRequestToJSON(value);
        case 'authentik_providers_oauth2.oauth2provider':
            return OAuth2ProviderRequestToJSON(value);
        case 'authentik_providers_proxy.proxyprovider':
            return ProxyProviderRequestToJSON(value);
        case 'authentik_providers_rac.racprovider':
            return RACProviderRequestToJSON(value);
        case 'authentik_providers_radius.radiusprovider':
            return RadiusProviderRequestToJSON(value);
        case 'authentik_providers_saml.samlprovider':
            return SAMLProviderRequestToJSON(value);
        case 'authentik_providers_scim.scimprovider':
            return SCIMProviderRequestToJSON(value);
        default:
            throw new Error(`No variant of ModelRequest exists with 'providerModel=${value['providerModel']}'`);
    }

}

