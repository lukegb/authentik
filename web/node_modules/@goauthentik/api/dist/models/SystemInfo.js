"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemInfoToJSON = exports.SystemInfoFromJSONTyped = exports.SystemInfoFromJSON = exports.instanceOfSystemInfo = void 0;
const SystemInfoRuntime_1 = require("./SystemInfoRuntime");
/**
 * Check if a given object implements the SystemInfo interface.
 */
function instanceOfSystemInfo(value) {
    let isInstance = true;
    isInstance = isInstance && "httpHeaders" in value;
    isInstance = isInstance && "httpHost" in value;
    isInstance = isInstance && "httpIsSecure" in value;
    isInstance = isInstance && "runtime" in value;
    isInstance = isInstance && "brand" in value;
    isInstance = isInstance && "serverTime" in value;
    isInstance = isInstance && "embeddedOutpostDisabled" in value;
    isInstance = isInstance && "embeddedOutpostHost" in value;
    return isInstance;
}
exports.instanceOfSystemInfo = instanceOfSystemInfo;
function SystemInfoFromJSON(json) {
    return SystemInfoFromJSONTyped(json, false);
}
exports.SystemInfoFromJSON = SystemInfoFromJSON;
function SystemInfoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'httpHeaders': json['http_headers'],
        'httpHost': json['http_host'],
        'httpIsSecure': json['http_is_secure'],
        'runtime': (0, SystemInfoRuntime_1.SystemInfoRuntimeFromJSON)(json['runtime']),
        'brand': json['brand'],
        'serverTime': (new Date(json['server_time'])),
        'embeddedOutpostDisabled': json['embedded_outpost_disabled'],
        'embeddedOutpostHost': json['embedded_outpost_host'],
    };
}
exports.SystemInfoFromJSONTyped = SystemInfoFromJSONTyped;
function SystemInfoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'runtime': (0, SystemInfoRuntime_1.SystemInfoRuntimeToJSON)(value.runtime),
    };
}
exports.SystemInfoToJSON = SystemInfoToJSON;
