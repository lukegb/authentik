"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaginatedSMSDeviceListToJSON = exports.PaginatedSMSDeviceListFromJSONTyped = exports.PaginatedSMSDeviceListFromJSON = exports.instanceOfPaginatedSMSDeviceList = void 0;
const Pagination_1 = require("./Pagination");
const SMSDevice_1 = require("./SMSDevice");
/**
 * Check if a given object implements the PaginatedSMSDeviceList interface.
 */
function instanceOfPaginatedSMSDeviceList(value) {
    let isInstance = true;
    isInstance = isInstance && "pagination" in value;
    isInstance = isInstance && "results" in value;
    return isInstance;
}
exports.instanceOfPaginatedSMSDeviceList = instanceOfPaginatedSMSDeviceList;
function PaginatedSMSDeviceListFromJSON(json) {
    return PaginatedSMSDeviceListFromJSONTyped(json, false);
}
exports.PaginatedSMSDeviceListFromJSON = PaginatedSMSDeviceListFromJSON;
function PaginatedSMSDeviceListFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pagination': (0, Pagination_1.PaginationFromJSON)(json['pagination']),
        'results': (json['results'].map(SMSDevice_1.SMSDeviceFromJSON)),
    };
}
exports.PaginatedSMSDeviceListFromJSONTyped = PaginatedSMSDeviceListFromJSONTyped;
function PaginatedSMSDeviceListToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'pagination': (0, Pagination_1.PaginationToJSON)(value.pagination),
        'results': (value.results.map(SMSDevice_1.SMSDeviceToJSON)),
    };
}
exports.PaginatedSMSDeviceListToJSON = PaginatedSMSDeviceListToJSON;
