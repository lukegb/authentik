/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { InstallID, License, LicenseForecast, LicenseRequest, LicenseSummary, PaginatedLicenseList, PatchedLicenseRequest, UsedBy } from '../models';
export interface EnterpriseLicenseCreateRequest {
    licenseRequest: LicenseRequest;
}
export interface EnterpriseLicenseDestroyRequest {
    licenseUuid: string;
}
export interface EnterpriseLicenseListRequest {
    name?: string;
    ordering?: string;
    page?: number;
    pageSize?: number;
    search?: string;
}
export interface EnterpriseLicensePartialUpdateRequest {
    licenseUuid: string;
    patchedLicenseRequest?: PatchedLicenseRequest;
}
export interface EnterpriseLicenseRetrieveRequest {
    licenseUuid: string;
}
export interface EnterpriseLicenseUpdateRequest {
    licenseUuid: string;
    licenseRequest: LicenseRequest;
}
export interface EnterpriseLicenseUsedByListRequest {
    licenseUuid: string;
}
/**
 *
 */
export declare class EnterpriseApi extends runtime.BaseAPI {
    /**
     * License Viewset
     */
    enterpriseLicenseCreateRaw(requestParameters: EnterpriseLicenseCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<License>>;
    /**
     * License Viewset
     */
    enterpriseLicenseCreate(requestParameters: EnterpriseLicenseCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<License>;
    /**
     * License Viewset
     */
    enterpriseLicenseDestroyRaw(requestParameters: EnterpriseLicenseDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * License Viewset
     */
    enterpriseLicenseDestroy(requestParameters: EnterpriseLicenseDestroyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Forecast how many users will be required in a year
     */
    enterpriseLicenseForecastRetrieveRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LicenseForecast>>;
    /**
     * Forecast how many users will be required in a year
     */
    enterpriseLicenseForecastRetrieve(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LicenseForecast>;
    /**
     * Get install_id
     */
    enterpriseLicenseGetInstallIdRetrieveRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InstallID>>;
    /**
     * Get install_id
     */
    enterpriseLicenseGetInstallIdRetrieve(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InstallID>;
    /**
     * License Viewset
     */
    enterpriseLicenseListRaw(requestParameters: EnterpriseLicenseListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginatedLicenseList>>;
    /**
     * License Viewset
     */
    enterpriseLicenseList(requestParameters?: EnterpriseLicenseListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginatedLicenseList>;
    /**
     * License Viewset
     */
    enterpriseLicensePartialUpdateRaw(requestParameters: EnterpriseLicensePartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<License>>;
    /**
     * License Viewset
     */
    enterpriseLicensePartialUpdate(requestParameters: EnterpriseLicensePartialUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<License>;
    /**
     * License Viewset
     */
    enterpriseLicenseRetrieveRaw(requestParameters: EnterpriseLicenseRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<License>>;
    /**
     * License Viewset
     */
    enterpriseLicenseRetrieve(requestParameters: EnterpriseLicenseRetrieveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<License>;
    /**
     * Get the total license status
     */
    enterpriseLicenseSummaryRetrieveRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LicenseSummary>>;
    /**
     * Get the total license status
     */
    enterpriseLicenseSummaryRetrieve(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LicenseSummary>;
    /**
     * License Viewset
     */
    enterpriseLicenseUpdateRaw(requestParameters: EnterpriseLicenseUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<License>>;
    /**
     * License Viewset
     */
    enterpriseLicenseUpdate(requestParameters: EnterpriseLicenseUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<License>;
    /**
     * Get a list of all objects that use this object
     */
    enterpriseLicenseUsedByListRaw(requestParameters: EnterpriseLicenseUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UsedBy>>>;
    /**
     * Get a list of all objects that use this object
     */
    enterpriseLicenseUsedByList(requestParameters: EnterpriseLicenseUsedByListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UsedBy>>;
}
