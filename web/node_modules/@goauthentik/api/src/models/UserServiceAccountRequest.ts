/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserServiceAccountRequest
 */
export interface UserServiceAccountRequest {
    /**
     * 
     * @type {string}
     * @memberof UserServiceAccountRequest
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserServiceAccountRequest
     */
    createGroup?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserServiceAccountRequest
     */
    expiring?: boolean;
    /**
     * If not provided, valid for 360 days
     * @type {Date}
     * @memberof UserServiceAccountRequest
     */
    expires?: Date;
}

/**
 * Check if a given object implements the UserServiceAccountRequest interface.
 */
export function instanceOfUserServiceAccountRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function UserServiceAccountRequestFromJSON(json: any): UserServiceAccountRequest {
    return UserServiceAccountRequestFromJSONTyped(json, false);
}

export function UserServiceAccountRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserServiceAccountRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'createGroup': !exists(json, 'create_group') ? undefined : json['create_group'],
        'expiring': !exists(json, 'expiring') ? undefined : json['expiring'],
        'expires': !exists(json, 'expires') ? undefined : (new Date(json['expires'])),
    };
}

export function UserServiceAccountRequestToJSON(value?: UserServiceAccountRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'create_group': value.createGroup,
        'expiring': value.expiring,
        'expires': value.expires === undefined ? undefined : (value.expires.toISOString()),
    };
}

