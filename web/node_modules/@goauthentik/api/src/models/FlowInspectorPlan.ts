/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FlowStageBinding } from './FlowStageBinding';
import {
    FlowStageBindingFromJSON,
    FlowStageBindingFromJSONTyped,
    FlowStageBindingToJSON,
} from './FlowStageBinding';

/**
 * Serializer for an active FlowPlan
 * @export
 * @interface FlowInspectorPlan
 */
export interface FlowInspectorPlan {
    /**
     * 
     * @type {FlowStageBinding}
     * @memberof FlowInspectorPlan
     */
    readonly currentStage: FlowStageBinding;
    /**
     * 
     * @type {FlowStageBinding}
     * @memberof FlowInspectorPlan
     */
    readonly nextPlannedStage: FlowStageBinding;
    /**
     * Get the plan's context, sanitized
     * @type {{ [key: string]: any; }}
     * @memberof FlowInspectorPlan
     */
    readonly planContext: { [key: string]: any; };
    /**
     * Get a unique session ID
     * @type {string}
     * @memberof FlowInspectorPlan
     */
    readonly sessionId: string;
}

/**
 * Check if a given object implements the FlowInspectorPlan interface.
 */
export function instanceOfFlowInspectorPlan(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "currentStage" in value;
    isInstance = isInstance && "nextPlannedStage" in value;
    isInstance = isInstance && "planContext" in value;
    isInstance = isInstance && "sessionId" in value;

    return isInstance;
}

export function FlowInspectorPlanFromJSON(json: any): FlowInspectorPlan {
    return FlowInspectorPlanFromJSONTyped(json, false);
}

export function FlowInspectorPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlowInspectorPlan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currentStage': FlowStageBindingFromJSON(json['current_stage']),
        'nextPlannedStage': FlowStageBindingFromJSON(json['next_planned_stage']),
        'planContext': json['plan_context'],
        'sessionId': json['session_id'],
    };
}

export function FlowInspectorPlanToJSON(value?: FlowInspectorPlan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

