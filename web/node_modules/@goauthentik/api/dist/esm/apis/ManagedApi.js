/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { BlueprintFileFromJSON, BlueprintInstanceFromJSON, BlueprintInstanceRequestToJSON, PaginatedBlueprintInstanceListFromJSON, PatchedBlueprintInstanceRequestToJSON, UsedByFromJSON, } from '../models';
/**
 *
 */
export class ManagedApi extends runtime.BaseAPI {
    /**
     * Apply a blueprint
     */
    managedBlueprintsApplyCreateRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.instanceUuid === null || requestParameters.instanceUuid === undefined) {
                throw new runtime.RequiredError('instanceUuid', 'Required parameter requestParameters.instanceUuid was null or undefined when calling managedBlueprintsApplyCreate.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/{instance_uuid}/apply/`.replace(`{${"instance_uuid"}}`, encodeURIComponent(String(requestParameters.instanceUuid))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => BlueprintInstanceFromJSON(jsonValue));
        });
    }
    /**
     * Apply a blueprint
     */
    managedBlueprintsApplyCreate(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsApplyCreateRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get blueprints
     */
    managedBlueprintsAvailableListRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/available/`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BlueprintFileFromJSON));
        });
    }
    /**
     * Get blueprints
     */
    managedBlueprintsAvailableList(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsAvailableListRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsCreateRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.blueprintInstanceRequest === null || requestParameters.blueprintInstanceRequest === undefined) {
                throw new runtime.RequiredError('blueprintInstanceRequest', 'Required parameter requestParameters.blueprintInstanceRequest was null or undefined when calling managedBlueprintsCreate.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: BlueprintInstanceRequestToJSON(requestParameters.blueprintInstanceRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => BlueprintInstanceFromJSON(jsonValue));
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsCreate(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsCreateRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsDestroyRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.instanceUuid === null || requestParameters.instanceUuid === undefined) {
                throw new runtime.RequiredError('instanceUuid', 'Required parameter requestParameters.instanceUuid was null or undefined when calling managedBlueprintsDestroy.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/{instance_uuid}/`.replace(`{${"instance_uuid"}}`, encodeURIComponent(String(requestParameters.instanceUuid))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsDestroy(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.managedBlueprintsDestroyRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsListRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters.name !== undefined) {
                queryParameters['name'] = requestParameters.name;
            }
            if (requestParameters.ordering !== undefined) {
                queryParameters['ordering'] = requestParameters.ordering;
            }
            if (requestParameters.page !== undefined) {
                queryParameters['page'] = requestParameters.page;
            }
            if (requestParameters.pageSize !== undefined) {
                queryParameters['page_size'] = requestParameters.pageSize;
            }
            if (requestParameters.path !== undefined) {
                queryParameters['path'] = requestParameters.path;
            }
            if (requestParameters.search !== undefined) {
                queryParameters['search'] = requestParameters.search;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => PaginatedBlueprintInstanceListFromJSON(jsonValue));
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsList(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsListRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsPartialUpdateRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.instanceUuid === null || requestParameters.instanceUuid === undefined) {
                throw new runtime.RequiredError('instanceUuid', 'Required parameter requestParameters.instanceUuid was null or undefined when calling managedBlueprintsPartialUpdate.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/{instance_uuid}/`.replace(`{${"instance_uuid"}}`, encodeURIComponent(String(requestParameters.instanceUuid))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: PatchedBlueprintInstanceRequestToJSON(requestParameters.patchedBlueprintInstanceRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => BlueprintInstanceFromJSON(jsonValue));
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsPartialUpdate(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsPartialUpdateRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsRetrieveRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.instanceUuid === null || requestParameters.instanceUuid === undefined) {
                throw new runtime.RequiredError('instanceUuid', 'Required parameter requestParameters.instanceUuid was null or undefined when calling managedBlueprintsRetrieve.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/{instance_uuid}/`.replace(`{${"instance_uuid"}}`, encodeURIComponent(String(requestParameters.instanceUuid))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => BlueprintInstanceFromJSON(jsonValue));
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsRetrieve(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsRetrieveRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsUpdateRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.instanceUuid === null || requestParameters.instanceUuid === undefined) {
                throw new runtime.RequiredError('instanceUuid', 'Required parameter requestParameters.instanceUuid was null or undefined when calling managedBlueprintsUpdate.');
            }
            if (requestParameters.blueprintInstanceRequest === null || requestParameters.blueprintInstanceRequest === undefined) {
                throw new runtime.RequiredError('blueprintInstanceRequest', 'Required parameter requestParameters.blueprintInstanceRequest was null or undefined when calling managedBlueprintsUpdate.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/{instance_uuid}/`.replace(`{${"instance_uuid"}}`, encodeURIComponent(String(requestParameters.instanceUuid))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: BlueprintInstanceRequestToJSON(requestParameters.blueprintInstanceRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => BlueprintInstanceFromJSON(jsonValue));
        });
    }
    /**
     * Blueprint instances
     */
    managedBlueprintsUpdate(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsUpdateRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get a list of all objects that use this object
     */
    managedBlueprintsUsedByListRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.instanceUuid === null || requestParameters.instanceUuid === undefined) {
                throw new runtime.RequiredError('instanceUuid', 'Required parameter requestParameters.instanceUuid was null or undefined when calling managedBlueprintsUsedByList.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // authentik authentication
            }
            const response = yield this.request({
                path: `/managed/blueprints/{instance_uuid}/used_by/`.replace(`{${"instance_uuid"}}`, encodeURIComponent(String(requestParameters.instanceUuid))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UsedByFromJSON));
        });
    }
    /**
     * Get a list of all objects that use this object
     */
    managedBlueprintsUsedByList(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.managedBlueprintsUsedByListRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
