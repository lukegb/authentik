"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticatorTOTPStageToJSON = exports.AuthenticatorTOTPStageFromJSONTyped = exports.AuthenticatorTOTPStageFromJSON = exports.instanceOfAuthenticatorTOTPStage = void 0;
const runtime_1 = require("../runtime");
const DigitsEnum_1 = require("./DigitsEnum");
const FlowSet_1 = require("./FlowSet");
/**
 * Check if a given object implements the AuthenticatorTOTPStage interface.
 */
function instanceOfAuthenticatorTOTPStage(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    isInstance = isInstance && "digits" in value;
    return isInstance;
}
exports.instanceOfAuthenticatorTOTPStage = instanceOfAuthenticatorTOTPStage;
function AuthenticatorTOTPStageFromJSON(json) {
    return AuthenticatorTOTPStageFromJSONTyped(json, false);
}
exports.AuthenticatorTOTPStageFromJSON = AuthenticatorTOTPStageFromJSON;
function AuthenticatorTOTPStageFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'component': json['component'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'flowSet': !(0, runtime_1.exists)(json, 'flow_set') ? undefined : (json['flow_set'].map(FlowSet_1.FlowSetFromJSON)),
        'configureFlow': !(0, runtime_1.exists)(json, 'configure_flow') ? undefined : json['configure_flow'],
        'friendlyName': !(0, runtime_1.exists)(json, 'friendly_name') ? undefined : json['friendly_name'],
        'digits': (0, DigitsEnum_1.DigitsEnumFromJSON)(json['digits']),
    };
}
exports.AuthenticatorTOTPStageFromJSONTyped = AuthenticatorTOTPStageFromJSONTyped;
function AuthenticatorTOTPStageToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : (value.flowSet.map(FlowSet_1.FlowSetToJSON)),
        'configure_flow': value.configureFlow,
        'friendly_name': value.friendlyName,
        'digits': (0, DigitsEnum_1.DigitsEnumToJSON)(value.digits),
    };
}
exports.AuthenticatorTOTPStageToJSON = AuthenticatorTOTPStageToJSON;
