"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertificateKeyPairRequestToJSON = exports.CertificateKeyPairRequestFromJSONTyped = exports.CertificateKeyPairRequestFromJSON = exports.instanceOfCertificateKeyPairRequest = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CertificateKeyPairRequest interface.
 */
function instanceOfCertificateKeyPairRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "certificateData" in value;
    return isInstance;
}
exports.instanceOfCertificateKeyPairRequest = instanceOfCertificateKeyPairRequest;
function CertificateKeyPairRequestFromJSON(json) {
    return CertificateKeyPairRequestFromJSONTyped(json, false);
}
exports.CertificateKeyPairRequestFromJSON = CertificateKeyPairRequestFromJSON;
function CertificateKeyPairRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'certificateData': json['certificate_data'],
        'keyData': !(0, runtime_1.exists)(json, 'key_data') ? undefined : json['key_data'],
    };
}
exports.CertificateKeyPairRequestFromJSONTyped = CertificateKeyPairRequestFromJSONTyped;
function CertificateKeyPairRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'certificate_data': value.certificateData,
        'key_data': value.keyData,
    };
}
exports.CertificateKeyPairRequestToJSON = CertificateKeyPairRequestToJSON;
