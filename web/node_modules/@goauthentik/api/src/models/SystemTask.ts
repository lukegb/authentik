/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SystemTaskStatusEnum } from './SystemTaskStatusEnum';
import {
    SystemTaskStatusEnumFromJSON,
    SystemTaskStatusEnumFromJSONTyped,
    SystemTaskStatusEnumToJSON,
} from './SystemTaskStatusEnum';

/**
 * Serialize TaskInfo and TaskResult
 * @export
 * @interface SystemTask
 */
export interface SystemTask {
    /**
     * 
     * @type {string}
     * @memberof SystemTask
     */
    readonly uuid: string;
    /**
     * 
     * @type {string}
     * @memberof SystemTask
     */
    name: string;
    /**
     * Get full name with UID
     * @type {string}
     * @memberof SystemTask
     */
    readonly fullName: string;
    /**
     * 
     * @type {string}
     * @memberof SystemTask
     */
    uid?: string;
    /**
     * 
     * @type {string}
     * @memberof SystemTask
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof SystemTask
     */
    readonly startTimestamp: Date;
    /**
     * 
     * @type {Date}
     * @memberof SystemTask
     */
    readonly finishTimestamp: Date;
    /**
     * 
     * @type {number}
     * @memberof SystemTask
     */
    readonly duration: number;
    /**
     * 
     * @type {SystemTaskStatusEnum}
     * @memberof SystemTask
     */
    status: SystemTaskStatusEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof SystemTask
     */
    messages: Array<string>;
}

/**
 * Check if a given object implements the SystemTask interface.
 */
export function instanceOfSystemTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "fullName" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "startTimestamp" in value;
    isInstance = isInstance && "finishTimestamp" in value;
    isInstance = isInstance && "duration" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "messages" in value;

    return isInstance;
}

export function SystemTaskFromJSON(json: any): SystemTask {
    return SystemTaskFromJSONTyped(json, false);
}

export function SystemTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'name': json['name'],
        'fullName': json['full_name'],
        'uid': !exists(json, 'uid') ? undefined : json['uid'],
        'description': json['description'],
        'startTimestamp': (new Date(json['start_timestamp'])),
        'finishTimestamp': (new Date(json['finish_timestamp'])),
        'duration': json['duration'],
        'status': SystemTaskStatusEnumFromJSON(json['status']),
        'messages': json['messages'],
    };
}

export function SystemTaskToJSON(value?: SystemTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'uid': value.uid,
        'description': value.description,
        'status': SystemTaskStatusEnumToJSON(value.status),
        'messages': value.messages,
    };
}

