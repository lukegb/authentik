"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticatorValidationChallengeResponseRequestToJSON = exports.AuthenticatorValidationChallengeResponseRequestFromJSONTyped = exports.AuthenticatorValidationChallengeResponseRequestFromJSON = exports.instanceOfAuthenticatorValidationChallengeResponseRequest = void 0;
const runtime_1 = require("../runtime");
const DeviceChallengeRequest_1 = require("./DeviceChallengeRequest");
/**
 * Check if a given object implements the AuthenticatorValidationChallengeResponseRequest interface.
 */
function instanceOfAuthenticatorValidationChallengeResponseRequest(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAuthenticatorValidationChallengeResponseRequest = instanceOfAuthenticatorValidationChallengeResponseRequest;
function AuthenticatorValidationChallengeResponseRequestFromJSON(json) {
    return AuthenticatorValidationChallengeResponseRequestFromJSONTyped(json, false);
}
exports.AuthenticatorValidationChallengeResponseRequestFromJSON = AuthenticatorValidationChallengeResponseRequestFromJSON;
function AuthenticatorValidationChallengeResponseRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'component': !(0, runtime_1.exists)(json, 'component') ? undefined : json['component'],
        'selectedChallenge': !(0, runtime_1.exists)(json, 'selected_challenge') ? undefined : (0, DeviceChallengeRequest_1.DeviceChallengeRequestFromJSON)(json['selected_challenge']),
        'selectedStage': !(0, runtime_1.exists)(json, 'selected_stage') ? undefined : json['selected_stage'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'webauthn': !(0, runtime_1.exists)(json, 'webauthn') ? undefined : json['webauthn'],
        'duo': !(0, runtime_1.exists)(json, 'duo') ? undefined : json['duo'],
    };
}
exports.AuthenticatorValidationChallengeResponseRequestFromJSONTyped = AuthenticatorValidationChallengeResponseRequestFromJSONTyped;
function AuthenticatorValidationChallengeResponseRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'component': value.component,
        'selected_challenge': (0, DeviceChallengeRequest_1.DeviceChallengeRequestToJSON)(value.selectedChallenge),
        'selected_stage': value.selectedStage,
        'code': value.code,
        'webauthn': value.webauthn,
        'duo': value.duo,
    };
}
exports.AuthenticatorValidationChallengeResponseRequestToJSON = AuthenticatorValidationChallengeResponseRequestToJSON;
