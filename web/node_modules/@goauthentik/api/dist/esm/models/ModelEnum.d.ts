/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * * `authentik_tenants.domain` - Domain
 * * `authentik_crypto.certificatekeypair` - Certificate-Key Pair
 * * `authentik_flows.flow` - Flow
 * * `authentik_flows.flowstagebinding` - Flow Stage Binding
 * * `authentik_outposts.dockerserviceconnection` - Docker Service-Connection
 * * `authentik_outposts.kubernetesserviceconnection` - Kubernetes Service-Connection
 * * `authentik_outposts.outpost` - Outpost
 * * `authentik_policies_dummy.dummypolicy` - Dummy Policy
 * * `authentik_policies_event_matcher.eventmatcherpolicy` - Event Matcher Policy
 * * `authentik_policies_expiry.passwordexpirypolicy` - Password Expiry Policy
 * * `authentik_policies_expression.expressionpolicy` - Expression Policy
 * * `authentik_policies_password.passwordpolicy` - Password Policy
 * * `authentik_policies_reputation.reputationpolicy` - Reputation Policy
 * * `authentik_policies.policybinding` - Policy Binding
 * * `authentik_providers_ldap.ldapprovider` - LDAP Provider
 * * `authentik_providers_oauth2.scopemapping` - Scope Mapping
 * * `authentik_providers_oauth2.oauth2provider` - OAuth2/OpenID Provider
 * * `authentik_providers_proxy.proxyprovider` - Proxy Provider
 * * `authentik_providers_radius.radiusprovider` - Radius Provider
 * * `authentik_providers_saml.samlprovider` - SAML Provider
 * * `authentik_providers_saml.samlpropertymapping` - SAML Property Mapping
 * * `authentik_providers_scim.scimprovider` - SCIM Provider
 * * `authentik_providers_scim.scimmapping` - SCIM Mapping
 * * `authentik_rbac.role` - Role
 * * `authentik_sources_ldap.ldapsource` - LDAP Source
 * * `authentik_sources_ldap.ldappropertymapping` - LDAP Property Mapping
 * * `authentik_sources_oauth.oauthsource` - OAuth Source
 * * `authentik_sources_oauth.useroauthsourceconnection` - User OAuth Source Connection
 * * `authentik_sources_plex.plexsource` - Plex Source
 * * `authentik_sources_plex.plexsourceconnection` - User Plex Source Connection
 * * `authentik_sources_saml.samlsource` - SAML Source
 * * `authentik_sources_saml.usersamlsourceconnection` - User SAML Source Connection
 * * `authentik_stages_authenticator_duo.authenticatorduostage` - Duo Authenticator Setup Stage
 * * `authentik_stages_authenticator_duo.duodevice` - Duo Device
 * * `authentik_stages_authenticator_sms.authenticatorsmsstage` - SMS Authenticator Setup Stage
 * * `authentik_stages_authenticator_sms.smsdevice` - SMS Device
 * * `authentik_stages_authenticator_static.authenticatorstaticstage` - Static Authenticator Setup Stage
 * * `authentik_stages_authenticator_static.staticdevice` - Static Device
 * * `authentik_stages_authenticator_totp.authenticatortotpstage` - TOTP Authenticator Setup Stage
 * * `authentik_stages_authenticator_totp.totpdevice` - TOTP Device
 * * `authentik_stages_authenticator_validate.authenticatorvalidatestage` - Authenticator Validation Stage
 * * `authentik_stages_authenticator_webauthn.authenticatewebauthnstage` - WebAuthn Authenticator Setup Stage
 * * `authentik_stages_authenticator_webauthn.webauthndevice` - WebAuthn Device
 * * `authentik_stages_captcha.captchastage` - Captcha Stage
 * * `authentik_stages_consent.consentstage` - Consent Stage
 * * `authentik_stages_consent.userconsent` - User Consent
 * * `authentik_stages_deny.denystage` - Deny Stage
 * * `authentik_stages_dummy.dummystage` - Dummy Stage
 * * `authentik_stages_email.emailstage` - Email Stage
 * * `authentik_stages_ext_auth.extauthstage` - ExtAuth Stage
 * * `authentik_stages_identification.identificationstage` - Identification Stage
 * * `authentik_stages_invitation.invitationstage` - Invitation Stage
 * * `authentik_stages_invitation.invitation` - Invitation
 * * `authentik_stages_password.passwordstage` - Password Stage
 * * `authentik_stages_prompt.prompt` - Prompt
 * * `authentik_stages_prompt.promptstage` - Prompt Stage
 * * `authentik_stages_user_delete.userdeletestage` - User Delete Stage
 * * `authentik_stages_user_login.userloginstage` - User Login Stage
 * * `authentik_stages_user_logout.userlogoutstage` - User Logout Stage
 * * `authentik_stages_user_write.userwritestage` - User Write Stage
 * * `authentik_brands.brand` - Brand
 * * `authentik_blueprints.blueprintinstance` - Blueprint Instance
 * * `authentik_core.group` - Group
 * * `authentik_core.user` - User
 * * `authentik_core.application` - Application
 * * `authentik_core.token` - Token
 * * `authentik_enterprise.license` - License
 * * `authentik_providers_rac.racprovider` - RAC Provider
 * * `authentik_providers_rac.endpoint` - RAC Endpoint
 * * `authentik_providers_rac.racpropertymapping` - RAC Property Mapping
 * * `authentik_events.event` - Event
 * * `authentik_events.notificationtransport` - Notification Transport
 * * `authentik_events.notification` - Notification
 * * `authentik_events.notificationrule` - Notification Rule
 * * `authentik_events.notificationwebhookmapping` - Webhook Mapping
 * @export
 */
export declare const ModelEnum: {
    readonly TenantsDomain: "authentik_tenants.domain";
    readonly CryptoCertificatekeypair: "authentik_crypto.certificatekeypair";
    readonly FlowsFlow: "authentik_flows.flow";
    readonly FlowsFlowstagebinding: "authentik_flows.flowstagebinding";
    readonly OutpostsDockerserviceconnection: "authentik_outposts.dockerserviceconnection";
    readonly OutpostsKubernetesserviceconnection: "authentik_outposts.kubernetesserviceconnection";
    readonly OutpostsOutpost: "authentik_outposts.outpost";
    readonly PoliciesDummyDummypolicy: "authentik_policies_dummy.dummypolicy";
    readonly PoliciesEventMatcherEventmatcherpolicy: "authentik_policies_event_matcher.eventmatcherpolicy";
    readonly PoliciesExpiryPasswordexpirypolicy: "authentik_policies_expiry.passwordexpirypolicy";
    readonly PoliciesExpressionExpressionpolicy: "authentik_policies_expression.expressionpolicy";
    readonly PoliciesPasswordPasswordpolicy: "authentik_policies_password.passwordpolicy";
    readonly PoliciesReputationReputationpolicy: "authentik_policies_reputation.reputationpolicy";
    readonly PoliciesPolicybinding: "authentik_policies.policybinding";
    readonly ProvidersLdapLdapprovider: "authentik_providers_ldap.ldapprovider";
    readonly ProvidersOauth2Scopemapping: "authentik_providers_oauth2.scopemapping";
    readonly ProvidersOauth2Oauth2provider: "authentik_providers_oauth2.oauth2provider";
    readonly ProvidersProxyProxyprovider: "authentik_providers_proxy.proxyprovider";
    readonly ProvidersRadiusRadiusprovider: "authentik_providers_radius.radiusprovider";
    readonly ProvidersSamlSamlprovider: "authentik_providers_saml.samlprovider";
    readonly ProvidersSamlSamlpropertymapping: "authentik_providers_saml.samlpropertymapping";
    readonly ProvidersScimScimprovider: "authentik_providers_scim.scimprovider";
    readonly ProvidersScimScimmapping: "authentik_providers_scim.scimmapping";
    readonly RbacRole: "authentik_rbac.role";
    readonly SourcesLdapLdapsource: "authentik_sources_ldap.ldapsource";
    readonly SourcesLdapLdappropertymapping: "authentik_sources_ldap.ldappropertymapping";
    readonly SourcesOauthOauthsource: "authentik_sources_oauth.oauthsource";
    readonly SourcesOauthUseroauthsourceconnection: "authentik_sources_oauth.useroauthsourceconnection";
    readonly SourcesPlexPlexsource: "authentik_sources_plex.plexsource";
    readonly SourcesPlexPlexsourceconnection: "authentik_sources_plex.plexsourceconnection";
    readonly SourcesSamlSamlsource: "authentik_sources_saml.samlsource";
    readonly SourcesSamlUsersamlsourceconnection: "authentik_sources_saml.usersamlsourceconnection";
    readonly StagesAuthenticatorDuoAuthenticatorduostage: "authentik_stages_authenticator_duo.authenticatorduostage";
    readonly StagesAuthenticatorDuoDuodevice: "authentik_stages_authenticator_duo.duodevice";
    readonly StagesAuthenticatorSmsAuthenticatorsmsstage: "authentik_stages_authenticator_sms.authenticatorsmsstage";
    readonly StagesAuthenticatorSmsSmsdevice: "authentik_stages_authenticator_sms.smsdevice";
    readonly StagesAuthenticatorStaticAuthenticatorstaticstage: "authentik_stages_authenticator_static.authenticatorstaticstage";
    readonly StagesAuthenticatorStaticStaticdevice: "authentik_stages_authenticator_static.staticdevice";
    readonly StagesAuthenticatorTotpAuthenticatortotpstage: "authentik_stages_authenticator_totp.authenticatortotpstage";
    readonly StagesAuthenticatorTotpTotpdevice: "authentik_stages_authenticator_totp.totpdevice";
    readonly StagesAuthenticatorValidateAuthenticatorvalidatestage: "authentik_stages_authenticator_validate.authenticatorvalidatestage";
    readonly StagesAuthenticatorWebauthnAuthenticatewebauthnstage: "authentik_stages_authenticator_webauthn.authenticatewebauthnstage";
    readonly StagesAuthenticatorWebauthnWebauthndevice: "authentik_stages_authenticator_webauthn.webauthndevice";
    readonly StagesCaptchaCaptchastage: "authentik_stages_captcha.captchastage";
    readonly StagesConsentConsentstage: "authentik_stages_consent.consentstage";
    readonly StagesConsentUserconsent: "authentik_stages_consent.userconsent";
    readonly StagesDenyDenystage: "authentik_stages_deny.denystage";
    readonly StagesDummyDummystage: "authentik_stages_dummy.dummystage";
    readonly StagesEmailEmailstage: "authentik_stages_email.emailstage";
    readonly StagesExtAuthExtauthstage: "authentik_stages_ext_auth.extauthstage";
    readonly StagesIdentificationIdentificationstage: "authentik_stages_identification.identificationstage";
    readonly StagesInvitationInvitationstage: "authentik_stages_invitation.invitationstage";
    readonly StagesInvitationInvitation: "authentik_stages_invitation.invitation";
    readonly StagesPasswordPasswordstage: "authentik_stages_password.passwordstage";
    readonly StagesPromptPrompt: "authentik_stages_prompt.prompt";
    readonly StagesPromptPromptstage: "authentik_stages_prompt.promptstage";
    readonly StagesUserDeleteUserdeletestage: "authentik_stages_user_delete.userdeletestage";
    readonly StagesUserLoginUserloginstage: "authentik_stages_user_login.userloginstage";
    readonly StagesUserLogoutUserlogoutstage: "authentik_stages_user_logout.userlogoutstage";
    readonly StagesUserWriteUserwritestage: "authentik_stages_user_write.userwritestage";
    readonly BrandsBrand: "authentik_brands.brand";
    readonly BlueprintsBlueprintinstance: "authentik_blueprints.blueprintinstance";
    readonly CoreGroup: "authentik_core.group";
    readonly CoreUser: "authentik_core.user";
    readonly CoreApplication: "authentik_core.application";
    readonly CoreToken: "authentik_core.token";
    readonly EnterpriseLicense: "authentik_enterprise.license";
    readonly ProvidersRacRacprovider: "authentik_providers_rac.racprovider";
    readonly ProvidersRacEndpoint: "authentik_providers_rac.endpoint";
    readonly ProvidersRacRacpropertymapping: "authentik_providers_rac.racpropertymapping";
    readonly EventsEvent: "authentik_events.event";
    readonly EventsNotificationtransport: "authentik_events.notificationtransport";
    readonly EventsNotification: "authentik_events.notification";
    readonly EventsNotificationrule: "authentik_events.notificationrule";
    readonly EventsNotificationwebhookmapping: "authentik_events.notificationwebhookmapping";
    readonly UnknownDefaultOpenApi: "11184809";
};
export type ModelEnum = typeof ModelEnum[keyof typeof ModelEnum];
export declare function ModelEnumFromJSON(json: any): ModelEnum;
export declare function ModelEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelEnum;
export declare function ModelEnumToJSON(value?: ModelEnum | null): any;
