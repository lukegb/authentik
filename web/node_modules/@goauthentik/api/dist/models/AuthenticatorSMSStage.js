"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticatorSMSStageToJSON = exports.AuthenticatorSMSStageFromJSONTyped = exports.AuthenticatorSMSStageFromJSON = exports.instanceOfAuthenticatorSMSStage = void 0;
const runtime_1 = require("../runtime");
const AuthTypeEnum_1 = require("./AuthTypeEnum");
const FlowSet_1 = require("./FlowSet");
const ProviderEnum_1 = require("./ProviderEnum");
/**
 * Check if a given object implements the AuthenticatorSMSStage interface.
 */
function instanceOfAuthenticatorSMSStage(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    isInstance = isInstance && "provider" in value;
    isInstance = isInstance && "fromNumber" in value;
    isInstance = isInstance && "accountSid" in value;
    isInstance = isInstance && "auth" in value;
    return isInstance;
}
exports.instanceOfAuthenticatorSMSStage = instanceOfAuthenticatorSMSStage;
function AuthenticatorSMSStageFromJSON(json) {
    return AuthenticatorSMSStageFromJSONTyped(json, false);
}
exports.AuthenticatorSMSStageFromJSON = AuthenticatorSMSStageFromJSON;
function AuthenticatorSMSStageFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'component': json['component'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'flowSet': !(0, runtime_1.exists)(json, 'flow_set') ? undefined : (json['flow_set'].map(FlowSet_1.FlowSetFromJSON)),
        'configureFlow': !(0, runtime_1.exists)(json, 'configure_flow') ? undefined : json['configure_flow'],
        'friendlyName': !(0, runtime_1.exists)(json, 'friendly_name') ? undefined : json['friendly_name'],
        'provider': (0, ProviderEnum_1.ProviderEnumFromJSON)(json['provider']),
        'fromNumber': json['from_number'],
        'accountSid': json['account_sid'],
        'auth': json['auth'],
        'authPassword': !(0, runtime_1.exists)(json, 'auth_password') ? undefined : json['auth_password'],
        'authType': !(0, runtime_1.exists)(json, 'auth_type') ? undefined : (0, AuthTypeEnum_1.AuthTypeEnumFromJSON)(json['auth_type']),
        'verifyOnly': !(0, runtime_1.exists)(json, 'verify_only') ? undefined : json['verify_only'],
        'mapping': !(0, runtime_1.exists)(json, 'mapping') ? undefined : json['mapping'],
    };
}
exports.AuthenticatorSMSStageFromJSONTyped = AuthenticatorSMSStageFromJSONTyped;
function AuthenticatorSMSStageToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : (value.flowSet.map(FlowSet_1.FlowSetToJSON)),
        'configure_flow': value.configureFlow,
        'friendly_name': value.friendlyName,
        'provider': (0, ProviderEnum_1.ProviderEnumToJSON)(value.provider),
        'from_number': value.fromNumber,
        'account_sid': value.accountSid,
        'auth': value.auth,
        'auth_password': value.authPassword,
        'auth_type': (0, AuthTypeEnum_1.AuthTypeEnumToJSON)(value.authType),
        'verify_only': value.verifyOnly,
        'mapping': value.mapping,
    };
}
exports.AuthenticatorSMSStageToJSON = AuthenticatorSMSStageToJSON;
