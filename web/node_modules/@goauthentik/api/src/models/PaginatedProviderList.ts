/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
} from './Pagination';
import type { Provider } from './Provider';
import {
    ProviderFromJSON,
    ProviderFromJSONTyped,
    ProviderToJSON,
} from './Provider';

/**
 * 
 * @export
 * @interface PaginatedProviderList
 */
export interface PaginatedProviderList {
    /**
     * 
     * @type {Pagination}
     * @memberof PaginatedProviderList
     */
    pagination: Pagination;
    /**
     * 
     * @type {Array<Provider>}
     * @memberof PaginatedProviderList
     */
    results: Array<Provider>;
}

/**
 * Check if a given object implements the PaginatedProviderList interface.
 */
export function instanceOfPaginatedProviderList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pagination" in value;
    isInstance = isInstance && "results" in value;

    return isInstance;
}

export function PaginatedProviderListFromJSON(json: any): PaginatedProviderList {
    return PaginatedProviderListFromJSONTyped(json, false);
}

export function PaginatedProviderListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedProviderList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pagination': PaginationFromJSON(json['pagination']),
        'results': ((json['results'] as Array<any>).map(ProviderFromJSON)),
    };
}

export function PaginatedProviderListToJSON(value?: PaginatedProviderList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pagination': PaginationToJSON(value.pagination),
        'results': ((value.results as Array<any>).map(ProviderToJSON)),
    };
}

