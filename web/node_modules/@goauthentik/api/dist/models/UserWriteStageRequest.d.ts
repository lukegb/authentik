/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FlowSetRequest } from './FlowSetRequest';
import type { UserCreationModeEnum } from './UserCreationModeEnum';
import type { UserTypeEnum } from './UserTypeEnum';
/**
 * UserWriteStage Serializer
 * @export
 * @interface UserWriteStageRequest
 */
export interface UserWriteStageRequest {
    /**
     *
     * @type {string}
     * @memberof UserWriteStageRequest
     */
    name: string;
    /**
     *
     * @type {Array<FlowSetRequest>}
     * @memberof UserWriteStageRequest
     */
    flowSet?: Array<FlowSetRequest>;
    /**
     *
     * @type {UserCreationModeEnum}
     * @memberof UserWriteStageRequest
     */
    userCreationMode?: UserCreationModeEnum;
    /**
     * When set, newly created users are inactive and cannot login.
     * @type {boolean}
     * @memberof UserWriteStageRequest
     */
    createUsersAsInactive?: boolean;
    /**
     * Optionally add newly created users to this group.
     * @type {string}
     * @memberof UserWriteStageRequest
     */
    createUsersGroup?: string | null;
    /**
     *
     * @type {UserTypeEnum}
     * @memberof UserWriteStageRequest
     */
    userType?: UserTypeEnum;
    /**
     *
     * @type {string}
     * @memberof UserWriteStageRequest
     */
    userPathTemplate?: string;
}
/**
 * Check if a given object implements the UserWriteStageRequest interface.
 */
export declare function instanceOfUserWriteStageRequest(value: object): boolean;
export declare function UserWriteStageRequestFromJSON(json: any): UserWriteStageRequest;
export declare function UserWriteStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserWriteStageRequest;
export declare function UserWriteStageRequestToJSON(value?: UserWriteStageRequest | null): any;
