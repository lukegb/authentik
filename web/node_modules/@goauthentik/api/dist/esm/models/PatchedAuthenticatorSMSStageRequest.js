/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AuthTypeEnumFromJSON, AuthTypeEnumToJSON, } from './AuthTypeEnum';
import { FlowSetRequestFromJSON, FlowSetRequestToJSON, } from './FlowSetRequest';
import { ProviderEnumFromJSON, ProviderEnumToJSON, } from './ProviderEnum';
/**
 * Check if a given object implements the PatchedAuthenticatorSMSStageRequest interface.
 */
export function instanceOfPatchedAuthenticatorSMSStageRequest(value) {
    let isInstance = true;
    return isInstance;
}
export function PatchedAuthenticatorSMSStageRequestFromJSON(json) {
    return PatchedAuthenticatorSMSStageRequestFromJSONTyped(json, false);
}
export function PatchedAuthenticatorSMSStageRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'flowSet': !exists(json, 'flow_set') ? undefined : (json['flow_set'].map(FlowSetRequestFromJSON)),
        'configureFlow': !exists(json, 'configure_flow') ? undefined : json['configure_flow'],
        'friendlyName': !exists(json, 'friendly_name') ? undefined : json['friendly_name'],
        'provider': !exists(json, 'provider') ? undefined : ProviderEnumFromJSON(json['provider']),
        'fromNumber': !exists(json, 'from_number') ? undefined : json['from_number'],
        'accountSid': !exists(json, 'account_sid') ? undefined : json['account_sid'],
        'auth': !exists(json, 'auth') ? undefined : json['auth'],
        'authPassword': !exists(json, 'auth_password') ? undefined : json['auth_password'],
        'authType': !exists(json, 'auth_type') ? undefined : AuthTypeEnumFromJSON(json['auth_type']),
        'verifyOnly': !exists(json, 'verify_only') ? undefined : json['verify_only'],
        'mapping': !exists(json, 'mapping') ? undefined : json['mapping'],
    };
}
export function PatchedAuthenticatorSMSStageRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : (value.flowSet.map(FlowSetRequestToJSON)),
        'configure_flow': value.configureFlow,
        'friendly_name': value.friendlyName,
        'provider': ProviderEnumToJSON(value.provider),
        'from_number': value.fromNumber,
        'account_sid': value.accountSid,
        'auth': value.auth,
        'auth_password': value.authPassword,
        'auth_type': AuthTypeEnumToJSON(value.authType),
        'verify_only': value.verifyOnly,
        'mapping': value.mapping,
    };
}
