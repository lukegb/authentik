/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Response object of Event's top_per_user
 * @export
 * @interface EventTopPerUser
 */
export interface EventTopPerUser {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof EventTopPerUser
     */
    application: { [key: string]: any; };
    /**
     * 
     * @type {number}
     * @memberof EventTopPerUser
     */
    countedEvents: number;
    /**
     * 
     * @type {number}
     * @memberof EventTopPerUser
     */
    uniqueUsers: number;
}

/**
 * Check if a given object implements the EventTopPerUser interface.
 */
export function instanceOfEventTopPerUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "application" in value;
    isInstance = isInstance && "countedEvents" in value;
    isInstance = isInstance && "uniqueUsers" in value;

    return isInstance;
}

export function EventTopPerUserFromJSON(json: any): EventTopPerUser {
    return EventTopPerUserFromJSONTyped(json, false);
}

export function EventTopPerUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventTopPerUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'application': json['application'],
        'countedEvents': json['counted_events'],
        'uniqueUsers': json['unique_users'],
    };
}

export function EventTopPerUserToJSON(value?: EventTopPerUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'application': value.application,
        'counted_events': value.countedEvents,
        'unique_users': value.uniqueUsers,
    };
}

