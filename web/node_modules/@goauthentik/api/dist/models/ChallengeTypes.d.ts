/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccessDeniedChallenge } from './AccessDeniedChallenge';
import { AppleLoginChallenge } from './AppleLoginChallenge';
import { AuthenticatorDuoChallenge } from './AuthenticatorDuoChallenge';
import { AuthenticatorSMSChallenge } from './AuthenticatorSMSChallenge';
import { AuthenticatorStaticChallenge } from './AuthenticatorStaticChallenge';
import { AuthenticatorTOTPChallenge } from './AuthenticatorTOTPChallenge';
import { AuthenticatorValidationChallenge } from './AuthenticatorValidationChallenge';
import { AuthenticatorWebAuthnChallenge } from './AuthenticatorWebAuthnChallenge';
import { AutosubmitChallenge } from './AutosubmitChallenge';
import { CaptchaChallenge } from './CaptchaChallenge';
import { ConsentChallenge } from './ConsentChallenge';
import { DummyChallenge } from './DummyChallenge';
import { EmailChallenge } from './EmailChallenge';
import { FlowErrorChallenge } from './FlowErrorChallenge';
import { IdentificationChallenge } from './IdentificationChallenge';
import { OAuthDeviceCodeChallenge } from './OAuthDeviceCodeChallenge';
import { OAuthDeviceCodeFinishChallenge } from './OAuthDeviceCodeFinishChallenge';
import { PasswordChallenge } from './PasswordChallenge';
import { PlexAuthenticationChallenge } from './PlexAuthenticationChallenge';
import { PromptChallenge } from './PromptChallenge';
import { RedirectChallenge } from './RedirectChallenge';
import { ShellChallenge } from './ShellChallenge';
import { UserLoginChallenge } from './UserLoginChallenge';
/**
 * @type ChallengeTypes
 *
 * @export
 */
export type ChallengeTypes = {
    component: 'ak-provider-oauth2-device-code';
} & OAuthDeviceCodeChallenge | {
    component: 'ak-provider-oauth2-device-code-finish';
} & OAuthDeviceCodeFinishChallenge | {
    component: 'ak-source-oauth-apple';
} & AppleLoginChallenge | {
    component: 'ak-source-plex';
} & PlexAuthenticationChallenge | {
    component: 'ak-stage-access-denied';
} & AccessDeniedChallenge | {
    component: 'ak-stage-authenticator-duo';
} & AuthenticatorDuoChallenge | {
    component: 'ak-stage-authenticator-sms';
} & AuthenticatorSMSChallenge | {
    component: 'ak-stage-authenticator-static';
} & AuthenticatorStaticChallenge | {
    component: 'ak-stage-authenticator-totp';
} & AuthenticatorTOTPChallenge | {
    component: 'ak-stage-authenticator-validate';
} & AuthenticatorValidationChallenge | {
    component: 'ak-stage-authenticator-webauthn';
} & AuthenticatorWebAuthnChallenge | {
    component: 'ak-stage-autosubmit';
} & AutosubmitChallenge | {
    component: 'ak-stage-captcha';
} & CaptchaChallenge | {
    component: 'ak-stage-consent';
} & ConsentChallenge | {
    component: 'ak-stage-dummy';
} & DummyChallenge | {
    component: 'ak-stage-email';
} & EmailChallenge | {
    component: 'ak-stage-flow-error';
} & FlowErrorChallenge | {
    component: 'ak-stage-identification';
} & IdentificationChallenge | {
    component: 'ak-stage-password';
} & PasswordChallenge | {
    component: 'ak-stage-prompt';
} & PromptChallenge | {
    component: 'ak-stage-user-login';
} & UserLoginChallenge | {
    component: 'xak-flow-redirect';
} & RedirectChallenge | {
    component: 'xak-flow-shell';
} & ShellChallenge;
export declare function ChallengeTypesFromJSON(json: any): ChallengeTypes;
export declare function ChallengeTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChallengeTypes;
export declare function ChallengeTypesToJSON(value?: ChallengeTypes | null): any;
