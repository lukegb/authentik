/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the CertificateKeyPair interface.
 */
export function instanceOfCertificateKeyPair(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "fingerprintSha256" in value;
    isInstance = isInstance && "fingerprintSha1" in value;
    isInstance = isInstance && "certExpiry" in value;
    isInstance = isInstance && "certSubject" in value;
    isInstance = isInstance && "privateKeyAvailable" in value;
    isInstance = isInstance && "privateKeyType" in value;
    isInstance = isInstance && "certificateDownloadUrl" in value;
    isInstance = isInstance && "privateKeyDownloadUrl" in value;
    isInstance = isInstance && "managed" in value;
    return isInstance;
}
export function CertificateKeyPairFromJSON(json) {
    return CertificateKeyPairFromJSONTyped(json, false);
}
export function CertificateKeyPairFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'fingerprintSha256': json['fingerprint_sha256'],
        'fingerprintSha1': json['fingerprint_sha1'],
        'certExpiry': (json['cert_expiry'] === null ? null : new Date(json['cert_expiry'])),
        'certSubject': json['cert_subject'],
        'privateKeyAvailable': json['private_key_available'],
        'privateKeyType': json['private_key_type'],
        'certificateDownloadUrl': json['certificate_download_url'],
        'privateKeyDownloadUrl': json['private_key_download_url'],
        'managed': json['managed'],
    };
}
export function CertificateKeyPairToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
    };
}
