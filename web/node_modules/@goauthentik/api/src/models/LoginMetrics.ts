/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Coordinate } from './Coordinate';
import {
    CoordinateFromJSON,
    CoordinateFromJSONTyped,
    CoordinateToJSON,
} from './Coordinate';

/**
 * Login Metrics per 1h
 * @export
 * @interface LoginMetrics
 */
export interface LoginMetrics {
    /**
     * 
     * @type {Array<Coordinate>}
     * @memberof LoginMetrics
     */
    readonly logins: Array<Coordinate>;
    /**
     * 
     * @type {Array<Coordinate>}
     * @memberof LoginMetrics
     */
    readonly loginsFailed: Array<Coordinate>;
    /**
     * 
     * @type {Array<Coordinate>}
     * @memberof LoginMetrics
     */
    readonly authorizations: Array<Coordinate>;
}

/**
 * Check if a given object implements the LoginMetrics interface.
 */
export function instanceOfLoginMetrics(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "logins" in value;
    isInstance = isInstance && "loginsFailed" in value;
    isInstance = isInstance && "authorizations" in value;

    return isInstance;
}

export function LoginMetricsFromJSON(json: any): LoginMetrics {
    return LoginMetricsFromJSONTyped(json, false);
}

export function LoginMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginMetrics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'logins': ((json['logins'] as Array<any>).map(CoordinateFromJSON)),
        'loginsFailed': ((json['logins_failed'] as Array<any>).map(CoordinateFromJSON)),
        'authorizations': ((json['authorizations'] as Array<any>).map(CoordinateFromJSON)),
    };
}

export function LoginMetricsToJSON(value?: LoginMetrics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

