/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FlowSetRequest } from './FlowSetRequest';
import {
    FlowSetRequestFromJSON,
    FlowSetRequestFromJSONTyped,
    FlowSetRequestToJSON,
} from './FlowSetRequest';
import type { UserCreationModeEnum } from './UserCreationModeEnum';
import {
    UserCreationModeEnumFromJSON,
    UserCreationModeEnumFromJSONTyped,
    UserCreationModeEnumToJSON,
} from './UserCreationModeEnum';
import type { UserTypeEnum } from './UserTypeEnum';
import {
    UserTypeEnumFromJSON,
    UserTypeEnumFromJSONTyped,
    UserTypeEnumToJSON,
} from './UserTypeEnum';

/**
 * UserWriteStage Serializer
 * @export
 * @interface PatchedUserWriteStageRequest
 */
export interface PatchedUserWriteStageRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedUserWriteStageRequest
     */
    name?: string;
    /**
     * 
     * @type {Array<FlowSetRequest>}
     * @memberof PatchedUserWriteStageRequest
     */
    flowSet?: Array<FlowSetRequest>;
    /**
     * 
     * @type {UserCreationModeEnum}
     * @memberof PatchedUserWriteStageRequest
     */
    userCreationMode?: UserCreationModeEnum;
    /**
     * When set, newly created users are inactive and cannot login.
     * @type {boolean}
     * @memberof PatchedUserWriteStageRequest
     */
    createUsersAsInactive?: boolean;
    /**
     * Optionally add newly created users to this group.
     * @type {string}
     * @memberof PatchedUserWriteStageRequest
     */
    createUsersGroup?: string | null;
    /**
     * 
     * @type {UserTypeEnum}
     * @memberof PatchedUserWriteStageRequest
     */
    userType?: UserTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PatchedUserWriteStageRequest
     */
    userPathTemplate?: string;
}

/**
 * Check if a given object implements the PatchedUserWriteStageRequest interface.
 */
export function instanceOfPatchedUserWriteStageRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedUserWriteStageRequestFromJSON(json: any): PatchedUserWriteStageRequest {
    return PatchedUserWriteStageRequestFromJSONTyped(json, false);
}

export function PatchedUserWriteStageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedUserWriteStageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'flowSet': !exists(json, 'flow_set') ? undefined : ((json['flow_set'] as Array<any>).map(FlowSetRequestFromJSON)),
        'userCreationMode': !exists(json, 'user_creation_mode') ? undefined : UserCreationModeEnumFromJSON(json['user_creation_mode']),
        'createUsersAsInactive': !exists(json, 'create_users_as_inactive') ? undefined : json['create_users_as_inactive'],
        'createUsersGroup': !exists(json, 'create_users_group') ? undefined : json['create_users_group'],
        'userType': !exists(json, 'user_type') ? undefined : UserTypeEnumFromJSON(json['user_type']),
        'userPathTemplate': !exists(json, 'user_path_template') ? undefined : json['user_path_template'],
    };
}

export function PatchedUserWriteStageRequestToJSON(value?: PatchedUserWriteStageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'flow_set': value.flowSet === undefined ? undefined : ((value.flowSet as Array<any>).map(FlowSetRequestToJSON)),
        'user_creation_mode': UserCreationModeEnumToJSON(value.userCreationMode),
        'create_users_as_inactive': value.createUsersAsInactive,
        'create_users_group': value.createUsersGroup,
        'user_type': UserTypeEnumToJSON(value.userType),
        'user_path_template': value.userPathTemplate,
    };
}

