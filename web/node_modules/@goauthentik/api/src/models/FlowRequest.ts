/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthenticationEnum } from './AuthenticationEnum';
import {
    AuthenticationEnumFromJSON,
    AuthenticationEnumFromJSONTyped,
    AuthenticationEnumToJSON,
} from './AuthenticationEnum';
import type { DeniedActionEnum } from './DeniedActionEnum';
import {
    DeniedActionEnumFromJSON,
    DeniedActionEnumFromJSONTyped,
    DeniedActionEnumToJSON,
} from './DeniedActionEnum';
import type { FlowDesignationEnum } from './FlowDesignationEnum';
import {
    FlowDesignationEnumFromJSON,
    FlowDesignationEnumFromJSONTyped,
    FlowDesignationEnumToJSON,
} from './FlowDesignationEnum';
import type { FlowLayoutEnum } from './FlowLayoutEnum';
import {
    FlowLayoutEnumFromJSON,
    FlowLayoutEnumFromJSONTyped,
    FlowLayoutEnumToJSON,
} from './FlowLayoutEnum';
import type { PolicyEngineMode } from './PolicyEngineMode';
import {
    PolicyEngineModeFromJSON,
    PolicyEngineModeFromJSONTyped,
    PolicyEngineModeToJSON,
} from './PolicyEngineMode';

/**
 * Flow Serializer
 * @export
 * @interface FlowRequest
 */
export interface FlowRequest {
    /**
     * 
     * @type {string}
     * @memberof FlowRequest
     */
    name: string;
    /**
     * Visible in the URL.
     * @type {string}
     * @memberof FlowRequest
     */
    slug: string;
    /**
     * Shown as the Title in Flow pages.
     * @type {string}
     * @memberof FlowRequest
     */
    title: string;
    /**
     * 
     * @type {FlowDesignationEnum}
     * @memberof FlowRequest
     */
    designation: FlowDesignationEnum;
    /**
     * 
     * @type {PolicyEngineMode}
     * @memberof FlowRequest
     */
    policyEngineMode?: PolicyEngineMode;
    /**
     * Enable compatibility mode, increases compatibility with password managers on mobile devices.
     * @type {boolean}
     * @memberof FlowRequest
     */
    compatibilityMode?: boolean;
    /**
     * 
     * @type {FlowLayoutEnum}
     * @memberof FlowRequest
     */
    layout?: FlowLayoutEnum;
    /**
     * 
     * @type {DeniedActionEnum}
     * @memberof FlowRequest
     */
    deniedAction?: DeniedActionEnum;
    /**
     * 
     * @type {AuthenticationEnum}
     * @memberof FlowRequest
     */
    authentication?: AuthenticationEnum;
}

/**
 * Check if a given object implements the FlowRequest interface.
 */
export function instanceOfFlowRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "slug" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "designation" in value;

    return isInstance;
}

export function FlowRequestFromJSON(json: any): FlowRequest {
    return FlowRequestFromJSONTyped(json, false);
}

export function FlowRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlowRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'slug': json['slug'],
        'title': json['title'],
        'designation': FlowDesignationEnumFromJSON(json['designation']),
        'policyEngineMode': !exists(json, 'policy_engine_mode') ? undefined : PolicyEngineModeFromJSON(json['policy_engine_mode']),
        'compatibilityMode': !exists(json, 'compatibility_mode') ? undefined : json['compatibility_mode'],
        'layout': !exists(json, 'layout') ? undefined : FlowLayoutEnumFromJSON(json['layout']),
        'deniedAction': !exists(json, 'denied_action') ? undefined : DeniedActionEnumFromJSON(json['denied_action']),
        'authentication': !exists(json, 'authentication') ? undefined : AuthenticationEnumFromJSON(json['authentication']),
    };
}

export function FlowRequestToJSON(value?: FlowRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'slug': value.slug,
        'title': value.title,
        'designation': FlowDesignationEnumToJSON(value.designation),
        'policy_engine_mode': PolicyEngineModeToJSON(value.policyEngineMode),
        'compatibility_mode': value.compatibilityMode,
        'layout': FlowLayoutEnumToJSON(value.layout),
        'denied_action': DeniedActionEnumToJSON(value.deniedAction),
        'authentication': AuthenticationEnumToJSON(value.authentication),
    };
}

