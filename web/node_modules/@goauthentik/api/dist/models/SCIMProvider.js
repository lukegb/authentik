"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SCIMProviderToJSON = exports.SCIMProviderFromJSONTyped = exports.SCIMProviderFromJSON = exports.instanceOfSCIMProvider = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SCIMProvider interface.
 */
function instanceOfSCIMProvider(value) {
    let isInstance = true;
    isInstance = isInstance && "pk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "assignedBackchannelApplicationSlug" in value;
    isInstance = isInstance && "assignedBackchannelApplicationName" in value;
    isInstance = isInstance && "verboseName" in value;
    isInstance = isInstance && "verboseNamePlural" in value;
    isInstance = isInstance && "metaModelName" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "token" in value;
    return isInstance;
}
exports.instanceOfSCIMProvider = instanceOfSCIMProvider;
function SCIMProviderFromJSON(json) {
    return SCIMProviderFromJSONTyped(json, false);
}
exports.SCIMProviderFromJSON = SCIMProviderFromJSON;
function SCIMProviderFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pk': json['pk'],
        'name': json['name'],
        'propertyMappings': !(0, runtime_1.exists)(json, 'property_mappings') ? undefined : json['property_mappings'],
        'propertyMappingsGroup': !(0, runtime_1.exists)(json, 'property_mappings_group') ? undefined : json['property_mappings_group'],
        'component': json['component'],
        'assignedBackchannelApplicationSlug': json['assigned_backchannel_application_slug'],
        'assignedBackchannelApplicationName': json['assigned_backchannel_application_name'],
        'verboseName': json['verbose_name'],
        'verboseNamePlural': json['verbose_name_plural'],
        'metaModelName': json['meta_model_name'],
        'url': json['url'],
        'token': json['token'],
        'excludeUsersServiceAccount': !(0, runtime_1.exists)(json, 'exclude_users_service_account') ? undefined : json['exclude_users_service_account'],
        'filterGroup': !(0, runtime_1.exists)(json, 'filter_group') ? undefined : json['filter_group'],
    };
}
exports.SCIMProviderFromJSONTyped = SCIMProviderFromJSONTyped;
function SCIMProviderToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'property_mappings': value.propertyMappings,
        'property_mappings_group': value.propertyMappingsGroup,
        'url': value.url,
        'token': value.token,
        'exclude_users_service_account': value.excludeUsersServiceAccount,
        'filter_group': value.filterGroup,
    };
}
exports.SCIMProviderToJSON = SCIMProviderToJSON;
