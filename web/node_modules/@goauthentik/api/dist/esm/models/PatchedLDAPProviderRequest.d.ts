/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { LDAPAPIAccessMode } from './LDAPAPIAccessMode';
/**
 * LDAPProvider Serializer
 * @export
 * @interface PatchedLDAPProviderRequest
 */
export interface PatchedLDAPProviderRequest {
    /**
     *
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    name?: string;
    /**
     * Flow used for authentication when the associated application is accessed by an un-authenticated user.
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    authenticationFlow?: string | null;
    /**
     * Flow used when authorizing this provider.
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    authorizationFlow?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PatchedLDAPProviderRequest
     */
    propertyMappings?: Array<string>;
    /**
     * DN under which objects are accessible.
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    baseDn?: string;
    /**
     * Users in this group can do search queries. If not set, every user can execute search queries.
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    searchGroup?: string | null;
    /**
     *
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    certificate?: string | null;
    /**
     *
     * @type {string}
     * @memberof PatchedLDAPProviderRequest
     */
    tlsServerName?: string;
    /**
     * The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren't too low for POSIX users. Default is 2000 to ensure that we don't collide with local users uidNumber
     * @type {number}
     * @memberof PatchedLDAPProviderRequest
     */
    uidStartNumber?: number;
    /**
     * The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren't too low for POSIX groups. Default is 4000 to ensure that we don't collide with local groups or users primary groups gidNumber
     * @type {number}
     * @memberof PatchedLDAPProviderRequest
     */
    gidStartNumber?: number;
    /**
     *
     * @type {LDAPAPIAccessMode}
     * @memberof PatchedLDAPProviderRequest
     */
    searchMode?: LDAPAPIAccessMode;
    /**
     *
     * @type {LDAPAPIAccessMode}
     * @memberof PatchedLDAPProviderRequest
     */
    bindMode?: LDAPAPIAccessMode;
    /**
     * When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
     * @type {boolean}
     * @memberof PatchedLDAPProviderRequest
     */
    mfaSupport?: boolean;
}
/**
 * Check if a given object implements the PatchedLDAPProviderRequest interface.
 */
export declare function instanceOfPatchedLDAPProviderRequest(value: object): boolean;
export declare function PatchedLDAPProviderRequestFromJSON(json: any): PatchedLDAPProviderRequest;
export declare function PatchedLDAPProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedLDAPProviderRequest;
export declare function PatchedLDAPProviderRequestToJSON(value?: PatchedLDAPProviderRequest | null): any;
