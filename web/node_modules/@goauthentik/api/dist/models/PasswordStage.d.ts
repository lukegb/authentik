/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BackendsEnum } from './BackendsEnum';
import type { FlowSet } from './FlowSet';
/**
 * PasswordStage Serializer
 * @export
 * @interface PasswordStage
 */
export interface PasswordStage {
    /**
     *
     * @type {string}
     * @memberof PasswordStage
     */
    readonly pk: string;
    /**
     *
     * @type {string}
     * @memberof PasswordStage
     */
    name: string;
    /**
     * Get object type so that we know how to edit the object
     * @type {string}
     * @memberof PasswordStage
     */
    readonly component: string;
    /**
     * Return object's verbose_name
     * @type {string}
     * @memberof PasswordStage
     */
    readonly verboseName: string;
    /**
     * Return object's plural verbose_name
     * @type {string}
     * @memberof PasswordStage
     */
    readonly verboseNamePlural: string;
    /**
     * Return internal model name
     * @type {string}
     * @memberof PasswordStage
     */
    readonly metaModelName: string;
    /**
     *
     * @type {Array<FlowSet>}
     * @memberof PasswordStage
     */
    flowSet?: Array<FlowSet>;
    /**
     * Selection of backends to test the password against.
     * @type {Array<BackendsEnum>}
     * @memberof PasswordStage
     */
    backends: Array<BackendsEnum>;
    /**
     * Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
     * @type {string}
     * @memberof PasswordStage
     */
    configureFlow?: string | null;
    /**
     * How many attempts a user has before the flow is canceled. To lock the user out, use a reputation policy and a user_write stage.
     * @type {number}
     * @memberof PasswordStage
     */
    failedAttemptsBeforeCancel?: number;
}
/**
 * Check if a given object implements the PasswordStage interface.
 */
export declare function instanceOfPasswordStage(value: object): boolean;
export declare function PasswordStageFromJSON(json: any): PasswordStage;
export declare function PasswordStageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasswordStage;
export declare function PasswordStageToJSON(value?: PasswordStage | null): any;
