/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthModeEnum } from './AuthModeEnum';
import {
    AuthModeEnumFromJSON,
    AuthModeEnumFromJSONTyped,
    AuthModeEnumToJSON,
} from './AuthModeEnum';
import type { ProtocolEnum } from './ProtocolEnum';
import {
    ProtocolEnumFromJSON,
    ProtocolEnumFromJSONTyped,
    ProtocolEnumToJSON,
} from './ProtocolEnum';

/**
 * Endpoint Serializer
 * @export
 * @interface PatchedEndpointRequest
 */
export interface PatchedEndpointRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedEndpointRequest
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedEndpointRequest
     */
    provider?: number;
    /**
     * 
     * @type {ProtocolEnum}
     * @memberof PatchedEndpointRequest
     */
    protocol?: ProtocolEnum;
    /**
     * 
     * @type {string}
     * @memberof PatchedEndpointRequest
     */
    host?: string;
    /**
     * 
     * @type {any}
     * @memberof PatchedEndpointRequest
     */
    settings?: any | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedEndpointRequest
     */
    propertyMappings?: Array<string>;
    /**
     * 
     * @type {AuthModeEnum}
     * @memberof PatchedEndpointRequest
     */
    authMode?: AuthModeEnum;
    /**
     * 
     * @type {number}
     * @memberof PatchedEndpointRequest
     */
    maximumConnections?: number;
}

/**
 * Check if a given object implements the PatchedEndpointRequest interface.
 */
export function instanceOfPatchedEndpointRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedEndpointRequestFromJSON(json: any): PatchedEndpointRequest {
    return PatchedEndpointRequestFromJSONTyped(json, false);
}

export function PatchedEndpointRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedEndpointRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'provider': !exists(json, 'provider') ? undefined : json['provider'],
        'protocol': !exists(json, 'protocol') ? undefined : ProtocolEnumFromJSON(json['protocol']),
        'host': !exists(json, 'host') ? undefined : json['host'],
        'settings': !exists(json, 'settings') ? undefined : json['settings'],
        'propertyMappings': !exists(json, 'property_mappings') ? undefined : json['property_mappings'],
        'authMode': !exists(json, 'auth_mode') ? undefined : AuthModeEnumFromJSON(json['auth_mode']),
        'maximumConnections': !exists(json, 'maximum_connections') ? undefined : json['maximum_connections'],
    };
}

export function PatchedEndpointRequestToJSON(value?: PatchedEndpointRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'provider': value.provider,
        'protocol': ProtocolEnumToJSON(value.protocol),
        'host': value.host,
        'settings': value.settings,
        'property_mappings': value.propertyMappings,
        'auth_mode': AuthModeEnumToJSON(value.authMode),
        'maximum_connections': value.maximumConnections,
    };
}

