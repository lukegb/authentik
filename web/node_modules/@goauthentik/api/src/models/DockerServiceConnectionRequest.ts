/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * DockerServiceConnection Serializer
 * @export
 * @interface DockerServiceConnectionRequest
 */
export interface DockerServiceConnectionRequest {
    /**
     * 
     * @type {string}
     * @memberof DockerServiceConnectionRequest
     */
    name: string;
    /**
     * If enabled, use the local connection. Required Docker socket/Kubernetes Integration
     * @type {boolean}
     * @memberof DockerServiceConnectionRequest
     */
    local?: boolean;
    /**
     * Can be in the format of 'unix://<path>' when connecting to a local docker daemon, or 'https://<hostname>:2376' when connecting to a remote system.
     * @type {string}
     * @memberof DockerServiceConnectionRequest
     */
    url: string;
    /**
     * CA which the endpoint's Certificate is verified against. Can be left empty for no validation.
     * @type {string}
     * @memberof DockerServiceConnectionRequest
     */
    tlsVerification?: string | null;
    /**
     * Certificate/Key used for authentication. Can be left empty for no authentication.
     * @type {string}
     * @memberof DockerServiceConnectionRequest
     */
    tlsAuthentication?: string | null;
}

/**
 * Check if a given object implements the DockerServiceConnectionRequest interface.
 */
export function instanceOfDockerServiceConnectionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function DockerServiceConnectionRequestFromJSON(json: any): DockerServiceConnectionRequest {
    return DockerServiceConnectionRequestFromJSONTyped(json, false);
}

export function DockerServiceConnectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockerServiceConnectionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'local': !exists(json, 'local') ? undefined : json['local'],
        'url': json['url'],
        'tlsVerification': !exists(json, 'tls_verification') ? undefined : json['tls_verification'],
        'tlsAuthentication': !exists(json, 'tls_authentication') ? undefined : json['tls_authentication'],
    };
}

export function DockerServiceConnectionRequestToJSON(value?: DockerServiceConnectionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'local': value.local,
        'url': value.url,
        'tls_verification': value.tlsVerification,
        'tls_authentication': value.tlsAuthentication,
    };
}

