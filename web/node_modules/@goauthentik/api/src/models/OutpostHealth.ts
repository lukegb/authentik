/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Outpost health status
 * @export
 * @interface OutpostHealth
 */
export interface OutpostHealth {
    /**
     * 
     * @type {string}
     * @memberof OutpostHealth
     */
    readonly uid: string;
    /**
     * 
     * @type {Date}
     * @memberof OutpostHealth
     */
    readonly lastSeen: Date;
    /**
     * 
     * @type {string}
     * @memberof OutpostHealth
     */
    readonly version: string;
    /**
     * 
     * @type {string}
     * @memberof OutpostHealth
     */
    readonly versionShould: string;
    /**
     * 
     * @type {boolean}
     * @memberof OutpostHealth
     */
    readonly versionOutdated: boolean;
    /**
     * 
     * @type {string}
     * @memberof OutpostHealth
     */
    readonly buildHash: string;
    /**
     * 
     * @type {string}
     * @memberof OutpostHealth
     */
    readonly buildHashShould: string;
    /**
     * 
     * @type {string}
     * @memberof OutpostHealth
     */
    readonly hostname: string;
}

/**
 * Check if a given object implements the OutpostHealth interface.
 */
export function instanceOfOutpostHealth(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "uid" in value;
    isInstance = isInstance && "lastSeen" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "versionShould" in value;
    isInstance = isInstance && "versionOutdated" in value;
    isInstance = isInstance && "buildHash" in value;
    isInstance = isInstance && "buildHashShould" in value;
    isInstance = isInstance && "hostname" in value;

    return isInstance;
}

export function OutpostHealthFromJSON(json: any): OutpostHealth {
    return OutpostHealthFromJSONTyped(json, false);
}

export function OutpostHealthFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutpostHealth {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uid': json['uid'],
        'lastSeen': (new Date(json['last_seen'])),
        'version': json['version'],
        'versionShould': json['version_should'],
        'versionOutdated': json['version_outdated'],
        'buildHash': json['build_hash'],
        'buildHashShould': json['build_hash_should'],
        'hostname': json['hostname'],
    };
}

export function OutpostHealthToJSON(value?: OutpostHealth | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

