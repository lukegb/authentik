/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the LicenseSummary interface.
 */
export function instanceOfLicenseSummary(value) {
    let isInstance = true;
    isInstance = isInstance && "internalUsers" in value;
    isInstance = isInstance && "externalUsers" in value;
    isInstance = isInstance && "valid" in value;
    isInstance = isInstance && "showAdminWarning" in value;
    isInstance = isInstance && "showUserWarning" in value;
    isInstance = isInstance && "readOnly" in value;
    isInstance = isInstance && "latestValid" in value;
    isInstance = isInstance && "hasLicense" in value;
    return isInstance;
}
export function LicenseSummaryFromJSON(json) {
    return LicenseSummaryFromJSONTyped(json, false);
}
export function LicenseSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'internalUsers': json['internal_users'],
        'externalUsers': json['external_users'],
        'valid': json['valid'],
        'showAdminWarning': json['show_admin_warning'],
        'showUserWarning': json['show_user_warning'],
        'readOnly': json['read_only'],
        'latestValid': (new Date(json['latest_valid'])),
        'hasLicense': json['has_license'],
    };
}
export function LicenseSummaryToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'internal_users': value.internalUsers,
        'external_users': value.externalUsers,
        'valid': value.valid,
        'show_admin_warning': value.showAdminWarning,
        'show_user_warning': value.showUserWarning,
        'read_only': value.readOnly,
        'latest_valid': (value.latestValid.toISOString()),
        'has_license': value.hasLicense,
    };
}
