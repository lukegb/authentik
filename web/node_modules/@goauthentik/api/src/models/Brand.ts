/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Brand Serializer
 * @export
 * @interface Brand
 */
export interface Brand {
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    readonly brandUuid: string;
    /**
     * Domain that activates this brand. Can be a superset, i.e. `a.b` for `aa.b` and `ba.b`
     * @type {string}
     * @memberof Brand
     */
    domain: string;
    /**
     * 
     * @type {boolean}
     * @memberof Brand
     */
    _default?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    brandingTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    brandingLogo?: string;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    brandingFavicon?: string;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    flowAuthentication?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    flowInvalidation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    flowRecovery?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    flowUnenrollment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    flowUserSettings?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Brand
     */
    flowDeviceCode?: string | null;
    /**
     * Web Certificate used by the authentik Core webserver.
     * @type {string}
     * @memberof Brand
     */
    webCertificate?: string | null;
    /**
     * 
     * @type {any}
     * @memberof Brand
     */
    attributes?: any | null;
}

/**
 * Check if a given object implements the Brand interface.
 */
export function instanceOfBrand(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "brandUuid" in value;
    isInstance = isInstance && "domain" in value;

    return isInstance;
}

export function BrandFromJSON(json: any): Brand {
    return BrandFromJSONTyped(json, false);
}

export function BrandFromJSONTyped(json: any, ignoreDiscriminator: boolean): Brand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'brandUuid': json['brand_uuid'],
        'domain': json['domain'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'brandingTitle': !exists(json, 'branding_title') ? undefined : json['branding_title'],
        'brandingLogo': !exists(json, 'branding_logo') ? undefined : json['branding_logo'],
        'brandingFavicon': !exists(json, 'branding_favicon') ? undefined : json['branding_favicon'],
        'flowAuthentication': !exists(json, 'flow_authentication') ? undefined : json['flow_authentication'],
        'flowInvalidation': !exists(json, 'flow_invalidation') ? undefined : json['flow_invalidation'],
        'flowRecovery': !exists(json, 'flow_recovery') ? undefined : json['flow_recovery'],
        'flowUnenrollment': !exists(json, 'flow_unenrollment') ? undefined : json['flow_unenrollment'],
        'flowUserSettings': !exists(json, 'flow_user_settings') ? undefined : json['flow_user_settings'],
        'flowDeviceCode': !exists(json, 'flow_device_code') ? undefined : json['flow_device_code'],
        'webCertificate': !exists(json, 'web_certificate') ? undefined : json['web_certificate'],
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
    };
}

export function BrandToJSON(value?: Brand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'domain': value.domain,
        'default': value._default,
        'branding_title': value.brandingTitle,
        'branding_logo': value.brandingLogo,
        'branding_favicon': value.brandingFavicon,
        'flow_authentication': value.flowAuthentication,
        'flow_invalidation': value.flowInvalidation,
        'flow_recovery': value.flowRecovery,
        'flow_unenrollment': value.flowUnenrollment,
        'flow_user_settings': value.flowUserSettings,
        'flow_device_code': value.flowDeviceCode,
        'web_certificate': value.webCertificate,
        'attributes': value.attributes,
    };
}

