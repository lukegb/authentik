/* tslint:disable */
/* eslint-disable */
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.2.1
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoleObjectPermission } from './RoleObjectPermission';
import {
    RoleObjectPermissionFromJSON,
    RoleObjectPermissionFromJSONTyped,
    RoleObjectPermissionToJSON,
} from './RoleObjectPermission';

/**
 * Roles assigned object permission serializer
 * @export
 * @interface RoleAssignedObjectPermission
 */
export interface RoleAssignedObjectPermission {
    /**
     * 
     * @type {string}
     * @memberof RoleAssignedObjectPermission
     */
    readonly rolePk: string;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignedObjectPermission
     */
    readonly name: string;
    /**
     * 
     * @type {Array<RoleObjectPermission>}
     * @memberof RoleAssignedObjectPermission
     */
    permissions: Array<RoleObjectPermission>;
}

/**
 * Check if a given object implements the RoleAssignedObjectPermission interface.
 */
export function instanceOfRoleAssignedObjectPermission(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rolePk" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "permissions" in value;

    return isInstance;
}

export function RoleAssignedObjectPermissionFromJSON(json: any): RoleAssignedObjectPermission {
    return RoleAssignedObjectPermissionFromJSONTyped(json, false);
}

export function RoleAssignedObjectPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleAssignedObjectPermission {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rolePk': json['role_pk'],
        'name': json['name'],
        'permissions': ((json['permissions'] as Array<any>).map(RoleObjectPermissionFromJSON)),
    };
}

export function RoleAssignedObjectPermissionToJSON(value?: RoleAssignedObjectPermission | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'permissions': ((value.permissions as Array<any>).map(RoleObjectPermissionToJSON)),
    };
}

